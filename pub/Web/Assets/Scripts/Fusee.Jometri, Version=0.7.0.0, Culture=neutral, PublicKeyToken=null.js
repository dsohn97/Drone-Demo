/* Generated by JSIL v0.8.2 build 31050. See http://jsil.org/ for more information. */ 
'use strict';
var $asm09 = JSIL.DeclareAssembly("Fusee.Jometri, Version=0.7.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Jometri");
/* class Fusee.Jometri.Node`2 */ 

(function Node$b2$Members () {
  var $, $thisType;

  function Node$b2__ctor (key, value) {
    this.Node$b2$Key$value = JSIL.CloneParameter($thisType.TK.get(this), key);
    this.Node$b2$Value$value = JSIL.CloneParameter($thisType.TV.get(this), value);
  }; 

  function Node$b2_get_Key () {
    return this.Node$b2$Key$value;
  }; 

  function Node$b2_get_Value () {
    return this.Node$b2$Value$value;
  }; 

  function Node$b2_set_Key (value) {
    this.Node$b2$Key$value = JSIL.CloneParameter($thisType.TK.get(this), value);
  }; 

  function Node$b2_set_Value (value) {
    this.Node$b2$Value$value = JSIL.CloneParameter($thisType.TV.get(this), value);
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Node`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TK"), $.GenericParameter("TV")]), 
      Node$b2__ctor
    );

    $.Method({Static:false, Public:true }, "get_Key", 
      new JSIL.MethodSignature($.GenericParameter("TK"), null), 
      Node$b2_get_Key
    );

    $.Method({Static:false, Public:true }, "get_Value", 
      new JSIL.MethodSignature($.GenericParameter("TV"), null), 
      Node$b2_get_Value
    );

    $.Method({Static:false, Public:true }, "set_Key", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TK")]), 
      Node$b2_set_Key
    );

    $.Method({Static:false, Public:true }, "set_Value", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TV")]), 
      Node$b2_set_Value
    );

    $.Field({Static:false, Public:false}, "Node$b2$Key$value", $.GenericParameter("TK"));

    $.Field({Static:false, Public:false}, "Node$b2$Value$value", $.GenericParameter("TV"));

    $.Field({Static:false, Public:true }, "LeftNode", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:true }, "RightNode", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:true }, "Key", $.GenericParameter("TK"));

    $.Property({Static:false, Public:true }, "Value", $.GenericParameter("TV"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.BinarySearchTree`2 */ 

(function BinarySearchTree$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };


  function BinarySearchTree$b2__ctor () {
  }; 

  function BinarySearchTree$b2_BalanceTree$00 () {
    var list = $T00().ToList$b1($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)))($thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).InOrderTraverseTree(this._globalRoot));
    this._globalRoot = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).BalanceTree(list, 0, (((list.get_Count() | 0) - 1) | 0));
  }; 

  function BinarySearchTree$b2_BalanceTree$01 (inorder, startIndex, endIndex) {
    var $im00 = $asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).get_Item;
    if ((startIndex | 0) > (endIndex | 0)) {
      var result = null;
    } else {
      var num = (((((startIndex | 0) + (endIndex | 0)) | 0) / 2) | 0);
      var node = new ($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))) (JSIL.CloneParameter($thisType.TK.get(this), $im00.Call(inorder, null, num).Node$b2$Key$value), JSIL.CloneParameter($thisType.TV.get(this), $im00.Call(inorder, null, num).Node$b2$Value$value));
      node.LeftNode = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).BalanceTree(inorder, startIndex, ((num - 1) | 0));
      node.RightNode = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).BalanceTree(inorder, ((num + 1) | 0), endIndex);
      result = node;
    }
    return result;
  }; 

  function BinarySearchTree$b2_DeleteNode$02 (key) {
    if (this._globalRoot !== null) {
      this._globalRoot = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).DeleteNode(this._globalRoot, JSIL.CloneParameter($thisType.TK.get(this), key));
    }
  }; 

  function BinarySearchTree$b2_DeleteNode$03 (root, key) {
    var $im00 = $asm0F.System.IComparable$b1.Of($thisType.TK.get(this)).CompareTo;
    var flag = root === null;
    if (flag) {
      var result = null;
    } else {
      var flag2 = ($im00.Call(key, null, JSIL.CloneParameter($thisType.TK.get(this), root.Node$b2$Key$value)) | 0) < 0;
      if (flag2) {
        root.LeftNode = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).DeleteNode(root.LeftNode, JSIL.CloneParameter($thisType.TK.get(this), key));
      } else {
        var flag3 = ($im00.Call(key, null, JSIL.CloneParameter($thisType.TK.get(this), root.Node$b2$Key$value)) | 0) > 0;
        if (flag3) {
          root.RightNode = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).DeleteNode(root.RightNode, JSIL.CloneParameter($thisType.TK.get(this), key));
        } else {
          var flag4 = (root.LeftNode === null) && 
          (root.RightNode === null);
          if (flag4) {
            result = null;
            return result;
          }
          var flag5 = root.LeftNode === null;
          if (flag5) {
            root = root.RightNode;
            result = root;
            return result;
          }
          var flag6 = root.RightNode === null;
          if (flag6) {
            root = root.LeftNode;
            result = root;
            return result;
          }
          var node = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).FindMin(root.RightNode);
          root.Node$b2$Value$value = JSIL.CloneParameter($thisType.TV.get(this), node.Node$b2$Value$value);
          root.Node$b2$Key$value = JSIL.CloneParameter($thisType.TK.get(this), node.Node$b2$Key$value);
          root.RightNode = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).DeleteNode(root.RightNode, JSIL.CloneParameter($thisType.TK.get(this), node.Node$b2$Key$value));
        }
      }
      result = root;
    }
    return result;
  }; 

  function BinarySearchTree$b2_FindLargestSmallerThanInBalanced$04 (key) {
    var node = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).FindLargestSmallerThanInBalanced(this._globalRoot, JSIL.CloneParameter($thisType.TK.get(this), key));
    return node.Node$b2$Value$value;
  }; 

  function BinarySearchTree$b2_FindLargestSmallerThanInBalanced$05 (root, key) {
    var $im00 = $asm0F.System.IComparable$b1.Of($thisType.TK.get(this)).CompareTo;
    var result = root;

    while (root !== null) {
      var key2 = JSIL.CloneParameter($thisType.TK.get(this), root.Node$b2$Key$value);
      if (($im00.Call(key2, null, JSIL.CloneParameter($thisType.TK.get(this), key)) | 0) <= 0) {
        key2 = JSIL.CloneParameter($thisType.TK.get(this), root.Node$b2$Key$value);
        var arg_39_0 = ($im00.Call(key2, null, JSIL.CloneParameter($thisType.TK.get(this), key)) | 0) === 0;
      } else {
        arg_39_0 = true;
      }
      var flag = arg_39_0;
      if (flag) {
        root = root.LeftNode;
      } else {
        result = root;
        root = root.RightNode;
      }
    }
    return result;
  }; 

  function BinarySearchTree$b2_FindMin$06 () {
    return $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).FindMin(this._globalRoot).Node$b2$Value$value;
  }; 

  function BinarySearchTree$b2_FindMin$07 (root) {

    for (var node = root; node.LeftNode !== null; node = node.LeftNode) {
    }
    return node;
  }; 

  function BinarySearchTree$b2_FindNode$08 (key) {
    var node = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).FindNode(this._globalRoot, JSIL.CloneParameter($thisType.TK.get(this), key));
    return node.Node$b2$Value$value;
  }; 

  function BinarySearchTree$b2_FindNode$09 (root, key) {
    var $im00 = $asm0F.System.IComparable$b1.Of($thisType.TK.get(this)).CompareTo;
    var node = null;
    var flag = root.LeftNode !== null;
    if (flag) {
      node = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).FindNode(root.LeftNode, JSIL.CloneParameter($thisType.TK.get(this), key));
    }
    var flag2 = ($im00.Call(key, null, JSIL.CloneParameter($thisType.TK.get(this), root.Node$b2$Key$value)) | 0) === 0;
    if (flag2) {
      var result = root;
    } else {
      var flag3 = (node === null) && 
      (root.RightNode !== null);
      if (flag3) {
        node = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).FindNode(root.RightNode, JSIL.CloneParameter($thisType.TK.get(this), key));
      }
      result = node;
    }
    return result;
  }; 

  function BinarySearchTree$b2_InOrderTraverseTree$0A () {
    var expr_07 = new ($asm09.Fusee.Jometri.BinarySearchTree$b2_$lInOrderTraverseTree$gd__7.Of($thisType.TK.get(this), $thisType.TV.get(this))) (-2);
    expr_07.$l$g4__this = this;
    return expr_07;
  }; 

  function BinarySearchTree$b2_InOrderTraverseTree$0B (root) {
    var expr_07 = new ($asm09.Fusee.Jometri.BinarySearchTree$b2_$lInOrderTraverseTree$gd__8.Of($thisType.TK.get(this), $thisType.TV.get(this))) (-2);
    expr_07.$l$g3__root = root;
    return expr_07;
  }; 

  function BinarySearchTree$b2_InsertNode$0C (key, value) {
    if (this._globalRoot === null) {
      this._globalRoot = new ($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))) (JSIL.CloneParameter($thisType.TK.get(this), key), JSIL.CloneParameter($thisType.TV.get(this), value));
    } else {
      $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).InsertNode(this._globalRoot, JSIL.CloneParameter($thisType.TK.get(this), key), JSIL.CloneParameter($thisType.TV.get(this), value));
    }
  }; 

  function BinarySearchTree$b2_InsertNode$0D (root, key, value) {
    var $im00 = $asm0F.System.IComparable$b1.Of($thisType.TK.get(this)).CompareTo;
    var flag = root === null;
    if (flag) {
      root = new ($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))) (JSIL.CloneParameter($thisType.TK.get(this), key), JSIL.CloneParameter($thisType.TV.get(this), value));
    } else {
      var flag2 = ($im00.Call(key, null, JSIL.CloneParameter($thisType.TK.get(this), root.Node$b2$Key$value)) | 0) <= 0;
      if (flag2) {
        root.LeftNode = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).InsertNode(root.LeftNode, JSIL.CloneParameter($thisType.TK.get(this), key), JSIL.CloneParameter($thisType.TV.get(this), value));
      } else {
        var flag3 = ($im00.Call(key, null, JSIL.CloneParameter($thisType.TK.get(this), root.Node$b2$Key$value)) | 0) > 0;
        if (flag3) {
          root.RightNode = $thisType.Of($thisType.TK.get(this), $thisType.TV.get(this)).InsertNode(root.RightNode, JSIL.CloneParameter($thisType.TK.get(this), key), JSIL.CloneParameter($thisType.TV.get(this), value));
        }
      }
    }
    return root;
  }; 

  function BinarySearchTree$b2_PreorderTraverseTree (root) {
    var expr_07 = new ($asm09.Fusee.Jometri.BinarySearchTree$b2_$lPreorderTraverseTree$gd__6.Of($thisType.TK.get(this), $thisType.TV.get(this))) (-2);
    expr_07.$l$g3__root = root;
    return expr_07;
  }; 

  function BinarySearchTree$b2_PreorderTraverseTreeKeys () {
    var expr_07 = new ($asm09.Fusee.Jometri.BinarySearchTree$b2_$lPreorderTraverseTreeKeys$gd__3.Of($thisType.TK.get(this), $thisType.TV.get(this))) (-2);
    expr_07.$l$g4__this = this;
    return expr_07;
  }; 

  function BinarySearchTree$b2_PreorderTraverseTreeNodes () {
    var expr_07 = new ($asm09.Fusee.Jometri.BinarySearchTree$b2_$lPreorderTraverseTreeNodes$gd__5.Of($thisType.TK.get(this), $thisType.TV.get(this))) (-2);
    expr_07.$l$g4__this = this;
    return expr_07;
  }; 

  function BinarySearchTree$b2_PreorderTraverseTreeValues () {
    var expr_07 = new ($asm09.Fusee.Jometri.BinarySearchTree$b2_$lPreorderTraverseTreeValues$gd__4.Of($thisType.TK.get(this), $thisType.TV.get(this))) (-2);
    expr_07.$l$g4__this = this;
    return expr_07;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.BinarySearchTree`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      BinarySearchTree$b2__ctor
    );

    $.Method({Static:false, Public:true }, "BalanceTree", 
      JSIL.MethodSignature.Void, 
      BinarySearchTree$b2_BalanceTree$00
    );

    $.Method({Static:true , Public:false}, "BalanceTree", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), [
          $asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), $.Int32, 
          $.Int32
        ]), 
      BinarySearchTree$b2_BalanceTree$01
    );

    $.Method({Static:false, Public:true }, "DeleteNode", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TK")]), 
      BinarySearchTree$b2_DeleteNode$02
    );

    $.Method({Static:true , Public:false}, "DeleteNode", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), $.GenericParameter("TK")]), 
      BinarySearchTree$b2_DeleteNode$03
    );

    $.Method({Static:false, Public:true }, "FindLargestSmallerThanInBalanced", 
      new JSIL.MethodSignature($.GenericParameter("TV"), [$.GenericParameter("TK")]), 
      BinarySearchTree$b2_FindLargestSmallerThanInBalanced$04
    );

    $.Method({Static:true , Public:false}, "FindLargestSmallerThanInBalanced", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), $.GenericParameter("TK")]), 
      BinarySearchTree$b2_FindLargestSmallerThanInBalanced$05
    );

    $.Method({Static:false, Public:true }, "FindMin", 
      new JSIL.MethodSignature($.GenericParameter("TV"), null), 
      BinarySearchTree$b2_FindMin$06
    );

    $.Method({Static:true , Public:false}, "FindMin", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      BinarySearchTree$b2_FindMin$07
    );

    $.Method({Static:false, Public:true }, "FindNode", 
      new JSIL.MethodSignature($.GenericParameter("TV"), [$.GenericParameter("TK")]), 
      BinarySearchTree$b2_FindNode$08
    );

    $.Method({Static:true , Public:false}, "FindNode", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), $.GenericParameter("TK")]), 
      BinarySearchTree$b2_FindNode$09
    );

    $.Method({Static:false, Public:true }, "InOrderTraverseTree", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TK")]), null), 
      BinarySearchTree$b2_InOrderTraverseTree$0A
    );

    $.Method({Static:true , Public:false}, "InOrderTraverseTree", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      BinarySearchTree$b2_InOrderTraverseTree$0B
    );

    $.Method({Static:false, Public:true }, "InsertNode", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TK"), $.GenericParameter("TV")]), 
      BinarySearchTree$b2_InsertNode$0C
    );

    $.Method({Static:true , Public:false}, "InsertNode", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), [
          $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), $.GenericParameter("TK"), 
          $.GenericParameter("TV")
        ]), 
      BinarySearchTree$b2_InsertNode$0D
    );

    $.Method({Static:true , Public:false}, "PreorderTraverseTree", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      BinarySearchTree$b2_PreorderTraverseTree
    );

    $.Method({Static:false, Public:true }, "PreorderTraverseTreeKeys", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TK")]), null), 
      BinarySearchTree$b2_PreorderTraverseTreeKeys
    );

    $.Method({Static:false, Public:false}, "PreorderTraverseTreeNodes", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), null), 
      BinarySearchTree$b2_PreorderTraverseTreeNodes
    );

    $.Method({Static:false, Public:true }, "PreorderTraverseTreeValues", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TV")]), null), 
      BinarySearchTree$b2_PreorderTraverseTreeValues
    );

    $.Field({Static:false, Public:false}, "_globalRoot", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTreeKeys>d__3 */ 

(function $lPreorderTraverseTreeKeys$gd__3$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };


  function $lPreorderTraverseTreeKeys$gd__3__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__1 !== null) {
      $IM00().Call(this.$l$gs__1, null);
    }
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_MoveNext ($exception) {
    var $im00 = $asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).GetEnumerator;
    var $im01 = $asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).get_Current;
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lnode$g5__2 = null;
      } else {
        this.$l$g1__state = -1;
        if (this.$l$g4__this._globalRoot === null) {
          result = false;
          return result;
        }
        this.$l$gs__1 = $im00.Call($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).PreorderTraverseTree(this.$l$g4__this._globalRoot), null);
        this.$l$g1__state = -3;
      }
      if (!$IM01().Call(this.$l$gs__1, null)) {
        this.$l$gm__Finally1();
        this.$l$gs__1 = null;
        result = false;
      } else {
        this.$lnode$g5__2 = $im01.Call(this.$l$gs__1, null);
        this.$l$g2__current = JSIL.CloneParameter($thisType.TK.get(this), this.$lnode$g5__2.Node$b2$Key$value);
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_System_Collections_Generic_IEnumerable$lTK$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lPreorderTraverseTreeKeys$gd__ = this;
    } else {
      $lPreorderTraverseTreeKeys$gd__ = new ($thisType.Of($thisType.TK.get(this), $thisType.TV.get(this))) (0);
      $lPreorderTraverseTreeKeys$gd__.$l$g4__this = this.$l$g4__this;
    }
    return $lPreorderTraverseTreeKeys$gd__;
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_System_Collections_Generic_IEnumerator$lTK$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lTK$g_GetEnumerator();
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lPreorderTraverseTreeKeys$gd__3_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTreeKeys>d__3", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lPreorderTraverseTreeKeys$gd__3__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeKeys$gd__3_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lPreorderTraverseTreeKeys$gd__3_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lTK$g.GetEnumerator", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TK")]), null), 
      $lPreorderTraverseTreeKeys$gd__3_System_Collections_Generic_IEnumerable$lTK$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TK")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lTK$g.get_Current", 
      new JSIL.MethodSignature($.GenericParameter("TK"), null), 
      $lPreorderTraverseTreeKeys$gd__3_System_Collections_Generic_IEnumerator$lTK$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TK")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lPreorderTraverseTreeKeys$gd__3_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lPreorderTraverseTreeKeys$gd__3_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeKeys$gd__3_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeKeys$gd__3_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.GenericParameter("TK"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.BinarySearchTree`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lnode$g5__2", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lTK$g.Current", $.GenericParameter("TK"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TK")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TK")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTreeValues>d__4 */ 

(function $lPreorderTraverseTreeValues$gd__4$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function $lPreorderTraverseTreeValues$gd__4__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lPreorderTraverseTreeValues$gd__4_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$gs__2, null);
  }; 

  function $lPreorderTraverseTreeValues$gd__4_MoveNext ($exception) {
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lnode$g5__3 = null;
      } else {
        this.$l$g1__state = -1;
        if (this.$l$g4__this._globalRoot === null) {
          result = false;
          return result;
        }
        this.$ltraverseGlobal$g5__1 = $T05().ToList$b1($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)))($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).PreorderTraverseTree(this.$l$g4__this._globalRoot));
        this.$l$gs__2 = $asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).prototype.GetEnumerator.call(this.$ltraverseGlobal$g5__1);
        this.$l$g1__state = -3;
      }
      if (!$asm0F.System.Collections.Generic.List$b1_Enumerator.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).prototype.MoveNext.call(this.$l$gs__2)) {
        this.$l$gm__Finally1();
        this.$l$gs__2 = new ($asm0F.System.Collections.Generic.List$b1_Enumerator.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)))) ();
        result = false;
      } else {
        this.$lnode$g5__3 = $asm0F.System.Collections.Generic.List$b1_Enumerator.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).prototype.get_Current.call(this.$l$gs__2);
        this.$l$g2__current = JSIL.CloneParameter($thisType.TV.get(this), this.$lnode$g5__3.Node$b2$Value$value);
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lPreorderTraverseTreeValues$gd__4_System_Collections_Generic_IEnumerable$lTV$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lPreorderTraverseTreeValues$gd__ = this;
    } else {
      $lPreorderTraverseTreeValues$gd__ = new ($thisType.Of($thisType.TK.get(this), $thisType.TV.get(this))) (0);
      $lPreorderTraverseTreeValues$gd__.$l$g4__this = this.$l$g4__this;
    }
    return $lPreorderTraverseTreeValues$gd__;
  }; 

  function $lPreorderTraverseTreeValues$gd__4_System_Collections_Generic_IEnumerator$lTV$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTreeValues$gd__4_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lTV$g_GetEnumerator();
  }; 

  function $lPreorderTraverseTreeValues$gd__4_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTreeValues$gd__4_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lPreorderTraverseTreeValues$gd__4_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTreeValues>d__4", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lPreorderTraverseTreeValues$gd__4__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeValues$gd__4_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lPreorderTraverseTreeValues$gd__4_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lTV$g.GetEnumerator", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TV")]), null), 
      $lPreorderTraverseTreeValues$gd__4_System_Collections_Generic_IEnumerable$lTV$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TV")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lTV$g.get_Current", 
      new JSIL.MethodSignature($.GenericParameter("TV"), null), 
      $lPreorderTraverseTreeValues$gd__4_System_Collections_Generic_IEnumerator$lTV$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TV")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lPreorderTraverseTreeValues$gd__4_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lPreorderTraverseTreeValues$gd__4_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeValues$gd__4_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeValues$gd__4_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.GenericParameter("TV"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.BinarySearchTree`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$ltraverseGlobal$g5__1", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$l$gs__2", $asm0F.TypeRef("System.Collections.Generic.List`1+Enumerator", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lnode$g5__3", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lTV$g.Current", $.GenericParameter("TV"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TV")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TV")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTreeNodes>d__5 */ 

(function $lPreorderTraverseTreeNodes$gd__5$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };


  function $lPreorderTraverseTreeNodes$gd__5__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__1 !== null) {
      $IM00().Call(this.$l$gs__1, null);
    }
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_MoveNext ($exception) {
    var $im00 = $asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).GetEnumerator;
    var $im01 = $asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).get_Current;
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lnode$g5__2 = null;
      } else {
        this.$l$g1__state = -1;
        if (this.$l$g4__this._globalRoot === null) {
          result = false;
          return result;
        }
        this.$l$gs__1 = $im00.Call($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).PreorderTraverseTree(this.$l$g4__this._globalRoot), null);
        this.$l$g1__state = -3;
      }
      if (!$IM01().Call(this.$l$gs__1, null)) {
        this.$l$gm__Finally1();
        this.$l$gs__1 = null;
        result = false;
      } else {
        this.$lnode$g5__2 = $im01.Call(this.$l$gs__1, null);
        this.$l$g2__current = this.$lnode$g5__2;
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lPreorderTraverseTreeNodes$gd__ = this;
    } else {
      $lPreorderTraverseTreeNodes$gd__ = new ($thisType.Of($thisType.TK.get(this), $thisType.TV.get(this))) (0);
      $lPreorderTraverseTreeNodes$gd__.$l$g4__this = this.$l$g4__this;
    }
    return $lPreorderTraverseTreeNodes$gd__;
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_System_Collections_Generic_IEnumerator$lFusee_Jometri_Node$lTK$cmTV$g$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator();
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lPreorderTraverseTreeNodes$gd__5_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTreeNodes>d__5", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lPreorderTraverseTreeNodes$gd__5__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeNodes$gd__5_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lPreorderTraverseTreeNodes$gd__5_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Node$lTK$cmTV$g$g.GetEnumerator", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), null), 
      $lPreorderTraverseTreeNodes$gd__5_System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Node$lTK$cmTV$g$g.get_Current", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), null), 
      $lPreorderTraverseTreeNodes$gd__5_System_Collections_Generic_IEnumerator$lFusee_Jometri_Node$lTK$cmTV$g$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lPreorderTraverseTreeNodes$gd__5_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lPreorderTraverseTreeNodes$gd__5_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeNodes$gd__5_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTreeNodes$gd__5_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.BinarySearchTree`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lnode$g5__2", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Node$lTK$cmTV$g$g.Current", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTree>d__6 */ 

(function $lPreorderTraverseTree$gd__6$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };


  function $lPreorderTraverseTree$gd__6__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lPreorderTraverseTree$gd__6_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__1 !== null) {
      $IM00().Call(this.$l$gs__1, null);
    }
  }; 

  function $lPreorderTraverseTree$gd__6_$l$gm__Finally2 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__3 !== null) {
      $IM00().Call(this.$l$gs__3, null);
    }
  }; 

  function $lPreorderTraverseTree$gd__6_MoveNext ($exception) {
    var $im00 = $asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).GetEnumerator;
    var $im01 = $asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).get_Current;
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                if (this.root === null) {
                  var result = false;
                  return result;
                }
                this.$l$g2__current = this.root;
                this.$l$g1__state = 1;
                result = true;
                return result;

              case 1: 
                this.$l$g1__state = -1;
                this.$l$gs__1 = $im00.Call($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).PreorderTraverseTree(this.root.LeftNode), null);
                this.$l$g1__state = -3;
                break;

              case 2: 
                this.$l$g1__state = -3;
                this.$lv$g5__2 = null;
                break;

              case 3: 
                this.$l$g1__state = -4;
                this.$lv$g5__4 = null;
                $label0 = 1 /* goto IL_14D */ ;
                continue $labelgroup0;

              default: 
                result = false;
                return result;

            }
            if ($IM01().Call(this.$l$gs__1, null)) {
              this.$lv$g5__2 = $im01.Call(this.$l$gs__1, null);
              this.$l$g2__current = this.$lv$g5__2;
              this.$l$g1__state = 2;
              result = true;
              return result;
            }
            this.$l$gm__Finally1();
            this.$l$gs__1 = null;
            this.$l$gs__3 = $im00.Call($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).PreorderTraverseTree(this.root.RightNode), null);
            this.$l$g1__state = -4;

            $label0 = 1 /* goto IL_14D */ ;
            continue $labelgroup0;
          case 1: /* IL_14D */ 
            if (!$IM01().Call(this.$l$gs__3, null)) {
              this.$l$gm__Finally2();
              this.$l$gs__3 = null;
              result = false;
            } else {
              this.$lv$g5__4 = $im01.Call(this.$l$gs__3, null);
              this.$l$g2__current = this.$lv$g5__4;
              this.$l$g1__state = 3;
              result = true;
            }

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lPreorderTraverseTree$gd__6_System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lPreorderTraverseTree$gd__ = this;
    } else {
      $lPreorderTraverseTree$gd__ = new ($thisType.Of($thisType.TK.get(this), $thisType.TV.get(this))) (0);
    }
    $lPreorderTraverseTree$gd__.root = this.$l$g3__root;
    return $lPreorderTraverseTree$gd__;
  }; 

  function $lPreorderTraverseTree$gd__6_System_Collections_Generic_IEnumerator$lFusee_Jometri_Node$lTK$cmTV$g$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTree$gd__6_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator();
  }; 

  function $lPreorderTraverseTree$gd__6_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lPreorderTraverseTree$gd__6_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lPreorderTraverseTree$gd__6_System_IDisposable_Dispose () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          var num = (this.$l$g1__state | 0);
          if (num <= -3) {
            if (num === -4) {
              $label0 = 1 /* goto IL_32 */ ;
              continue $labelgroup0;
            }
            if (num !== -3) {
              return;
            }
          } else if (num !== 2) {
            if (num !== 3) {
              return;
            }
            $label0 = 1 /* goto IL_32 */ ;
            continue $labelgroup0;
          }
          try {
          } finally {
            this.$l$gm__Finally1();
          }
          return;

          $label0 = 1 /* goto IL_32 */ ;
          continue $labelgroup0;
        case 1: /* IL_32 */ 
          try {
          } finally {
            this.$l$gm__Finally2();
          }

          break $labelgroup0;
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.BinarySearchTree`2+<PreorderTraverseTree>d__6", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lPreorderTraverseTree$gd__6__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTree$gd__6_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally2", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTree$gd__6_$l$gm__Finally2
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lPreorderTraverseTree$gd__6_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Node$lTK$cmTV$g$g.GetEnumerator", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), null), 
      $lPreorderTraverseTree$gd__6_System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Node$lTK$cmTV$g$g.get_Current", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), null), 
      $lPreorderTraverseTree$gd__6_System_Collections_Generic_IEnumerator$lFusee_Jometri_Node$lTK$cmTV$g$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lPreorderTraverseTree$gd__6_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lPreorderTraverseTree$gd__6_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTree$gd__6_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lPreorderTraverseTree$gd__6_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "root", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:true }, "$l$g3__root", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lv$g5__2", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gs__3", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lv$g5__4", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Node$lTK$cmTV$g$g.Current", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.BinarySearchTree`2+<InOrderTraverseTree>d__7 */ 

(function $lInOrderTraverseTree$gd__7$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };


  function $lInOrderTraverseTree$gd__7__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lInOrderTraverseTree$gd__7_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__1 !== null) {
      $IM00().Call(this.$l$gs__1, null);
    }
  }; 

  function $lInOrderTraverseTree$gd__7_MoveNext ($exception) {
    var $im00 = $asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).GetEnumerator;
    var $im01 = $asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).get_Current;
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lnode$g5__2 = null;
      } else {
        this.$l$g1__state = -1;
        if (this.$l$g4__this._globalRoot === null) {
          result = false;
          return result;
        }
        this.$l$gs__1 = $im00.Call($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).InOrderTraverseTree(this.$l$g4__this._globalRoot), null);
        this.$l$g1__state = -3;
      }
      if (!$IM01().Call(this.$l$gs__1, null)) {
        this.$l$gm__Finally1();
        this.$l$gs__1 = null;
        result = false;
      } else {
        this.$lnode$g5__2 = $im01.Call(this.$l$gs__1, null);
        this.$l$g2__current = JSIL.CloneParameter($thisType.TK.get(this), this.$lnode$g5__2.Node$b2$Key$value);
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lInOrderTraverseTree$gd__7_System_Collections_Generic_IEnumerable$lTK$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lInOrderTraverseTree$gd__ = this;
    } else {
      $lInOrderTraverseTree$gd__ = new ($thisType.Of($thisType.TK.get(this), $thisType.TV.get(this))) (0);
      $lInOrderTraverseTree$gd__.$l$g4__this = this.$l$g4__this;
    }
    return $lInOrderTraverseTree$gd__;
  }; 

  function $lInOrderTraverseTree$gd__7_System_Collections_Generic_IEnumerator$lTK$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lInOrderTraverseTree$gd__7_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lTK$g_GetEnumerator();
  }; 

  function $lInOrderTraverseTree$gd__7_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lInOrderTraverseTree$gd__7_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lInOrderTraverseTree$gd__7_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.BinarySearchTree`2+<InOrderTraverseTree>d__7", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lInOrderTraverseTree$gd__7__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lInOrderTraverseTree$gd__7_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lInOrderTraverseTree$gd__7_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lTK$g.GetEnumerator", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TK")]), null), 
      $lInOrderTraverseTree$gd__7_System_Collections_Generic_IEnumerable$lTK$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TK")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lTK$g.get_Current", 
      new JSIL.MethodSignature($.GenericParameter("TK"), null), 
      $lInOrderTraverseTree$gd__7_System_Collections_Generic_IEnumerator$lTK$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TK")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lInOrderTraverseTree$gd__7_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lInOrderTraverseTree$gd__7_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lInOrderTraverseTree$gd__7_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lInOrderTraverseTree$gd__7_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $.GenericParameter("TK"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.BinarySearchTree`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lnode$g5__2", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lTK$g.Current", $.GenericParameter("TK"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TK")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TK")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.BinarySearchTree`2+<InOrderTraverseTree>d__8 */ 

(function $lInOrderTraverseTree$gd__8$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };


  function $lInOrderTraverseTree$gd__8__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lInOrderTraverseTree$gd__8_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__1 !== null) {
      $IM00().Call(this.$l$gs__1, null);
    }
  }; 

  function $lInOrderTraverseTree$gd__8_$l$gm__Finally2 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__3 !== null) {
      $IM00().Call(this.$l$gs__3, null);
    }
  }; 

  function $lInOrderTraverseTree$gd__8_MoveNext ($exception) {
    var $im00 = $asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).GetEnumerator;
    var $im01 = $asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($thisType.TK.get(this), $thisType.TV.get(this))).get_Current;
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                if (this.root === null) {
                  var result = false;
                  return result;
                }
                this.$l$gs__1 = $im00.Call($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).InOrderTraverseTree(this.root.LeftNode), null);
                this.$l$g1__state = -3;
                break;

              case 1: 
                this.$l$g1__state = -3;
                this.$lv$g5__2 = null;
                break;

              case 2: 
                this.$l$g1__state = -1;
                this.$l$gs__3 = $im00.Call($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($thisType.TK.get(this), $thisType.TV.get(this)).InOrderTraverseTree(this.root.RightNode), null);
                this.$l$g1__state = -4;
                $label0 = 1 /* goto IL_14D */ ;
                continue $labelgroup0;

              case 3: 
                this.$l$g1__state = -4;
                this.$lv$g5__4 = null;
                $label0 = 1 /* goto IL_14D */ ;
                continue $labelgroup0;

              default: 
                result = false;
                return result;

            }
            if (!$IM01().Call(this.$l$gs__1, null)) {
              this.$l$gm__Finally1();
              this.$l$gs__1 = null;
              this.$l$g2__current = this.root;
              this.$l$g1__state = 2;
              result = true;
              return result;
            }
            this.$lv$g5__2 = $im01.Call(this.$l$gs__1, null);
            this.$l$g2__current = this.$lv$g5__2;
            this.$l$g1__state = 1;
            result = true;
            return result;

            $label0 = 1 /* goto IL_14D */ ;
            continue $labelgroup0;
          case 1: /* IL_14D */ 
            if (!$IM01().Call(this.$l$gs__3, null)) {
              this.$l$gm__Finally2();
              this.$l$gs__3 = null;
              result = false;
            } else {
              this.$lv$g5__4 = $im01.Call(this.$l$gs__3, null);
              this.$l$g2__current = this.$lv$g5__4;
              this.$l$g1__state = 3;
              result = true;
            }

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lInOrderTraverseTree$gd__8_System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lInOrderTraverseTree$gd__ = this;
    } else {
      $lInOrderTraverseTree$gd__ = new ($thisType.Of($thisType.TK.get(this), $thisType.TV.get(this))) (0);
    }
    $lInOrderTraverseTree$gd__.root = this.$l$g3__root;
    return $lInOrderTraverseTree$gd__;
  }; 

  function $lInOrderTraverseTree$gd__8_System_Collections_Generic_IEnumerator$lFusee_Jometri_Node$lTK$cmTV$g$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lInOrderTraverseTree$gd__8_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator();
  }; 

  function $lInOrderTraverseTree$gd__8_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lInOrderTraverseTree$gd__8_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lInOrderTraverseTree$gd__8_System_IDisposable_Dispose () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          var num = (this.$l$g1__state | 0);
          if (num <= -3) {
            if (num === -4) {
              $label0 = 1 /* goto IL_32 */ ;
              continue $labelgroup0;
            }
            if (num !== -3) {
              return;
            }
          } else if (num !== 1) {
            if (num !== 3) {
              return;
            }
            $label0 = 1 /* goto IL_32 */ ;
            continue $labelgroup0;
          }
          try {
          } finally {
            this.$l$gm__Finally1();
          }
          return;

          $label0 = 1 /* goto IL_32 */ ;
          continue $labelgroup0;
        case 1: /* IL_32 */ 
          try {
          } finally {
            this.$l$gm__Finally2();
          }

          break $labelgroup0;
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.BinarySearchTree`2+<InOrderTraverseTree>d__8", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TK", "TV"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lInOrderTraverseTree$gd__8__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lInOrderTraverseTree$gd__8_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally2", 
      JSIL.MethodSignature.Void, 
      $lInOrderTraverseTree$gd__8_$l$gm__Finally2
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lInOrderTraverseTree$gd__8_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Node$lTK$cmTV$g$g.GetEnumerator", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), null), 
      $lInOrderTraverseTree$gd__8_System_Collections_Generic_IEnumerable$lFusee_Jometri_Node$lTK$cmTV$g$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Node$lTK$cmTV$g$g.get_Current", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]), null), 
      $lInOrderTraverseTree$gd__8_System_Collections_Generic_IEnumerator$lFusee_Jometri_Node$lTK$cmTV$g$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lInOrderTraverseTree$gd__8_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lInOrderTraverseTree$gd__8_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lInOrderTraverseTree$gd__8_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lInOrderTraverseTree$gd__8_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "root", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:true }, "$l$g3__root", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lv$g5__2", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Field({Static:false, Public:false}, "$l$gs__3", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]));

    $.Field({Static:false, Public:false}, "$lv$g5__4", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Node$lTK$cmTV$g$g.Current", $asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.GenericParameter("TK"), $.GenericParameter("TV")])]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.CreatePrimitiveGeometry */ 

(function CreatePrimitiveGeometry$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.ArgumentException)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.Double)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize(System.Array.Of($asm0F.System.Int32))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Math)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Face))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.Fusee.Jometri.PolyBoundary)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.PolyBoundary))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm09.Fusee.Jometri.Extrude)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0F.System.Array)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.ArgumentException, [$asm0F.System.String]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Geometry, null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Vertex, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float3, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.HalfEdge, [$asm0F.System.Int32]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Face, [$asm0F.System.Int32]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0A.Fusee.Math.Core.float3), null))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.PolyBoundary), null))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Geometry, [$asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.PolyBoundary)]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm0F.System.Array, $asm0F.System.Array, 
        $asm0F.System.Int32
      ]))) ();
  };


  function CreatePrimitiveGeometry__ctor () {
  }; 

  function CreatePrimitiveGeometry_CreateConeGeometry (baseRadius, dimensionY, sliceCount) {
    var $temp00;
    var vertex4 = new ($T02())(), halfEdge3 = new ($T03())(), halfEdge4 = new ($T03())(), halfEdge5 = new ($T03())(), halfEdge6 = new ($T03())(), halfEdge7 = new ($T03())(), halfEdge8 = new ($T03())(), face = new ($T04())(), face2 = new ($T04())();
    var flag = (sliceCount | 0) < 3;
    if (flag) {
      sliceCount = 3;
    }
    var flag2 = (+baseRadius <= 0) || 
    (+dimensionY <= 0);
    if (flag2) {
      throw $S00().Construct("You can not input paramaters <= 0");
    }
    var geometry = $S01().Construct();
    var vertex = $S02().Construct(geometry.CreateVertHandleId(), $S03().Construct(0, +((+dimensionY / 2)), 0));
    var vertex2 = $S02().Construct(geometry.CreateVertHandleId(), $S03().Construct(0, +((-dimensionY / 2)), 0));
    var num = +((6.2831853071795862 / +sliceCount));
    var y = +((-dimensionY / 2));
    var array = null;
    var halfEdge = new ($T03())();
    var halfEdge2 = new ($T03())();
    var vertex3 = vertex2.MemberwiseClone();

    for (var i = 1; i < (((sliceCount | 0) + 1) | 0); i = ((i + 1) | 0)) {
      var x = Math.fround(Math.cos((num * +i))) * +baseRadius;
      var z = Math.fround(Math.sin((num * +i))) * +baseRadius;
      (vertex4 = vertex4.MemberwiseClone(), 
        $S04().Call($T02().prototype, "_ctor", null, vertex4, geometry.CreateVertHandleId(), $S03().Construct(x, y, z)));
      (halfEdge3 = halfEdge3.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge3, geometry.CreateHalfEdgeHandleId()));
      (halfEdge4 = halfEdge4.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge4, geometry.CreateHalfEdgeHandleId()));
      vertex4.IncidentHalfEdge = (halfEdge4.Handle | 0);
      halfEdge3.OriginVertex = (vertex2.Handle | 0);
      halfEdge4.OriginVertex = (vertex4.Handle | 0);
      halfEdge3.TwinHalfEdge = (halfEdge4.Handle | 0);
      halfEdge4.TwinHalfEdge = (halfEdge3.Handle | 0);
      (halfEdge5 = halfEdge5.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge5, geometry.CreateHalfEdgeHandleId()));
      (halfEdge6 = halfEdge6.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge6, geometry.CreateHalfEdgeHandleId()));
      vertex.IncidentHalfEdge = (halfEdge5.Handle | 0);
      vertex2.IncidentHalfEdge = (halfEdge3.Handle | 0);
      halfEdge5.OriginVertex = (vertex.Handle | 0);
      halfEdge6.OriginVertex = (vertex4.Handle | 0);
      halfEdge5.TwinHalfEdge = (halfEdge6.Handle | 0);
      halfEdge6.TwinHalfEdge = (halfEdge5.Handle | 0);
      var flag3 = $T02().op_Equality(vertex3, vertex2);
      if (flag3) {
        array = JSIL.Array.New($T01(), [vertex4.Handle, halfEdge3.Handle, halfEdge6.Handle]);
        halfEdge = halfEdge5.MemberwiseClone();
        halfEdge2 = halfEdge4.MemberwiseClone();
        (geometry.Geometry$DictVertices$value).Add(vertex4.Handle, vertex4.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge4.Handle, halfEdge4.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge5.Handle, halfEdge5.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge6.Handle, halfEdge6.MemberwiseClone());
        vertex3 = vertex4.MemberwiseClone();
      } else {
        (halfEdge7 = halfEdge7.MemberwiseClone(), 
          $T03().prototype._ctor.call(halfEdge7, geometry.CreateHalfEdgeHandleId()));
        (halfEdge8 = halfEdge8.MemberwiseClone(), 
          $T03().prototype._ctor.call(halfEdge8, geometry.CreateHalfEdgeHandleId()));
        halfEdge7.OriginVertex = (vertex3.Handle | 0);
        halfEdge8.OriginVertex = (vertex4.Handle | 0);
        halfEdge7.TwinHalfEdge = (halfEdge8.Handle | 0);
        halfEdge8.TwinHalfEdge = (halfEdge7.Handle | 0);
        (face = face.MemberwiseClone(), 
          $T04().prototype._ctor.call(face, geometry.CreateFaceHandleId()));
        halfEdge7.NextHalfEdge = (halfEdge6.Handle | 0);
        face.OuterHalfEdge = (halfEdge7.Handle | 0);
        halfEdge6.NextHalfEdge = (halfEdge.Handle | 0);
        halfEdge.NextHalfEdge = (halfEdge7.Handle | 0);
        halfEdge7.IncidentFace = (face.Handle | 0);
        halfEdge6.IncidentFace = (face.Handle | 0);
        halfEdge.IncidentFace = (face.Handle | 0);
        halfEdge7.PrevHalfEdge = (halfEdge.Handle | 0);
        halfEdge.PrevHalfEdge = (halfEdge6.Handle | 0);
        halfEdge6.PrevHalfEdge = (halfEdge7.Handle | 0);
        (face2 = face2.MemberwiseClone(), 
          $T04().prototype._ctor.call(face2, geometry.CreateFaceHandleId()));
        halfEdge8.NextHalfEdge = (halfEdge2.Handle | 0);
        face2.OuterHalfEdge = (halfEdge8.Handle | 0);
        halfEdge2.NextHalfEdge = (halfEdge3.Handle | 0);
        halfEdge3.NextHalfEdge = (halfEdge8.Handle | 0);
        halfEdge8.IncidentFace = (face2.Handle | 0);
        halfEdge2.IncidentFace = (face2.Handle | 0);
        halfEdge3.IncidentFace = (face2.Handle | 0);
        halfEdge8.PrevHalfEdge = (halfEdge3.Handle | 0);
        halfEdge3.PrevHalfEdge = (halfEdge2.Handle | 0);
        halfEdge2.PrevHalfEdge = (halfEdge8.Handle | 0);
        (geometry.Geometry$DictVertices$value).Add(vertex4.Handle, vertex4.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge4.Handle, halfEdge4.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge5.Handle, halfEdge5.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge6.Handle, halfEdge6.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge7.Handle, halfEdge7.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge8.Handle, halfEdge8.MemberwiseClone());
        geometry.ReplaceHalfEdge(halfEdge2.MemberwiseClone());
        geometry.ReplaceHalfEdge(halfEdge.MemberwiseClone());
        (geometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
        (geometry.Geometry$DictFaces$value).Add(face2.Handle, face2.MemberwiseClone());
        halfEdge2 = halfEdge4.MemberwiseClone();
        halfEdge = halfEdge5.MemberwiseClone();
        vertex3 = vertex4;
      }
    }
    (geometry.Geometry$DictVertices$value).Add(vertex2.Handle, vertex2.MemberwiseClone());
    (geometry.Geometry$DictVertices$value).Add(vertex.Handle, vertex.MemberwiseClone());
    var vertexByHandle = geometry.GetVertexByHandle(array[0]).MemberwiseClone();
    var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(array[1]).MemberwiseClone();
    var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(array[2]).MemberwiseClone();
    var halfEdge9 = $S05().Construct(geometry.CreateHalfEdgeHandleId());
    var halfEdge10 = $S05().Construct(geometry.CreateHalfEdgeHandleId());
    halfEdge9.OriginVertex = (vertex3.Handle | 0);
    halfEdge10.OriginVertex = (vertexByHandle.Handle | 0);
    halfEdge9.TwinHalfEdge = (halfEdge10.Handle | 0);
    halfEdge10.TwinHalfEdge = (halfEdge9.Handle | 0);
    var face3 = $S06().Construct(geometry.CreateFaceHandleId());
    face3.OuterHalfEdge = (halfEdge9.Handle | 0);
    var face4 = face3.MemberwiseClone();
    halfEdge9.NextHalfEdge = (halfEdgeByHandle2.Handle | 0);
    halfEdgeByHandle2.NextHalfEdge = (halfEdge.Handle | 0);
    halfEdge.NextHalfEdge = (halfEdge9.Handle | 0);
    halfEdge9.IncidentFace = (face4.Handle | 0);
    halfEdgeByHandle2.IncidentFace = (face4.Handle | 0);
    halfEdge.IncidentFace = (face4.Handle | 0);
    halfEdge9.PrevHalfEdge = (halfEdge.Handle | 0);
    halfEdge.PrevHalfEdge = (halfEdgeByHandle2.Handle | 0);
    halfEdgeByHandle2.PrevHalfEdge = (halfEdge9.Handle | 0);
    (face3 = face3.MemberwiseClone(), 
      $T04().prototype._ctor.call(face3, geometry.CreateFaceHandleId()));
    face3.OuterHalfEdge = (halfEdge10.Handle | 0);
    var face5 = face3;
    halfEdge10.NextHalfEdge = (halfEdge2.Handle | 0);
    halfEdge2.NextHalfEdge = (halfEdgeByHandle.Handle | 0);
    halfEdgeByHandle.NextHalfEdge = (halfEdge10.Handle | 0);
    halfEdge10.IncidentFace = (face5.Handle | 0);
    halfEdge2.IncidentFace = (face5.Handle | 0);
    halfEdgeByHandle.IncidentFace = (face5.Handle | 0);
    halfEdge10.PrevHalfEdge = (halfEdgeByHandle.Handle | 0);
    halfEdgeByHandle.PrevHalfEdge = (halfEdge2.Handle | 0);
    halfEdge2.PrevHalfEdge = (halfEdge10.Handle | 0);
    geometry.ReplaceHalfEdge(halfEdgeByHandle.MemberwiseClone());
    (geometry.Geometry$DictHalfEdges$value).Add(halfEdge9.Handle, halfEdge9.MemberwiseClone());
    (geometry.Geometry$DictHalfEdges$value).Add(halfEdge10.Handle, halfEdge10.MemberwiseClone());
    geometry.ReplaceHalfEdge(halfEdge2.MemberwiseClone());
    geometry.ReplaceHalfEdge(halfEdge.MemberwiseClone());
    geometry.ReplaceHalfEdge(halfEdgeByHandle2.MemberwiseClone());
    (geometry.Geometry$DictFaces$value).Add(face4.Handle, face4.MemberwiseClone());
    (geometry.Geometry$DictFaces$value).Add(face5.Handle, face5.MemberwiseClone());
    var list = $T10().ToList$b1($T04())(geometry.GetAllFaces());

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      geometry.SetFaceNormal($T10().ToList$b1($T02())(geometry.GetFaceVertices(current.Handle)), current);
    }
    return geometry;
  }; 

  function CreatePrimitiveGeometry_CreateCuboidGeometry (dimensionX, dimensionY, dimensionZ) {
    var flag = (+dimensionX <= 0) || 
    (+dimensionY <= 0) || 
    (+dimensionZ <= 0);
    if (flag) {
      throw $S00().Construct("The dimension values can not be <= 0");
    }
    var num = +((+dimensionX / 2));
    var num2 = +((+dimensionY / 2));
    var num3 = +((+dimensionZ / 2));
    var polyBoundary = new ($T11())();
    var expr_57 = $S07().Construct();
    expr_57.Add($S03().Construct(-num, num2, -num3));
    expr_57.Add($S03().Construct(-num, -num2, -num3));
    expr_57.Add($S03().Construct(num, -num2, -num3));
    expr_57.Add($S03().Construct(num, num2, -num3));
    polyBoundary.Points = expr_57;
    polyBoundary.IsOuter = true;
    var item = polyBoundary;
    var expr_B0 = $S08().Construct();
    expr_B0.Add(item.MemberwiseClone());
    var outlines = expr_B0;
    var geometry = $S09().Construct(outlines);
    $T14().Extrude2DPolygon(geometry, dimensionZ, false);
    return geometry;
  }; 

  function CreatePrimitiveGeometry_CreatePyramidGeometry (dimensionX, dimensionY, dimensionZ) {
    var $temp00;
    var vertex = new ($T02())(), halfEdge = new ($T03())(), halfEdge2 = new ($T03())(), halfEdge3 = new ($T03())(), halfEdge4 = new ($T03())();
    var flag = (+dimensionX <= 0) || 
    (+dimensionY <= 0) || 
    (+dimensionZ <= 0);
    if (flag) {
      throw $S00().Construct("The dimension values can not be <= 0");
    }
    var num = +((+dimensionX / 2));
    var num2 = +((+dimensionY / 2));
    var num3 = +((+dimensionZ / 2));
    var geometry = $S01().Construct();
    var array = JSIL.Array.New($T08(), [$S03().Construct(-num, -num2, -num3), $S03().Construct(num, -num2, -num3), $S03().Construct(num, -num2, num3), $S03().Construct(-num, -num2, num3), $S03().Construct(0, num2, 0)]);
    var face = $S06().Construct(6);
    face.OuterHalfEdge = 4;
    var face2 = face.MemberwiseClone();

    for (var i = 0; i < 5; i = ((i + 1) | 0)) {
      (vertex = vertex.MemberwiseClone(), 
        $S04().Call($T02().prototype, "_ctor", null, vertex, geometry.CreateVertHandleId(), array[i].MemberwiseClone()));
      var flag2 = i < 4;
      if (flag2) {
        vertex.IncidentHalfEdge = ((Math.imul(i, 4) + 1) | 0);
      }
      var flag3 = i === 4;
      if (flag3) {
        vertex.IncidentHalfEdge = 3;
      }
      (geometry.Geometry$DictVertices$value).Add(vertex.Handle, vertex.MemberwiseClone());
    }

    for (var j = 0; j < 4; j = ((j + 1) | 0)) {
      (halfEdge = halfEdge.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge, ((Math.imul(j, 4) + 1) | 0)));
      (halfEdge2 = halfEdge2.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge2, ((Math.imul(j, 4) + 2) | 0)));
      (halfEdge3 = halfEdge3.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge3, ((Math.imul(j, 4) + 3) | 0)));
      (halfEdge4 = halfEdge4.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge4, ((Math.imul(j, 4) + 4) | 0)));
      (face = face.MemberwiseClone(), 
        $T04().prototype._ctor.call(face, ((j + 2) | 0)));
      face.OuterHalfEdge = (halfEdge.Handle | 0);
      var face3 = face;
      halfEdge.IncidentFace = (face3.Handle | 0);
      halfEdge2.IncidentFace = (face3.Handle | 0);
      halfEdge3.IncidentFace = (face3.Handle | 0);
      halfEdge4.IncidentFace = (face2.Handle | 0);
      halfEdge.NextHalfEdge = (halfEdge2.Handle | 0);
      halfEdge2.NextHalfEdge = (halfEdge3.Handle | 0);
      halfEdge3.NextHalfEdge = (halfEdge.Handle | 0);
      halfEdge.PrevHalfEdge = (halfEdge3.Handle | 0);
      halfEdge2.PrevHalfEdge = (halfEdge.Handle | 0);
      halfEdge3.PrevHalfEdge = (halfEdge2.Handle | 0);
      halfEdge3.OriginVertex = ((geometry.Geometry$DictVertices$value).get_Item(5).Handle | 0);
      halfEdge.TwinHalfEdge = (halfEdge4.Handle | 0);
      halfEdge4.TwinHalfEdge = (halfEdge.Handle | 0);
      var flag4 = j < 3;
      if (flag4) {
        halfEdge4.PrevHalfEdge = ((Math.imul(((j + 1) | 0), 4) + 4) | 0);
        halfEdge2.TwinHalfEdge = ((Math.imul(((j + 1) | 0), 4) + 3) | 0);
        halfEdge.OriginVertex = ((geometry.Geometry$DictVertices$value).get_Item(((j + 1) | 0)).Handle | 0);
        halfEdge2.OriginVertex = ((geometry.Geometry$DictVertices$value).get_Item(((j + 2) | 0)).Handle | 0);
        halfEdge4.OriginVertex = ((geometry.Geometry$DictVertices$value).get_Item(((j + 2) | 0)).Handle | 0);
      } else {
        halfEdge4.PrevHalfEdge = 4;
        halfEdge2.TwinHalfEdge = 3;
        halfEdge.OriginVertex = ((geometry.Geometry$DictVertices$value).get_Item(((j + 1) | 0)).Handle | 0);
        halfEdge2.OriginVertex = ((geometry.Geometry$DictVertices$value).get_Item(1).Handle | 0);
        halfEdge4.OriginVertex = ((geometry.Geometry$DictVertices$value).get_Item(1).Handle | 0);
      }
      var flag5 = j > 0;
      if (flag5) {
        halfEdge3.TwinHalfEdge = ((Math.imul(((j - 1) | 0), 4) + 2) | 0);
        halfEdge4.NextHalfEdge = ((Math.imul(((j - 1) | 0), 4) + 4) | 0);
      } else {
        halfEdge3.TwinHalfEdge = 14;
        halfEdge4.NextHalfEdge = 16;
      }
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge.Handle, halfEdge.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge2.Handle, halfEdge2.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge4.Handle, halfEdge4.MemberwiseClone());
      (geometry.Geometry$DictFaces$value).Add(face3.Handle, face3.MemberwiseClone());
    }
    (geometry.Geometry$DictFaces$value).Add(face2.Handle, face2.MemberwiseClone());
    geometry.SetHighestHandles();
    var list = $T10().ToList$b1($T04())(geometry.GetAllFaces());

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      var faceOuterVertices = $T10().ToList$b1($T02())(geometry.GetFaceVertices(current.Handle));
      geometry.SetFaceNormal(faceOuterVertices, current);
    }
    return geometry;
  }; 

  function CreatePrimitiveGeometry_CreateSpehreGeometry (radius, horizontalResolution, verticalResolution) {
    var $temp00;
    var vertex3 = new ($T02())(), face = new ($T04())(), halfEdge = new ($T03())(), halfEdge2 = new ($T03())(), halfEdge3 = new ($T03())(), face2 = new ($T04())(), halfEdge4 = new ($T03())(), halfEdge5 = new ($T03())(), halfEdge6 = new ($T03())(), face3 = new ($T04())(), halfEdge7 = new ($T03())(), halfEdge8 = new ($T03())(), halfEdge9 = new ($T03())(), halfEdge10 = new ($T03())();
    var flag = +radius <= 0;
    if (flag) {
      throw $S00().Construct("Radius can not be <= 0");
    }
    var flag2 = (horizontalResolution | 0) <= 3;
    if (flag2) {
      horizontalResolution = 3;
    }
    var flag3 = (verticalResolution | 0) <= 2;
    if (flag3) {
      verticalResolution = 2;
    }
    var geometry = $S01().Construct();
    var vertex = $S02().Construct(geometry.CreateVertHandleId(), $S03().Construct(0, radius, 0));
    var vertex2 = $S02().Construct(geometry.CreateVertHandleId(), $S03().Construct(0, -radius, 0));
    var num = +((6.2831853071795862 / +horizontalResolution));
    var num2 = +((3.1415926535897931 / +verticalResolution));
    var array = JSIL.Array.New($T01(), horizontalResolution);
    var array2 = JSIL.Array.New($T01(), horizontalResolution);

    for (var i = 1; i < (((verticalResolution | 0) + 1) | 0); i = ((i + 1) | 0)) {
      var flag4 = i < (verticalResolution | 0);
      if (flag4) {

        for (var j = 0; j < (horizontalResolution | 0); j = ((j + 1) | 0)) {
          var x = Math.fround((radius * (Math.sin((num * +j)))) * (Math.sin((num2 * +i))));
          var y = Math.fround(radius * (Math.cos((num2 * +i))));
          var z = Math.fround((radius * (Math.cos((num * +j)))) * (Math.sin((num2 * +i))));
          (vertex3 = vertex3.MemberwiseClone(), 
            $S04().Call($T02().prototype, "_ctor", null, vertex3, geometry.CreateVertHandleId(), $S03().Construct(x, y, z)));
          (geometry.Geometry$DictVertices$value).Add(vertex3.Handle, vertex3.MemberwiseClone());
          array[j] = (vertex3.Handle | 0);
        }
      }
      var array3 = JSIL.Array.New($T01(), horizontalResolution);

      for (var k = 0; k < (horizontalResolution | 0); k = ((k + 1) | 0)) {
        var flag5 = i === (verticalResolution | 0);
        if (flag5) {
          (face = face.MemberwiseClone(), 
            $T04().prototype._ctor.call(face, geometry.CreateFaceHandleId()));
          (halfEdge = halfEdge.MemberwiseClone(), 
            $T03().prototype._ctor.call(halfEdge, geometry.CreateHalfEdgeHandleId()));
          (halfEdge2 = halfEdge2.MemberwiseClone(), 
            $T03().prototype._ctor.call(halfEdge2, geometry.CreateHalfEdgeHandleId()));
          (halfEdge3 = halfEdge3.MemberwiseClone(), 
            $T03().prototype._ctor.call(halfEdge3, geometry.CreateHalfEdgeHandleId()));
          array3[k] = (halfEdge.Handle | 0);
          halfEdge.NextHalfEdge = (halfEdge2.Handle | 0);
          halfEdge2.NextHalfEdge = (halfEdge3.Handle | 0);
          halfEdge3.NextHalfEdge = (halfEdge.Handle | 0);
          halfEdge.PrevHalfEdge = (halfEdge3.Handle | 0);
          halfEdge2.PrevHalfEdge = (halfEdge.Handle | 0);
          halfEdge3.PrevHalfEdge = (halfEdge2.Handle | 0);
          halfEdge.IncidentFace = (face.Handle | 0);
          halfEdge2.IncidentFace = (face.Handle | 0);
          halfEdge3.IncidentFace = (face.Handle | 0);
          halfEdge.OriginVertex = (array[k] | 0);
          halfEdge2.OriginVertex = ((
            (k === (((horizontalResolution | 0) - 1) | 0))
               ? array[0]
               : array[((k + 1) | 0)])
           | 0);
          halfEdge3.OriginVertex = (vertex2.Handle | 0);
          face.OuterHalfEdge = (halfEdge.Handle | 0);
          vertex2.IncidentHalfEdge = (halfEdge3.Handle | 0);
          (geometry.Geometry$DictHalfEdges$value).Add(halfEdge.Handle, halfEdge.MemberwiseClone());
          (geometry.Geometry$DictHalfEdges$value).Add(halfEdge2.Handle, halfEdge2.MemberwiseClone());
          (geometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
          (geometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
        } else {
          var flag6 = i === 1;
          if (flag6) {
            (face2 = face2.MemberwiseClone(), 
              $T04().prototype._ctor.call(face2, geometry.CreateFaceHandleId()));
            (halfEdge4 = halfEdge4.MemberwiseClone(), 
              $T03().prototype._ctor.call(halfEdge4, geometry.CreateHalfEdgeHandleId()));
            (halfEdge5 = halfEdge5.MemberwiseClone(), 
              $T03().prototype._ctor.call(halfEdge5, geometry.CreateHalfEdgeHandleId()));
            (halfEdge6 = halfEdge6.MemberwiseClone(), 
              $T03().prototype._ctor.call(halfEdge6, geometry.CreateHalfEdgeHandleId()));
            array3[k] = (halfEdge4.Handle | 0);
            halfEdge4.NextHalfEdge = (halfEdge5.Handle | 0);
            halfEdge5.NextHalfEdge = (halfEdge6.Handle | 0);
            halfEdge6.NextHalfEdge = (halfEdge4.Handle | 0);
            halfEdge4.PrevHalfEdge = (halfEdge6.Handle | 0);
            halfEdge5.PrevHalfEdge = (halfEdge4.Handle | 0);
            halfEdge6.PrevHalfEdge = (halfEdge5.Handle | 0);
            halfEdge4.IncidentFace = (face2.Handle | 0);
            halfEdge5.IncidentFace = (face2.Handle | 0);
            halfEdge6.IncidentFace = (face2.Handle | 0);
            halfEdge4.OriginVertex = ((
              (k === (((horizontalResolution | 0) - 1) | 0))
                 ? array[0]
                 : array[((k + 1) | 0)])
             | 0);
            halfEdge5.OriginVertex = (array[k] | 0);
            halfEdge6.OriginVertex = (vertex.Handle | 0);
            face2.OuterHalfEdge = (halfEdge4.Handle | 0);
            var vertexByHandle = geometry.GetVertexByHandle(array[k]).MemberwiseClone();
            vertexByHandle.IncidentHalfEdge = (halfEdge5.Handle | 0);
            vertex.IncidentHalfEdge = (halfEdge6.Handle | 0);
            (geometry.Geometry$DictHalfEdges$value).Add(halfEdge4.Handle, halfEdge4.MemberwiseClone());
            (geometry.Geometry$DictHalfEdges$value).Add(halfEdge5.Handle, halfEdge5.MemberwiseClone());
            (geometry.Geometry$DictHalfEdges$value).Add(halfEdge6.Handle, halfEdge6.MemberwiseClone());
            (geometry.Geometry$DictFaces$value).Add(face2.Handle, face2.MemberwiseClone());
            geometry.ReplaceVertex(vertexByHandle.MemberwiseClone());
          } else {
            (face3 = face3.MemberwiseClone(), 
              $T04().prototype._ctor.call(face3, geometry.CreateFaceHandleId()));
            (halfEdge7 = halfEdge7.MemberwiseClone(), 
              $T03().prototype._ctor.call(halfEdge7, geometry.CreateHalfEdgeHandleId()));
            (halfEdge8 = halfEdge8.MemberwiseClone(), 
              $T03().prototype._ctor.call(halfEdge8, geometry.CreateHalfEdgeHandleId()));
            (halfEdge9 = halfEdge9.MemberwiseClone(), 
              $T03().prototype._ctor.call(halfEdge9, geometry.CreateHalfEdgeHandleId()));
            (halfEdge10 = halfEdge10.MemberwiseClone(), 
              $T03().prototype._ctor.call(halfEdge10, geometry.CreateHalfEdgeHandleId()));
            array3[k] = (halfEdge7.Handle | 0);
            halfEdge7.NextHalfEdge = (halfEdge8.Handle | 0);
            halfEdge8.NextHalfEdge = (halfEdge9.Handle | 0);
            halfEdge9.NextHalfEdge = (halfEdge10.Handle | 0);
            halfEdge10.NextHalfEdge = (halfEdge7.Handle | 0);
            halfEdge7.PrevHalfEdge = (halfEdge10.Handle | 0);
            halfEdge8.PrevHalfEdge = (halfEdge7.Handle | 0);
            halfEdge9.PrevHalfEdge = (halfEdge8.Handle | 0);
            halfEdge10.PrevHalfEdge = (halfEdge9.Handle | 0);
            halfEdge7.IncidentFace = (face3.Handle | 0);
            halfEdge8.IncidentFace = (face3.Handle | 0);
            halfEdge9.IncidentFace = (face3.Handle | 0);
            halfEdge10.IncidentFace = (face3.Handle | 0);
            face3.OuterHalfEdge = (halfEdge7.Handle | 0);
            halfEdge10.OriginVertex = (array[k] | 0);
            halfEdge9.OriginVertex = ((
              (k === (((horizontalResolution | 0) - 1) | 0))
                 ? array[0]
                 : array[((k + 1) | 0)])
             | 0);
            halfEdge8.OriginVertex = ((
              (k === (((horizontalResolution | 0) - 1) | 0))
                 ? array2[0]
                 : array2[((k + 1) | 0)])
             | 0);
            halfEdge7.OriginVertex = (array2[k] | 0);
            var vertexByHandle2 = geometry.GetVertexByHandle(array[k]).MemberwiseClone();
            vertexByHandle2.IncidentHalfEdge = (halfEdge10.Handle | 0);
            (geometry.Geometry$DictFaces$value).Add(face3.Handle, face3.MemberwiseClone());
            (geometry.Geometry$DictHalfEdges$value).Add(halfEdge7.Handle, halfEdge7.MemberwiseClone());
            (geometry.Geometry$DictHalfEdges$value).Add(halfEdge8.Handle, halfEdge8.MemberwiseClone());
            (geometry.Geometry$DictHalfEdges$value).Add(halfEdge9.Handle, halfEdge9.MemberwiseClone());
            (geometry.Geometry$DictHalfEdges$value).Add(halfEdge10.Handle, halfEdge10.MemberwiseClone());
            geometry.ReplaceVertex(vertexByHandle2.MemberwiseClone());
          }
        }
      }

      for (var l = 0; l < (horizontalResolution | 0); l = ((l + 1) | 0)) {
        var flag7 = i === 1;
        if (flag7) {
          var num3 = ((
            (l === 0)
               ? (((horizontalResolution | 0) - 1) | 0)
               : ((l - 1) | 0))
           | 0);
          var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(array3[l]).MemberwiseClone();
          var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle.NextHalfEdge).MemberwiseClone();
          var halfEdgeByHandle3 = geometry.GetHalfEdgeByHandle(array3[num3]).MemberwiseClone();
          var halfEdgeByHandle4 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle3.PrevHalfEdge).MemberwiseClone();
          halfEdgeByHandle4.TwinHalfEdge = (halfEdgeByHandle2.Handle | 0);
          halfEdgeByHandle2.TwinHalfEdge = (halfEdgeByHandle4.Handle | 0);
          geometry.ReplaceHalfEdge(halfEdgeByHandle4.MemberwiseClone());
          geometry.ReplaceHalfEdge(halfEdgeByHandle2.MemberwiseClone());
        } else {
          var flag8 = i === (verticalResolution | 0);
          if (flag8) {
            var num4 = ((
              (l === 0)
                 ? (((horizontalResolution | 0) - 1) | 0)
                 : ((l - 1) | 0))
             | 0);
            var halfEdgeByHandle5 = geometry.GetHalfEdgeByHandle(array3[l]).MemberwiseClone();
            var halfEdgeByHandle6 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle5.PrevHalfEdge).MemberwiseClone();
            var halfEdgeByHandle7 = geometry.GetHalfEdgeByHandle(array3[num4]).MemberwiseClone();
            var halfEdgeByHandle8 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle7.NextHalfEdge).MemberwiseClone();
            halfEdgeByHandle8.TwinHalfEdge = (halfEdgeByHandle6.Handle | 0);
            halfEdgeByHandle6.TwinHalfEdge = (halfEdgeByHandle8.Handle | 0);
            geometry.ReplaceHalfEdge(halfEdgeByHandle8.MemberwiseClone());
            geometry.ReplaceHalfEdge(halfEdgeByHandle6.MemberwiseClone());
          } else {
            var halfEdgeByHandle9 = geometry.GetHalfEdgeByHandle(array3[l]).MemberwiseClone();
            var halfEdgeByHandle10 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle9.PrevHalfEdge).MemberwiseClone();
            var num5 = ((
              (l === 0)
                 ? (((horizontalResolution | 0) - 1) | 0)
                 : ((l - 1) | 0))
             | 0);
            var halfEdgeByHandle11 = geometry.GetHalfEdgeByHandle(array3[num5]).MemberwiseClone();
            var halfEdgeByHandle12 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle11.NextHalfEdge).MemberwiseClone();
            halfEdgeByHandle12.TwinHalfEdge = (halfEdgeByHandle10.Handle | 0);
            halfEdgeByHandle10.TwinHalfEdge = (halfEdgeByHandle12.Handle | 0);
            geometry.ReplaceHalfEdge(halfEdgeByHandle12.MemberwiseClone());
            geometry.ReplaceHalfEdge(halfEdgeByHandle10.MemberwiseClone());
          }
        }
        var flag9 = i > 1;
        if (flag9) {
          var halfEdgeByHandle13 = geometry.GetHalfEdgeByHandle(array3[l]).MemberwiseClone();
          var vertexByHandle3 = geometry.GetVertexByHandle(array2[l]).MemberwiseClone();
          var halfEdgeByHandle14 = geometry.GetHalfEdgeByHandle(vertexByHandle3.IncidentHalfEdge).MemberwiseClone();

        $loop4: 
          while (true) {
            var flag10 = (halfEdgeByHandle14.TwinHalfEdge | 0) === 0;
            if (flag10) {
              break $loop4;
            }
            halfEdgeByHandle14 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle14.NextHalfEdge).MemberwiseClone();
          }
          halfEdgeByHandle14.TwinHalfEdge = (halfEdgeByHandle13.Handle | 0);
          halfEdgeByHandle13.TwinHalfEdge = (halfEdgeByHandle14.Handle | 0);
          geometry.ReplaceHalfEdge(halfEdgeByHandle13.MemberwiseClone());
          geometry.ReplaceHalfEdge(halfEdgeByHandle14.MemberwiseClone());
        }
      }
      $S0A().CallStatic($T17(), "Copy", null, array, array2, array.length);
    }
    (geometry.Geometry$DictVertices$value).Add(vertex.Handle, vertex.MemberwiseClone());
    (geometry.Geometry$DictVertices$value).Add(vertex2.Handle, vertex2.MemberwiseClone());
    var list = $T10().ToList$b1($T04())(geometry.GetAllFaces());

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      geometry.SetFaceNormal($T10().ToList$b1($T02())(geometry.GetFaceVertices(current.Handle)), current);
    }
    return geometry;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.CreatePrimitiveGeometry", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      CreatePrimitiveGeometry__ctor
    );

    $.Method({Static:true , Public:true }, "CreateConeGeometry", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      CreatePrimitiveGeometry_CreateConeGeometry
    );

    $.Method({Static:true , Public:true }, "CreateCuboidGeometry", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $.Single, $.Single, 
          $.Single
        ]), 
      CreatePrimitiveGeometry_CreateCuboidGeometry
    );

    $.Method({Static:true , Public:true }, "CreatePyramidGeometry", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $.Single, $.Single, 
          $.Single
        ]), 
      CreatePrimitiveGeometry_CreatePyramidGeometry
    );

    $.Method({Static:true , Public:true }, "CreateSpehreGeometry", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $.Single, $.Int32, 
          $.Int32
        ]), 
      CreatePrimitiveGeometry_CreateSpehreGeometry
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Extrude */ 

(function Extrude$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Face))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.UInt32)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm09.Fusee.Jometri.GeometricOperations)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge)))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm09.Fusee.Jometri.GeomEditing)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm09.Fusee.Jometri.Extrude_$l$gc__DisplayClass3_0)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm0F.System.Func$b2.Of($asm09.Fusee.Jometri.HalfEdge, $asm0F.System.Boolean))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Face), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0F.System.Int32]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Geometry, null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0F.TypeRef("System.Int32"), $asm09.TypeRef("Fusee.Jometri.Face")])]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0F.TypeRef("System.Int32"), $asm09.TypeRef("Fusee.Jometri.Vertex")])]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0F.TypeRef("System.Int32"), $asm09.TypeRef("Fusee.Jometri.HalfEdge")])]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge)), null))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0A.Fusee.Math.Core.float3, $asm0F.System.Single]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm0F.TypeRef("System.Func`2", ["!!0", $asm0F.TypeRef("System.Boolean")])], ["TSource"]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm09.Fusee.Jometri.HalfEdge]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex), null))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face), null))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm09.Fusee.Jometri.Face]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge), null))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0F.System.Int32)]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float3, [
        $asm0F.System.Single, $asm0F.System.Single, 
        $asm0F.System.Single
      ]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm09.Fusee.Jometri.Vertex, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Vertex).GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Vertex).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge).GetEnumerator)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge).get_Current)) ();
  };


  function Extrude_CreateSidefaces (geometry) {
    var $temp00;
    var halfEdge3 = new ($T01())(), face = new ($T02())();
    var faceByHandle = geometry.GetFaceByHandle(1).MemberwiseClone();
    var list = $T05().ToList$b1($T04())($T05().Take$b1($T04())(faceByHandle.InnerHalfEdges, ((((faceByHandle.InnerHalfEdges).get_Count() | 0) / 2) | 0)));
    var list2 = $T05().ToList$b1($T04())($T05().Skip$b1($T04())(faceByHandle.InnerHalfEdges, ((((faceByHandle.InnerHalfEdges).get_Count() | 0) / 2) | 0)));

    for (var i = 0; i < (list.get_Count() | 0); i = ((i + 1) | 0)) {
      var list3 = $T05().ToList$b1($T01())(geometry.GetHalfEdgeLoop(list.get_Item(i)));
      var list4 = $T05().ToList$b1($T01())(geometry.GetHalfEdgeLoopReverse(list2.get_Item(i)));
      var list5 = $S00().Construct();
      var list6 = $S01().Construct();

      for (var j = 0; j < (list3.get_Count() | 0); j = ((j + 1) | 0)) {
        var halfEdge = list3.get_Item(j).MemberwiseClone();
        var halfEdge2 = list4.get_Item(j).MemberwiseClone();
        var originVertex = (geometry.GetHalfEdgeByHandle(halfEdge2.NextHalfEdge).OriginVertex | 0);
        var originVertex2 = (geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).OriginVertex | 0);
        (halfEdge3 = halfEdge3.MemberwiseClone(), 
          $T01().prototype._ctor.call(halfEdge3, geometry.CreateHalfEdgeHandleId()));
        halfEdge3.OriginVertex = originVertex;
        halfEdge3.NextHalfEdge = (halfEdge.Handle | 0);
        halfEdge3.PrevHalfEdge = (halfEdge2.Handle | 0);
        var halfEdge4 = halfEdge3.MemberwiseClone();
        (face = face.MemberwiseClone(), 
          $S02().Call($T02().prototype, "_ctor", null, face, geometry.CreateFaceHandleId(), halfEdge4.Handle));
        list6.Add(face.MemberwiseClone());
        (geometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
        halfEdge4.IncidentFace = (face.Handle | 0);
        (halfEdge3 = halfEdge3.MemberwiseClone(), 
          $T01().prototype._ctor.call(halfEdge3, geometry.CreateHalfEdgeHandleId()));
        halfEdge3.OriginVertex = originVertex2;
        halfEdge3.NextHalfEdge = (halfEdge2.Handle | 0);
        halfEdge3.PrevHalfEdge = (halfEdge.Handle | 0);
        halfEdge3.IncidentFace = (face.Handle | 0);
        var halfEdge5 = halfEdge3;
        halfEdge.IncidentFace = (face.Handle | 0);
        halfEdge.NextHalfEdge = (halfEdge5.Handle | 0);
        halfEdge.PrevHalfEdge = (halfEdge4.Handle | 0);
        halfEdge2.IncidentFace = (face.Handle | 0);
        halfEdge2.NextHalfEdge = (halfEdge4.Handle | 0);
        halfEdge2.PrevHalfEdge = (halfEdge5.Handle | 0);
        geometry.ReplaceHalfEdge(halfEdge.MemberwiseClone());
        geometry.ReplaceHalfEdge(halfEdge2.MemberwiseClone());
        list5.Add(halfEdge4.MemberwiseClone());
        list5.Add(halfEdge5.MemberwiseClone());
      }

      for (var k = 0; k < (list5.get_Count() | 0); k = ((k + 1) | 0)) {
        var halfEdge6 = list5.get_Item(k).MemberwiseClone();
        var flag = k === 0;
        if (flag) {
          halfEdge6.TwinHalfEdge = ($S03().CallStatic($T05(), "Last$b1", [$asm09.Fusee.Jometri.HalfEdge], list5).Handle | 0);
        } else {
          var flag2 = k === (((list5.get_Count() | 0) - 1) | 0);
          if (flag2) {
            halfEdge6.TwinHalfEdge = (list5.get_Item(0).Handle | 0);
          } else {
            var flag3 = (((k % 2) | 0) !== 0) && 
            (k !== (((list5.get_Count() | 0) - 1) | 0));
            if (flag3) {
              halfEdge6.TwinHalfEdge = (list5.get_Item(((k + 1) | 0)).Handle | 0);
            } else {
              var flag4 = (((k % 2) | 0) === 0) && 
              ((k >>> 0) > (0 >>> 0));
              if (flag4) {
                halfEdge6.TwinHalfEdge = (list5.get_Item(((k - 1) | 0)).Handle | 0);
              }
            }
          }
        }
        list5.set_Item(k, halfEdge6.MemberwiseClone());
        (geometry.Geometry$DictHalfEdges$value).Add(halfEdge6.Handle, halfEdge6.MemberwiseClone());
      }

      for (var a$0 = list6._items, i$0 = 0, l$0 = (list6._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        geometry.SetFaceNormal(
          $T05().ToList$b1($T0C())(geometry.GetFaceOuterVertices(current.Handle)), 
          (geometry.Geometry$DictFaces$value).get_Item(current.Handle)
        );
      }
    }
    (geometry.Geometry$DictFaces$value).Remove(faceByHandle.Handle);
  }; 

  function Extrude_CreateTopSurface (geometry, zOffset, exturdeAlongNormal) {
    var geometry2 = geometry.CloneGeometry();
    var flag = !exturdeAlongNormal;
    if (flag) {
      $thisType.UpdateVertexZCoord(geometry2, zOffset);
    } else {
      var list = $T05().ToList$b1($T0C())(geometry2.GetFaceVertices(1));
      var normal = $T10().CalculateFaceNormal(list).MemberwiseClone();
      $thisType.UpdateVertexZCoord(geometry2, list, normal.MemberwiseClone(), zOffset);
    }
    $thisType.Join2DGeometries(geometry, geometry2);
  }; 

  function Extrude_Extrude2DPolygon (geometry, offset, extrudeAlongNormal) {
    $thisType.CreateTopSurface(geometry, offset, extrudeAlongNormal);
    $thisType.CreateSidefaces(geometry);
    var expr_16 = $S04().Construct();
    expr_16.Geometry$DictFaces$value = $S05().Construct(geometry.Geometry$DictFaces$value);
    expr_16.Geometry$DictVertices$value = $S06().Construct(geometry.Geometry$DictVertices$value);
    expr_16.Geometry$DictHalfEdges$value = $S07().Construct(geometry.Geometry$DictHalfEdges$value);
    expr_16.Geometry$HighestHalfEdgeHandle$value = (geometry.Geometry$HighestHalfEdgeHandle$value | 0);
    expr_16.Geometry$HighestFaceHandle$value = (geometry.Geometry$HighestFaceHandle$value | 0);
    expr_16.Geometry$HighestVertHandle$value = (geometry.Geometry$HighestVertHandle$value | 0);
    return expr_16;
  }; 

  function Extrude_ExtrudeFace$00 (geometry, faceHandle, offset) {
    var faceByHandle = geometry.GetFaceByHandle(faceHandle).MemberwiseClone();
    return $thisType.ExtrudeFaceByHandle(geometry, faceHandle, offset, faceByHandle.FaceData.FaceNormal.MemberwiseClone());
  }; 

  function Extrude_ExtrudeFace$01 (geometry, faceHandle, offset, extrusionVector) {
    extrusionVector.Normalize();
    return $thisType.ExtrudeFaceByHandle(geometry, faceHandle, offset, extrusionVector.MemberwiseClone());
  }; 

  function Extrude_ExtrudeFaceByHandle (geometry, faceHandle, offset, extrusionVector) {
    var $temp00;
    var vertex = new ($T0C())(), halfEdge2 = new ($T01())(), halfEdge3 = new ($T01())(), halfEdge4 = new ($T01())(), face = new ($T02())(), halfEdge7 = new ($T01())();
    var faceByHandle = geometry.GetFaceByHandle(faceHandle).MemberwiseClone();
    var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(faceByHandle.OuterHalfEdge).MemberwiseClone();
    var halfEdge = halfEdgeByHandle.MemberwiseClone();
    var dictionary = $S08().Construct();
    var faceVertices = geometry.GetFaceVertices(faceHandle);
    var enumerator = $IM00().Call(faceVertices, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null).MemberwiseClone();
        dictionary.Add(current.Handle, $T05().ToList$b1($T01())(geometry.GetVertexStartingHalfEdges(current.Handle)));
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    var list = $S00().Construct();

    do {
      var vertexByHandle = geometry.GetVertexByHandle(halfEdge.OriginVertex).MemberwiseClone();
      (vertex = vertex.MemberwiseClone(), 
        $S09().Call($T0C().prototype, "_ctor", null, vertex, geometry.CreateVertHandleId(), vertexByHandle.VertData.Pos.MemberwiseClone()));
      var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(halfEdge.TwinHalfEdge).MemberwiseClone();
      var halfEdgeByHandle3 = geometry.GetHalfEdgeByHandle(halfEdge.PrevHalfEdge).MemberwiseClone();
      var halfEdgeByHandle4 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle3.TwinHalfEdge).MemberwiseClone();
      vertexByHandle.VertData.Pos = $T0F().op_Addition(vertexByHandle.VertData.Pos.MemberwiseClone(), $S0A().CallStatic($T0F(), "op_Multiply", null, extrusionVector.MemberwiseClone(), offset));
      (halfEdge2 = halfEdge2.MemberwiseClone(), 
        $T01().prototype._ctor.call(halfEdge2, geometry.CreateHalfEdgeHandleId()));
      (halfEdge3 = halfEdge3.MemberwiseClone(), 
        $T01().prototype._ctor.call(halfEdge3, geometry.CreateHalfEdgeHandleId()));
      (halfEdge4 = halfEdge4.MemberwiseClone(), 
        $T01().prototype._ctor.call(halfEdge4, geometry.CreateHalfEdgeHandleId()));
      var list2 = dictionary.get_Item(vertexByHandle.Handle);

      for (var a$0 = list2._items, i$0 = 0, l$0 = (list2._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current2 = a$0[i$0].MemberwiseClone();
        var flag = $T01().op_Equality(current2, halfEdge);
        if (!flag) {
          var halfEdge5 = $T17().UpdateHalfEdgeOrigin(current2.MemberwiseClone(), vertex.Handle);
          geometry.ReplaceHalfEdge(halfEdge5.MemberwiseClone());
        }
      }
      vertexByHandle.IncidentHalfEdge = (halfEdge.Handle | 0);
      halfEdge2.OriginVertex = (vertexByHandle.Handle | 0);
      halfEdge3.OriginVertex = (vertex.Handle | 0);
      halfEdge4.OriginVertex = (vertex.Handle | 0);
      halfEdge2.TwinHalfEdge = (halfEdge3.Handle | 0);
      halfEdge3.TwinHalfEdge = (halfEdge2.Handle | 0);
      halfEdge2.NextHalfEdge = (halfEdge4.Handle | 0);
      halfEdge4.PrevHalfEdge = (halfEdge2.Handle | 0);
      halfEdge4.TwinHalfEdge = (halfEdge.TwinHalfEdge | 0);
      halfEdgeByHandle2.TwinHalfEdge = (halfEdge4.Handle | 0);
      halfEdgeByHandle4.OriginVertex = (vertex.Handle | 0);
      vertex.IncidentHalfEdge = (halfEdge3.Handle | 0);
      geometry.ReplaceHalfEdge(halfEdgeByHandle2.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdgeByHandle4.MemberwiseClone());
      geometry.ReplaceVertex(vertexByHandle.MemberwiseClone());
      (geometry.Geometry$DictVertices$value).Add(vertex.Handle, vertex.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge2.Handle, halfEdge2.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge4.Handle, halfEdge4.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
      list.Add(halfEdge3.MemberwiseClone());
      halfEdge = geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).MemberwiseClone();
    } while ($T01().op_Inequality(halfEdgeByHandle, halfEdge));
    halfEdgeByHandle = geometry.GetHalfEdgeByHandle(faceByHandle.OuterHalfEdge).MemberwiseClone();
    halfEdge = halfEdgeByHandle.MemberwiseClone();

    do {
      var $closure0 = new ($T18())();
      (face = face.MemberwiseClone(), 
        $T02().prototype._ctor.call(face, geometry.CreateFaceHandleId()));
      $closure0.twinEdge = geometry.GetHalfEdgeByHandle(halfEdge.TwinHalfEdge).MemberwiseClone();
      var halfEdgeByHandle5 = geometry.GetHalfEdgeByHandle($closure0.twinEdge.TwinHalfEdge).MemberwiseClone();
      var halfEdge6 = $S0B().CallStatic($T05(), "First$b1", [$asm09.Fusee.Jometri.HalfEdge], list, $T19().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Jometri.Extrude_$l$gc__DisplayClass3_0, "$lExtrudeFaceByHandle$gb__0", $S0C(), false, false))).MemberwiseClone();
      (halfEdge7 = halfEdge7.MemberwiseClone(), 
        $T01().prototype._ctor.call(halfEdge7, geometry.CreateHalfEdgeHandleId()));
      var halfEdgeByHandle6 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle5.PrevHalfEdge).MemberwiseClone();
      halfEdgeByHandle5.IncidentFace = (face.Handle | 0);
      halfEdge6.IncidentFace = (face.Handle | 0);
      halfEdge7.IncidentFace = (face.Handle | 0);
      halfEdgeByHandle6.IncidentFace = (face.Handle | 0);
      halfEdgeByHandle5.NextHalfEdge = (halfEdge6.Handle | 0);
      halfEdge6.NextHalfEdge = (halfEdge7.Handle | 0);
      halfEdge7.NextHalfEdge = (halfEdgeByHandle6.Handle | 0);
      halfEdgeByHandle6.NextHalfEdge = (halfEdgeByHandle5.Handle | 0);
      halfEdgeByHandle5.PrevHalfEdge = (halfEdgeByHandle6.Handle | 0);
      halfEdge6.PrevHalfEdge = (halfEdgeByHandle5.Handle | 0);
      halfEdge7.PrevHalfEdge = (halfEdge6.Handle | 0);
      halfEdgeByHandle6.PrevHalfEdge = (halfEdge7.Handle | 0);
      halfEdge7.TwinHalfEdge = (halfEdge.Handle | 0);
      halfEdge7.OriginVertex = (geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).OriginVertex | 0);
      halfEdge.TwinHalfEdge = (halfEdge7.Handle | 0);
      face.OuterHalfEdge = (halfEdgeByHandle5.Handle | 0);
      geometry.ReplaceHalfEdge(halfEdgeByHandle5.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdge6.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdgeByHandle6.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdge.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge7.Handle, halfEdge7.MemberwiseClone());
      (geometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
      face.FaceData.FaceNormal = $T10().CalculateFaceNormal($T05().ToList$b1($T0C())(geometry.GetFaceVertices(face.Handle))).MemberwiseClone();
      geometry.ReplaceFace(face.MemberwiseClone());
      halfEdge = geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).MemberwiseClone();
    } while ($T01().op_Inequality(halfEdgeByHandle, halfEdge));
    return geometry;
  }; 

  function Extrude_Join2DGeometries (first, second) {
    var $temp00, $temp01;
    var vertex = new ($T0C())(), face = new ($T02())(), halfEdge = new ($T01())();
    var highestVertHandle = (first.Geometry$HighestVertHandle$value | 0);
    var highestHalfEdgeHandle = (first.Geometry$HighestHalfEdgeHandle$value | 0);
    var highestFaceHandle = (first.Geometry$HighestFaceHandle$value | 0);
    var dictionary = $S0D().Construct();
    var enumerator = $T11().prototype.GetEnumerator.call(second.Geometry$DictVertices$value);

    while ($T1A().prototype.MoveNext.call(enumerator)) {
      var current = $T1A().prototype.get_Current.call(enumerator);
      (vertex = vertex.MemberwiseClone(), 
        $S09().Call($T0C().prototype, "_ctor", null, vertex, 
          (((current.get_Value().Handle | 0) + highestVertHandle) | 0), 
          current.get_Value().VertData.Pos.MemberwiseClone()
        ));
      vertex.IncidentHalfEdge = (((current.get_Value().IncidentHalfEdge | 0) + highestHalfEdgeHandle) | 0);
      dictionary.Add(vertex.Handle, vertex.MemberwiseClone());
    }
    (second.Geometry$DictVertices$value).Clear();
    second.Geometry$DictVertices$value = dictionary;
    var dictionary2 = $S0E().Construct();
    var enumerator2 = $T08().prototype.GetEnumerator.call(second.Geometry$DictFaces$value);

    while ($T1C().prototype.MoveNext.call(enumerator2)) {
      var current2 = $T1C().prototype.get_Current.call(enumerator2).MemberwiseClone();
      (face = face.MemberwiseClone(), 
        $S0F().Call($T02().prototype, "_ctor", null, face, 
          (((current2.get_Value().Handle | 0) + highestFaceHandle) | 0), 
          current2.get_Value().MemberwiseClone()
        ));
      var flag = (face.OuterHalfEdge >>> 0) > (0 >>> 0);
      if (flag) {
        var outerHalfEdge = (((face.OuterHalfEdge | 0) + (first.Geometry$HighestHalfEdgeHandle$value | 0)) | 0);
        face.OuterHalfEdge = outerHalfEdge;
      }

      for (var i = 0; i < ((face.InnerHalfEdges).get_Count() | 0); i = ((i + 1) | 0)) {
        var num = ((face.InnerHalfEdges).get_Item(i) | 0);
        num = ((num + (first.Geometry$HighestHalfEdgeHandle$value | 0)) | 0);
        (face.InnerHalfEdges).set_Item(i, num);
      }
      dictionary2.Add(face.Handle, face.MemberwiseClone());
    }
    (second.Geometry$DictFaces$value).Clear();
    second.Geometry$DictFaces$value = dictionary2;
    var dictionary3 = $S10().Construct();
    var enumerator3 = $T0B().prototype.GetEnumerator.call(second.Geometry$DictHalfEdges$value);

    while ($T1E().prototype.MoveNext.call(enumerator3)) {
      var current3 = $T1E().prototype.get_Current.call(enumerator3);
      (halfEdge = halfEdge.MemberwiseClone(), 
        $T01().prototype._ctor.call(halfEdge, 
          (((current3.get_Value().Handle | 0) + highestHalfEdgeHandle) | 0), 
          current3.get_Value()
        ));
      halfEdge.IncidentFace = (((halfEdge.IncidentFace | 0) + (first.Geometry$HighestFaceHandle$value | 0)) | 0);
      halfEdge.OriginVertex = (((halfEdge.OriginVertex | 0) + (first.Geometry$HighestVertHandle$value | 0)) | 0);
      halfEdge.NextHalfEdge = (((halfEdge.NextHalfEdge | 0) + highestHalfEdgeHandle) | 0);
      halfEdge.PrevHalfEdge = (((halfEdge.PrevHalfEdge | 0) + highestHalfEdgeHandle) | 0);
      var flag2 = (halfEdge.TwinHalfEdge >>> 0) > (0 >>> 0);
      if (flag2) {
        halfEdge.TwinHalfEdge = (((halfEdge.TwinHalfEdge | 0) + highestHalfEdgeHandle) | 0);
      }
      dictionary3.Add(halfEdge.Handle, halfEdge.MemberwiseClone());
    }
    (second.Geometry$DictHalfEdges$value).Clear();
    second.Geometry$DictHalfEdges$value = dictionary3;
    var list = $T05().ToList$b1($T01())($T10().GetHalfEdgesWChangedWinding(second, second.GetAllHalfEdges()));
    var enumerator4 = $T11().prototype.GetEnumerator.call(second.Geometry$DictVertices$value);

    while ($T1A().prototype.MoveNext.call(enumerator4)) {
      var current4 = $T1A().prototype.get_Current.call(enumerator4).MemberwiseClone();
      (first.Geometry$DictVertices$value).Add(
        current4.get_Key(), 
        current4.get_Value().MemberwiseClone()
      );
    }

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current5 = a$0[i$0].MemberwiseClone();
      (first.Geometry$DictHalfEdges$value).Add(current5.Handle, current5.MemberwiseClone());
    }
    var face2 = (first.Geometry$DictFaces$value).get_Item($S11().CallStatic($T05(), "Min", null, (first.Geometry$DictFaces$value).get_Keys())).MemberwiseClone();
    var face3 = (second.Geometry$DictFaces$value).get_Item($S11().CallStatic($T05(), "Min", null, (second.Geometry$DictFaces$value).get_Keys())).MemberwiseClone();
    $T03().prototype.AddRange.call(face2.InnerHalfEdges, face3.InnerHalfEdges);
    (second.Geometry$DictFaces$value).Remove(face3.Handle);
    var list2 = $S00().Construct();
    var enumerator6 = $IM04().Call(first.GetAllHalfEdges(), null);
    try {

      while ($IM01().Call(enumerator6, null)) {
        var current6 = $IM05().Call(enumerator6, null).MemberwiseClone();
        var flag3 = (current6.IncidentFace | 0) === (face3.Handle | 0);
        if (flag3) {
          list2.Add(current6.MemberwiseClone());
        }
      }
    } finally {
      if (enumerator6 !== null) {
        $IM03().Call(enumerator6, null);
      }
    }

    for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current7 = a$1[i$1];
      var halfEdge2 = current7.MemberwiseClone();
      halfEdge2.IncidentFace = (face2.Handle | 0);
      (first.Geometry$DictHalfEdges$value).Remove(halfEdge2.Handle);
      (first.Geometry$DictHalfEdges$value).Add(halfEdge2.Handle, halfEdge2.MemberwiseClone());
    }
    var enumerator8 = $T08().prototype.GetEnumerator.call(second.Geometry$DictFaces$value);

    while ($T1C().prototype.MoveNext.call(enumerator8)) {
      var current8 = $T1C().prototype.get_Current.call(enumerator8).MemberwiseClone();
      (first.Geometry$DictFaces$value).Add(
        current8.get_Key(), 
        current8.get_Value().MemberwiseClone()
      );
      first.SetFaceNormal(
        $T05().ToList$b1($T0C())(first.GetFaceOuterVertices(current8.get_Key())), 
        (first.Geometry$DictFaces$value).get_Item(current8.get_Key())
      );
    }
    first.SetHighestHandles();
  }; 

  function Extrude_UpdateVertexZCoord$02 (geometry, zOffset) {
    var $temp00;

    for (var a$0 = $T05().ToList$b1($T04())((geometry.Geometry$DictVertices$value).get_Keys())._items, i$0 = 0, l$0 = ($T05().ToList$b1($T04())((geometry.Geometry$DictVertices$value).get_Keys())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      var vertex = (geometry.Geometry$DictVertices$value).get_Item(current).MemberwiseClone();
      vertex.VertData.Pos = $S12().Construct(vertex.VertData.Pos.x, vertex.VertData.Pos.y, (+vertex.VertData.Pos.z + +zOffset));
      (geometry.Geometry$DictVertices$value).set_Item(current, vertex.MemberwiseClone());
    }
  }; 

  function Extrude_UpdateVertexZCoord$03 (backface, verts, normal, zOffset) {
    var vertex = new ($T0C())();
    var enumerator = $IM00().Call(verts, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null).MemberwiseClone();
        var newPos = $T0F().op_Addition(current.VertData.Pos.MemberwiseClone(), $S0A().CallStatic($T0F(), "op_Multiply", null, normal.MemberwiseClone(), zOffset));
        (vertex = vertex.MemberwiseClone(), 
          $S13().Call($T0C().prototype, "_ctor", null, vertex, current, newPos.MemberwiseClone()));
        (backface.Geometry$DictVertices$value).set_Item(vertex.Handle, vertex.MemberwiseClone());
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
  }; 

  JSIL.MakeStaticClass("Fusee.Jometri.Extrude", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:false}, "CreateSidefaces", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.Geometry")), 
      Extrude_CreateSidefaces
    );

    $.Method({Static:true , Public:false}, "CreateTopSurface", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Single, 
          $.Boolean
        ]), 
      Extrude_CreateTopSurface
    );

    $.Method({Static:true , Public:true }, "Extrude2DPolygon", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Single, 
          $.Boolean
        ]), 
      Extrude_Extrude2DPolygon
    );

    $.Method({Static:true , Public:true }, "ExtrudeFace", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $.Single
        ]), 
      Extrude_ExtrudeFace$00
    );

    $.Method({Static:true , Public:true }, "ExtrudeFace", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $.Single, $asm0A.TypeRef("Fusee.Math.Core.float3")
        ]), 
      Extrude_ExtrudeFace$01
    );

    $.Method({Static:true , Public:false}, "ExtrudeFaceByHandle", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $.Single, $asm0A.TypeRef("Fusee.Math.Core.float3")
        ]), 
      Extrude_ExtrudeFaceByHandle
    );

    $.Method({Static:true , Public:false}, "Join2DGeometries", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Geometry")]), 
      Extrude_Join2DGeometries
    );

    $.Method({Static:true , Public:false}, "UpdateVertexZCoord", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Jometri.Geometry"), $.Single]), 
      Extrude_UpdateVertexZCoord$02
    );

    $.Method({Static:true , Public:false}, "UpdateVertexZCoord", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
          $asm0A.TypeRef("Fusee.Math.Core.float3"), $.Single
        ]), 
      Extrude_UpdateVertexZCoord$03
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Extrude+<>c__DisplayClass3_0 */ 

(function $l$gc__DisplayClass3_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };


  function $l$gc__DisplayClass3_0__ctor () {
  }; 

  function $l$gc__DisplayClass3_0_$lExtrudeFaceByHandle$gb__0 (n) {
    return ((n.OriginVertex | 0) === (this.twinEdge.OriginVertex | 0));
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Extrude+<>c__DisplayClass3_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass3_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lExtrudeFaceByHandle$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      $l$gc__DisplayClass3_0_$lExtrudeFaceByHandle$gb__0
    );

    $.Field({Static:false, Public:true }, "twinEdge", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.VertexData */ 

(function VertexData$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.VertexData", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Pos", $asm0A.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.HalfEdgeData */ 

(function HalfEdgeData$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.HalfEdgeData", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Normal", $asm0A.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:true }, "TextureCoord", $asm0A.TypeRef("Fusee.Math.Core.float2"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.FaceData */ 

(function FaceData$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.FaceData", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "FaceNormal", $asm0A.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.Vertex */ 

(function Vertex$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.VertexData)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };


  function Vertex__ctor$00 (handle, pos) {
    this.Handle = (handle | 0);
    this.IncidentHalfEdge = 0;
    var vertData = new ($T02())();
    vertData.Pos = pos.MemberwiseClone();
    this.VertData = vertData.MemberwiseClone();
  }; 

  function Vertex__ctor$01 (vert, newPos) {
    this.Handle = (vert.Handle | 0);
    this.IncidentHalfEdge = (vert.IncidentHalfEdge | 0);
    this.VertData = vert.VertData.MemberwiseClone();
    this.VertData.Pos = newPos.MemberwiseClone();
  }; 

  function Vertex_Object_Equals (obj) {
    var flag = !$thisType.$Is(obj);
    if (flag) {
      var result = false;
    } else {
      var second = $thisType.$Cast(obj);
      result = $thisType.op_Equality(this, second);
    }
    return result;
  }; 

  function Vertex_GetHashCode () {
    return this.Handle;
  }; 

  function Vertex_op_Equality (first, second) {
    return ((first.Handle | 0) === (second.Handle | 0));
  }; 

  function Vertex_op_GreaterThan (first, second) {
    return ((first.Handle | 0) > (second.Handle | 0));
  }; 

  function Vertex_op_Inequality (first, second) {
    return ((first.Handle | 0) !== (second.Handle | 0));
  }; 

  function Vertex_op_LessThan (first, second) {
    return ((first.Handle | 0) < (second.Handle | 0));
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.Vertex", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $asm0A.TypeRef("Fusee.Math.Core.float3")]), 
      Vertex__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Type, $asm0A.TypeRef("Fusee.Math.Core.float3")]), 
      Vertex__ctor$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      Vertex_Object_Equals
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      Vertex_GetHashCode
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Vertex_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_GreaterThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Vertex_op_GreaterThan
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Vertex_op_Inequality
    );

    $.Method({Static:true , Public:true }, "op_LessThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Vertex_op_LessThan
    );

    $.Field({Static:false, Public:true , ReadOnly:true }, "Handle", $.Int32);

    $.Field({Static:false, Public:false}, "IncidentHalfEdge", $.Int32);

    $.Field({Static:false, Public:true }, "VertData", $asm09.TypeRef("Fusee.Jometri.VertexData"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.HalfEdge */ 

(function HalfEdge$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdgeData)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };


  function HalfEdge__ctor$00 (handle, originVertex, twinHalfEdge, nextHalfEdge, prevHalfEdge, incidentFace) {
    this.Handle = (handle | 0);
    this.OriginVertex = (originVertex | 0);
    this.TwinHalfEdge = (twinHalfEdge | 0);
    this.NextHalfEdge = (nextHalfEdge | 0);
    this.PrevHalfEdge = (prevHalfEdge | 0);
    this.IncidentFace = (incidentFace | 0);
    this.HalfEdgeData = new ($T01())();
  }; 

  function HalfEdge__ctor$01 (handle) {
    this.Handle = (handle | 0);
    this.OriginVertex = 0;
    this.TwinHalfEdge = 0;
    this.NextHalfEdge = 0;
    this.PrevHalfEdge = 0;
    this.IncidentFace = 0;
    this.HalfEdgeData = new ($T01())();
  }; 

  function HalfEdge__ctor$02 (handle, halfEdge) {
    this.Handle = (handle | 0);
    this.OriginVertex = (halfEdge.OriginVertex | 0);
    this.TwinHalfEdge = (halfEdge.TwinHalfEdge | 0);
    this.NextHalfEdge = (halfEdge.NextHalfEdge | 0);
    this.PrevHalfEdge = (halfEdge.PrevHalfEdge | 0);
    this.IncidentFace = (halfEdge.IncidentFace | 0);
    this.HalfEdgeData = halfEdge.HalfEdgeData.MemberwiseClone();
  }; 

  function HalfEdge_Object_Equals (obj) {
    var flag = !$thisType.$Is(obj);
    if (flag) {
      var result = false;
    } else {
      var second = $thisType.$Cast(obj);
      result = $thisType.op_Equality(this, second);
    }
    return result;
  }; 

  function HalfEdge_GetHashCode () {
    return this.Handle;
  }; 

  function HalfEdge_op_Equality (first, second) {
    return ((first.Handle | 0) === (second.Handle | 0));
  }; 

  function HalfEdge_op_GreaterThan (first, second) {
    return ((first.Handle | 0) > (second.Handle | 0));
  }; 

  function HalfEdge_op_Inequality (first, second) {
    return ((first.Handle | 0) !== (second.Handle | 0));
  }; 

  function HalfEdge_op_LessThan (first, second) {
    return ((first.Handle | 0) < (second.Handle | 0));
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.HalfEdge", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 6, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      HalfEdge__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      HalfEdge__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Type]), 
      HalfEdge__ctor$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      HalfEdge_Object_Equals
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      HalfEdge_GetHashCode
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      HalfEdge_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_GreaterThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      HalfEdge_op_GreaterThan
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      HalfEdge_op_Inequality
    );

    $.Method({Static:true , Public:true }, "op_LessThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      HalfEdge_op_LessThan
    );

    $.Field({Static:false, Public:true , ReadOnly:true }, "Handle", $.Int32);

    $.Field({Static:false, Public:false}, "OriginVertex", $.Int32);

    $.Field({Static:false, Public:false}, "TwinHalfEdge", $.Int32);

    $.Field({Static:false, Public:false}, "NextHalfEdge", $.Int32);

    $.Field({Static:false, Public:false}, "PrevHalfEdge", $.Int32);

    $.Field({Static:false, Public:false}, "IncidentFace", $.Int32);

    $.Field({Static:false, Public:true }, "HalfEdgeData", $asm09.TypeRef("Fusee.Jometri.HalfEdgeData"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.Face */ 

(function Face$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.Fusee.Jometri.FaceData)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Int32")])]))) ();
  };


  function Face__ctor$00 (handle, outerHalfEdge) {
    this.Handle = (handle | 0);
    this.OuterHalfEdge = (outerHalfEdge | 0);
    this.FaceData = new ($T01())();
    this.InnerHalfEdges = $S00().Construct();
  }; 

  function Face__ctor$01 (handle) {
    this.Handle = (handle | 0);
    this.OuterHalfEdge = 0;
    this.FaceData = new ($T01())();
    this.InnerHalfEdges = $S00().Construct();
  }; 

  function Face__ctor$02 (handle, face) {
    this.Handle = (handle | 0);
    this.OuterHalfEdge = (face.OuterHalfEdge | 0);
    this.FaceData = face.FaceData.MemberwiseClone();
    this.InnerHalfEdges = $S01().Construct(face.InnerHalfEdges);
  }; 

  function Face_Object_Equals (obj) {
    var flag = !$thisType.$Is(obj);
    if (flag) {
      var result = false;
    } else {
      var second = $thisType.$Cast(obj);
      result = $thisType.op_Equality(this, second);
    }
    return result;
  }; 

  function Face_GetHashCode () {
    return this.Handle;
  }; 

  function Face_op_Equality (first, second) {
    return ((first.Handle | 0) === (second.Handle | 0));
  }; 

  function Face_op_GreaterThan (first, second) {
    return ((first.Handle | 0) > (second.Handle | 0));
  }; 

  function Face_op_Inequality (first, second) {
    return ((first.Handle | 0) !== (second.Handle | 0));
  }; 

  function Face_op_LessThan (first, second) {
    return ((first.Handle | 0) < (second.Handle | 0));
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.Face", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      Face__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      Face__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Type]), 
      Face__ctor$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      Face_Object_Equals
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      Face_GetHashCode
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Face_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_GreaterThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Face_op_GreaterThan
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Face_op_Inequality
    );

    $.Method({Static:true , Public:true }, "op_LessThan", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Face_op_LessThan
    );

    $.Field({Static:false, Public:true , ReadOnly:true }, "Handle", $.Int32);

    $.Field({Static:false, Public:true }, "OuterHalfEdge", $.Int32);

    $.Field({Static:false, Public:true }, "FaceData", $asm09.TypeRef("Fusee.Jometri.FaceData"));

    $.Field({Static:false, Public:false}, "InnerHalfEdges", $asm0F.TypeRef("System.Collections.Generic.List`1", [$.Int32]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.GeomEditing */ 

(function GeomEditing$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.GeometricOperations)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge)))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.ArgumentException)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm09.Fusee.Jometri.FaceData)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize(System.Array.Of($asm0F.System.Object))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, System.Array.Of($asm0F.System.Int32)))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize(System.Array.Of($asm0F.System.Int32))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge)))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge)))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [
        $asm09.Fusee.Jometri.Geometry, $asm09.Fusee.Jometri.Face, 
        $asm09.Fusee.Jometri.Vertex
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge)), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.ArgumentException, [$asm0F.System.String]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.HalfEdge, [$asm0F.System.Int32]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0F.System.Int32]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Vertex, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, System.Array.Of($asm0F.System.Int32)), null))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0A.Fusee.Math.Core.float3, $asm0F.System.Single]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge).GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function GeomEditing_AssignFaceHandle (geometry, heHandle, newFace) {
    var $temp00;
    var incidentFace = (geometry.GetHalfEdgeByHandle(heHandle).IncidentFace | 0);
    var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(heHandle).MemberwiseClone();

    do {
      halfEdgeByHandle.IncidentFace = (newFace.Handle | 0);
      (geometry.Geometry$DictHalfEdges$value).set_Item(halfEdgeByHandle.Handle, halfEdgeByHandle.MemberwiseClone());
      halfEdgeByHandle = geometry.GetHalfEdgeByHandle(halfEdgeByHandle.NextHalfEdge).MemberwiseClone();
    } while ((halfEdgeByHandle.Handle | 0) !== (heHandle | 0));
    var faceByHandle = geometry.GetFaceByHandle(incidentFace).MemberwiseClone();
    var flag = ((faceByHandle.InnerHalfEdges).get_Count() | 0) === 0;
    if (!flag) {
      var list = $S00().Construct();
      $T06().prototype.AddRange.call(list, faceByHandle.InnerHalfEdges);

      for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        var originVertex = (geometry.GetHalfEdgeByHandle(current).OriginVertex | 0);
        var flag2 = !$S01().CallStatic($T07(), "IsPointInPolygon", null, geometry, newFace.MemberwiseClone(), geometry.GetVertexByHandle(originVertex).MemberwiseClone());
        if (!flag2) {
          (faceByHandle.InnerHalfEdges).Remove(current);
          (newFace.InnerHalfEdges).Add(current);
          var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(current).MemberwiseClone();

          do {
            halfEdgeByHandle2.IncidentFace = (newFace.Handle | 0);
            (geometry.Geometry$DictHalfEdges$value).set_Item(halfEdgeByHandle2.Handle, halfEdgeByHandle2.MemberwiseClone());
            halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle2.NextHalfEdge).MemberwiseClone();
          } while ((halfEdgeByHandle2.Handle | 0) !== current);
        }
      }
    }
  }; 

  function GeomEditing_GetHoles (geometry, face) {
    var $temp00;
    var dictionary = $S02().Construct();

    for (var a$0 = face.InnerHalfEdges._items, i$0 = 0, l$0 = (face.InnerHalfEdges._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      dictionary.Add(current, $T09().ToList$b1($T03())(geometry.GetHalfEdgeLoop(current)));
    }
    return dictionary;
  }; 

  function GeomEditing_InsertDiagonal (geometry, p, q) {
    var face2 = new ($T02())();
    var halfEdge = new JSIL.BoxedVariable(new ($T03())());
    var halfEdge2 = new JSIL.BoxedVariable(new ($T03())());
    var face = geometry.GetFaceToInsertDiag(p, q, /* ref */ halfEdge, /* ref */ halfEdge2).MemberwiseClone();
    var flag = $T07().IsVertexAdjacentToVertex(
      geometry, 
      p, 
      q, 
      halfEdge.get().MemberwiseClone(), 
      halfEdge2.get().MemberwiseClone()
    );
    if (flag) {
      throw $S03().Construct("A diagonal can't be inserted between adjacent Vertices!");
    }
    var halfEdge3 = $S04().Construct(geometry.CreateHalfEdgeHandleId());
    var halfEdge4 = $S04().Construct(geometry.CreateHalfEdgeHandleId());
    halfEdge3.OriginVertex = (p | 0);
    halfEdge3.NextHalfEdge = (halfEdge2.get().Handle | 0);
    halfEdge3.PrevHalfEdge = (halfEdge.get().PrevHalfEdge | 0);
    halfEdge3.IncidentFace = (face.Handle | 0);
    halfEdge4.OriginVertex = (q | 0);
    halfEdge4.NextHalfEdge = (halfEdge.get().Handle | 0);
    halfEdge4.PrevHalfEdge = (halfEdge2.get().PrevHalfEdge | 0);
    halfEdge4.IncidentFace = (face.Handle | 0);
    halfEdge3.TwinHalfEdge = (halfEdge4.Handle | 0);
    halfEdge4.TwinHalfEdge = (halfEdge3.Handle | 0);
    (geometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
    (geometry.Geometry$DictHalfEdges$value).Add(halfEdge4.Handle, halfEdge4.MemberwiseClone());
    var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(halfEdge.get().PrevHalfEdge).MemberwiseClone();
    var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(halfEdge2.get().PrevHalfEdge).MemberwiseClone();
    var value = (geometry.Geometry$DictHalfEdges$value).get_Item(halfEdgeByHandle.Handle).MemberwiseClone();
    value.NextHalfEdge = (halfEdge3.Handle | 0);
    (geometry.Geometry$DictHalfEdges$value).set_Item(halfEdgeByHandle.Handle, value.MemberwiseClone());
    var value2 = (geometry.Geometry$DictHalfEdges$value).get_Item(halfEdgeByHandle2.Handle).MemberwiseClone();
    value2.NextHalfEdge = (halfEdge4.Handle | 0);
    (geometry.Geometry$DictHalfEdges$value).set_Item(halfEdgeByHandle2.Handle, value2.MemberwiseClone());
    var value3 = (geometry.Geometry$DictHalfEdges$value).get_Item(halfEdge.get().Handle).MemberwiseClone();
    value3.PrevHalfEdge = (halfEdge4.Handle | 0);
    (geometry.Geometry$DictHalfEdges$value).set_Item(halfEdge.get().Handle, value3.MemberwiseClone());
    var value4 = (geometry.Geometry$DictHalfEdges$value).get_Item(halfEdge2.get().Handle).MemberwiseClone();
    value4.PrevHalfEdge = (halfEdge3.Handle | 0);
    (geometry.Geometry$DictHalfEdges$value).set_Item(halfEdge2.get().Handle, value4.MemberwiseClone());
    var holes = $thisType.GetHoles(geometry, face);
    var flag2 = ((holes.get_Count() | 0) !== 0) && 
    $thisType.IsNewEdgeToHole(holes, p, q, face.MemberwiseClone());
    if (!flag2) {
      (face2 = face2.MemberwiseClone(), 
        $S05().Call($T02().prototype, "_ctor", null, face2, geometry.CreateFaceHandleId(), halfEdge4.Handle));
      var faceData = face2.FaceData.MemberwiseClone();
      faceData.FaceNormal = face.FaceData.FaceNormal.MemberwiseClone();
      face2.FaceData = faceData.MemberwiseClone();
      (geometry.Geometry$DictFaces$value).Add(face2.Handle, face2.MemberwiseClone());
      $thisType.AssignFaceHandle(geometry, face2.OuterHalfEdge, face2.MemberwiseClone());
      var face3 = face.MemberwiseClone();
      face3.OuterHalfEdge = (halfEdge3.Handle | 0);
      face = face3;
      (geometry.Geometry$DictFaces$value).set_Item(face.Handle, face.MemberwiseClone());
    }
  }; 

  function GeomEditing_InsertVertex (geometry, p, q, pos) {
    var list = $T09().ToList$b1($T0F())(geometry.GetVertexAdjacentVertices(p));

  $loop0: 
    for (var i = 0; i < (list.get_Count() | 0); i = ((i + 1) | 0)) {
      var flag = (list.get_Item(i).Handle | 0) === (q | 0);
      if (flag) {
        break $loop0;
      }
      var flag2 = i === (((list.get_Count() | 0) - 1) | 0);
      if (flag2) {
        throw $S03().Construct(JSIL.ConcatString.apply(null, JSIL.Array.New($T11(), ["Vertices with Handle q=", $T01().$Box(q), " and p=", $T01().$Box(p), " are not adjacent!"])));
      }
    }
    var vertex = $S06().Construct(geometry.CreateVertHandleId(), pos.MemberwiseClone());
    var halfEdge = $S04().Construct(geometry.CreateHalfEdgeHandleId());
    var halfEdge2 = $S04().Construct(geometry.CreateHalfEdgeHandleId());
    halfEdge.OriginVertex = (vertex.Handle | 0);
    halfEdge2.OriginVertex = (vertex.Handle | 0);
    vertex.IncidentHalfEdge = (halfEdge2.Handle | 0);
    var vertexByHandle = geometry.GetVertexByHandle(p).MemberwiseClone();
    var vertexByHandle2 = geometry.GetVertexByHandle(q).MemberwiseClone();
    var vertexStartingHalfEdges = geometry.GetVertexStartingHalfEdges(vertexByHandle.Handle);
    var halfEdge3 = new ($T03())();
    var halfEdge4 = new ($T03())();
    var enumerator = $IM00().Call(vertexStartingHalfEdges, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null).MemberwiseClone();
        var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(current.TwinHalfEdge).MemberwiseClone();
        var flag3 = (halfEdgeByHandle.OriginVertex | 0) !== (vertexByHandle2.Handle | 0);
        if (!flag3) {
          halfEdge3 = current.MemberwiseClone();
          halfEdge4 = halfEdgeByHandle.MemberwiseClone();
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(halfEdge4.NextHalfEdge).MemberwiseClone();
    var halfEdgeByHandle3 = geometry.GetHalfEdgeByHandle(halfEdge3.NextHalfEdge).MemberwiseClone();
    halfEdge3.TwinHalfEdge = (halfEdge.Handle | 0);
    halfEdge.TwinHalfEdge = (halfEdge3.Handle | 0);
    halfEdge.NextHalfEdge = (halfEdge4.NextHalfEdge | 0);
    halfEdge4.NextHalfEdge = (halfEdge.Handle | 0);
    halfEdge.PrevHalfEdge = (halfEdge4.Handle | 0);
    halfEdgeByHandle2.PrevHalfEdge = (halfEdge.Handle | 0);
    halfEdge4.TwinHalfEdge = (halfEdge2.Handle | 0);
    halfEdge2.TwinHalfEdge = (halfEdge4.Handle | 0);
    halfEdge2.NextHalfEdge = (halfEdge3.NextHalfEdge | 0);
    halfEdge3.NextHalfEdge = (halfEdge2.Handle | 0);
    halfEdge2.PrevHalfEdge = (halfEdge3.Handle | 0);
    halfEdgeByHandle3.PrevHalfEdge = (halfEdge2.Handle | 0);
    halfEdge.IncidentFace = (halfEdge4.IncidentFace | 0);
    halfEdge2.IncidentFace = (halfEdge3.IncidentFace | 0);
    geometry.ReplaceHalfEdge(halfEdge3.MemberwiseClone());
    geometry.ReplaceHalfEdge(halfEdge4.MemberwiseClone());
    geometry.ReplaceHalfEdge(halfEdgeByHandle2.MemberwiseClone());
    geometry.ReplaceHalfEdge(halfEdgeByHandle3.MemberwiseClone());
    (geometry.Geometry$DictVertices$value).Add(vertex.Handle, vertex.MemberwiseClone());
    (geometry.Geometry$DictHalfEdges$value).Add(halfEdge.Handle, halfEdge.MemberwiseClone());
    (geometry.Geometry$DictHalfEdges$value).Add(halfEdge2.Handle, halfEdge2.MemberwiseClone());
    return vertex.Handle;
  }; 

  function GeomEditing_InsetFace (geometry, faceHandle, insetOffset) {
    var vertex = new ($T0F())(), halfEdge2 = new ($T03())(), halfEdge3 = new ($T03())(), halfEdge4 = new ($T03())(), halfEdge5 = new ($T03())(), face = new ($T02())();
    var flag = +insetOffset >= 1;
    if (flag) {
      throw $S03().Construct("insetOffset can not be greate or equal to 1.");
    }
    var flag2 = +insetOffset <= 0;
    if (flag2) {
      throw $S03().Construct("insetOffset can not be smaller or equal to 0.");
    }
    var faceByHandle = geometry.GetFaceByHandle(faceHandle).MemberwiseClone();
    var vertices = $T09().ToList$b1($T0F())(geometry.GetFaceVertices(faceHandle));
    var verticesMeanPos = $T07().GetVerticesMeanPos(vertices);
    var dictionary = $S07().Construct();
    var num = 0;
    var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(faceByHandle.OuterHalfEdge).MemberwiseClone();
    var halfEdge = halfEdgeByHandle.MemberwiseClone();

    do {
      var nextHalfEdge = (halfEdge.NextHalfEdge | 0);
      var vertexByHandle = geometry.GetVertexByHandle(halfEdge.OriginVertex).MemberwiseClone();
      var pos = vertexByHandle.VertData.Pos.MemberwiseClone();
      var pos2 = $T0D().op_Addition($S08().CallStatic($T0D(), "op_Multiply", null, $T0D().op_Subtraction(pos.MemberwiseClone(), verticesMeanPos).MemberwiseClone(), insetOffset).MemberwiseClone(), verticesMeanPos);
      (vertex = vertex.MemberwiseClone(), 
        $S09().Call($T0F().prototype, "_ctor", null, vertex, geometry.CreateVertHandleId(), pos2.MemberwiseClone()));
      var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).MemberwiseClone();
      (halfEdge2 = halfEdge2.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge2, geometry.CreateHalfEdgeHandleId()));
      (halfEdge3 = halfEdge3.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge3, geometry.CreateHalfEdgeHandleId()));
      (halfEdge4 = halfEdge4.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge4, geometry.CreateHalfEdgeHandleId()));
      (halfEdge5 = halfEdge5.MemberwiseClone(), 
        $T03().prototype._ctor.call(halfEdge5, geometry.CreateHalfEdgeHandleId()));
      (face = face.MemberwiseClone(), 
        $T02().prototype._ctor.call(face, geometry.CreateFaceHandleId()));
      dictionary.Add(num, JSIL.Array.New($T01(), [halfEdge2.Handle, halfEdge3.Handle, halfEdge5.Handle, vertex.Handle]));
      vertex.IncidentHalfEdge = (halfEdge5.Handle | 0);
      face.OuterHalfEdge = (halfEdge2.Handle | 0);
      halfEdge2.OriginVertex = (halfEdgeByHandle2.OriginVertex | 0);
      halfEdge5.OriginVertex = (vertex.Handle | 0);
      halfEdge3.OriginVertex = (vertex.Handle | 0);
      halfEdge4.TwinHalfEdge = (halfEdge3.Handle | 0);
      halfEdge3.TwinHalfEdge = (halfEdge4.Handle | 0);
      halfEdge2.NextHalfEdge = (halfEdge4.Handle | 0);
      halfEdge4.NextHalfEdge = (halfEdge5.Handle | 0);
      halfEdge5.NextHalfEdge = (halfEdge.Handle | 0);
      halfEdge.NextHalfEdge = (halfEdge2.Handle | 0);
      halfEdge2.PrevHalfEdge = (halfEdge.Handle | 0);
      halfEdge4.PrevHalfEdge = (halfEdge2.Handle | 0);
      halfEdge5.PrevHalfEdge = (halfEdge4.Handle | 0);
      halfEdge.PrevHalfEdge = (halfEdge5.Handle | 0);
      halfEdge2.IncidentFace = (face.Handle | 0);
      halfEdge4.IncidentFace = (face.Handle | 0);
      halfEdge5.IncidentFace = (face.Handle | 0);
      halfEdge.IncidentFace = (face.Handle | 0);
      halfEdge3.IncidentFace = (faceByHandle.Handle | 0);
      face.FaceData.FaceNormal = faceByHandle.FaceData.FaceNormal.MemberwiseClone();
      (geometry.Geometry$DictVertices$value).Add(vertex.Handle, vertex.MemberwiseClone());
      (geometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge2.Handle, halfEdge2.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge4.Handle, halfEdge4.MemberwiseClone());
      (geometry.Geometry$DictHalfEdges$value).Add(halfEdge5.Handle, halfEdge5.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdge.MemberwiseClone());
      num = ((num + 1) | 0);
      halfEdge = geometry.GetHalfEdgeByHandle(nextHalfEdge).MemberwiseClone();
    } while ($T03().op_Inequality(halfEdgeByHandle, halfEdge));

    for (var i = 0; i < num; i = ((i + 1) | 0)) {
      var key = ((i - 1) | 0);
      var key2 = ((i + 1) | 0);
      var array = dictionary.get_Item(i);
      var flag3 = i === 0;
      if (flag3) {
        key = ((num - 1) | 0);
      }
      var flag4 = i === ((num - 1) | 0);
      if (flag4) {
        key2 = 0;
        faceByHandle.OuterHalfEdge = (array[1] | 0);
        geometry.ReplaceFace(faceByHandle.MemberwiseClone());
      }
      var array2 = dictionary.get_Item(key);
      var array3 = dictionary.get_Item(key2);
      var halfEdgeByHandle3 = geometry.GetHalfEdgeByHandle(array[1]).MemberwiseClone();
      var halfEdgeByHandle4 = geometry.GetHalfEdgeByHandle(array[2]).MemberwiseClone();
      var halfEdgeByHandle5 = geometry.GetHalfEdgeByHandle(array2[0]).MemberwiseClone();
      var halfEdgeByHandle6 = geometry.GetHalfEdgeByHandle(halfEdgeByHandle3.TwinHalfEdge).MemberwiseClone();
      halfEdgeByHandle3.PrevHalfEdge = (array2[1] | 0);
      halfEdgeByHandle3.NextHalfEdge = (array3[1] | 0);
      halfEdgeByHandle6.OriginVertex = (array3[3] | 0);
      halfEdgeByHandle5.TwinHalfEdge = (halfEdgeByHandle4.Handle | 0);
      halfEdgeByHandle4.TwinHalfEdge = (halfEdgeByHandle5.Handle | 0);
      geometry.ReplaceHalfEdge(halfEdgeByHandle3.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdgeByHandle6.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdgeByHandle5.MemberwiseClone());
      geometry.ReplaceHalfEdge(halfEdgeByHandle4.MemberwiseClone());
    }
    return geometry;
  }; 

  function GeomEditing_IsNewEdgeToHole (holes, pHandle, qHandle, face) {
    var $temp00;
    var flag = (holes.get_Count() | 0) === 0;
    if (flag) {
      var result = false;
    } else {
      var enumerator = $T08().prototype.GetEnumerator.call(holes);

      while ($T1B().prototype.MoveNext.call(enumerator)) {
        var current = $T1B().prototype.get_Current.call(enumerator).MemberwiseClone();

        for (var a$0 = current.get_Value()._items, i$0 = 0, l$0 = (current.get_Value()._size | 0); i$0 < l$0; ($temp00 = i$0, 
            i$0 = ((i$0 + 1) | 0), 
            $temp00)) {
          var current2 = a$0[i$0];
          var flag2 = ((pHandle | 0) !== (current2.OriginVertex | 0)) && 
          ((qHandle | 0) !== (current2.OriginVertex | 0));
          if (!flag2) {
            (face.InnerHalfEdges).Remove(current.get_Key());
            result = true;
            return result;
          }
        }
      }
      result = false;
    }
    return result;
  }; 

  function GeomEditing_UpdateHalfEdgeOrigin (edge, newVHandle) {
    edge.OriginVertex = (newVHandle | 0);
    return edge;
  }; 

  JSIL.MakeStaticClass("Fusee.Jometri.GeomEditing", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:false}, "AssignFaceHandle", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $asm09.TypeRef("Fusee.Jometri.Face")
        ]), 
      GeomEditing_AssignFaceHandle
    );

    $.Method({Static:true , Public:false}, "GetHoles", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])]), [$asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face")]), 
      GeomEditing_GetHoles
    );

    $.Method({Static:true , Public:true }, "InsertDiagonal", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $.Int32
        ]), 
      GeomEditing_InsertDiagonal
    );

    $.Method({Static:true , Public:true }, "InsertVertex", 
      new JSIL.MethodSignature($.Int32, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $.Int32, $asm0A.TypeRef("Fusee.Math.Core.float3")
        ]), 
      GeomEditing_InsertVertex
    );

    $.Method({Static:true , Public:true }, "InsetFace", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $.Single
        ]), 
      GeomEditing_InsetFace
    );

    $.Method({Static:true , Public:false}, "IsNewEdgeToHole", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])]), $.Int32, 
          $.Int32, $asm09.TypeRef("Fusee.Jometri.Face")
        ]), 
      GeomEditing_IsNewEdgeToHole
    );

    $.Method({Static:true , Public:false}, "UpdateHalfEdgeOrigin", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.HalfEdge"), [$asm09.TypeRef("Fusee.Jometri.HalfEdge"), $.Int32]), 
      GeomEditing_UpdateHalfEdgeOrigin
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.GeometricOperations */ 

(function GeometricOperations$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.Fusee.Jometri.GeometricOperations_$lGetHalfEdgesWChangedWinding$gd__7)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Math)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Double)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3x3)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0A.Fusee.Math.Core.float3, $asm0F.System.Single]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0A.Fusee.Math.Core.float3, $asm0A.Fusee.Math.Core.float3x3]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0A.Fusee.Math.Core.float3x3, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Double, [$asm0F.System.Double, $asm0F.System.Int32]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.Vertex).get_Count)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex).get_Item)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm0A.Fusee.Math.Core.float3).get_Count)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm0A.Fusee.Math.Core.float3).get_Item)) ();
  };


  function GeometricOperations_CalculateFaceNormal (faceOuterVertices) {
    var float = new ($T01())();

    for (var i = 0; i < ($IM00().Call(faceOuterVertices, null) | 0); i = ((i + 1) | 0)) {
      var pos = $IM01().Call(faceOuterVertices, null, i).VertData.Pos;
      var pos2 = $IM01().Call(faceOuterVertices, null, ((((i + 1) | 0) % ($IM00().Call(faceOuterVertices, null) | 0)) | 0)).VertData.Pos;
      float.x = +float.x + ((+pos.y - +pos2.y) * (+pos.z + +pos2.z));
      float.y = +float.y + ((+pos.z - +pos2.z) * (+pos.x + +pos2.x));
      float.z = +float.z + ((+pos.x - +pos2.x) * (+pos.y + +pos2.y));
    }
    float = $S00().CallStatic($T01(), "op_Multiply", null, float.MemberwiseClone(), -1);
    float.Normalize();
    return float;
  }; 

  function GeometricOperations_GetHalfEdgesWChangedWinding (geometry, originHEdges) {
    var expr_07 = new ($T06())(-2);
    expr_07.$l$g3__geometry = geometry;
    expr_07.$l$g3__originHEdges = originHEdges;
    return expr_07;
  }; 

  function GeometricOperations_GetVerticesMeanPos (vertices) {
    var $temp00;
    var float = new ($T01())();

    for (var a$0 = vertices._items, i$0 = 0, l$0 = (vertices._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      float = $T01().op_Addition(float.MemberwiseClone(), current.VertData.Pos);
    }
    float = $T01().op_Division(float.MemberwiseClone(), +(vertices.get_Count())).MemberwiseClone();
    return float;
  }; 

  function GeometricOperations_IsAngleGreaterOrEqualPi (geom, face, v1, v2, v3) {
    var left = geom.Get2DVertPos(face.MemberwiseClone(), v1.Handle).MemberwiseClone();
    var right = geom.Get2DVertPos(face.MemberwiseClone(), v2.Handle);
    var left2 = geom.Get2DVertPos(face.MemberwiseClone(), v3.Handle).MemberwiseClone();
    var float = $T01().op_Subtraction(left.MemberwiseClone(), right);
    var float2 = $T01().op_Subtraction(left2.MemberwiseClone(), right);
    var num = (+float.x * +float2.y) - (+float.y * +float2.x);
    var num2 = +$T01().Dot(float, float2);
    var num3 = Math.fround(Math.atan2(num, num2));
    return (num3 <= 0);
  }; 

  function GeometricOperations_IsAngleGreaterPi (geom, face, v1, v2, v3) {
    var left = geom.Get2DVertPos(face.MemberwiseClone(), v1.Handle).MemberwiseClone();
    var right = geom.Get2DVertPos(face.MemberwiseClone(), v2.Handle);
    var left2 = geom.Get2DVertPos(face.MemberwiseClone(), v3.Handle).MemberwiseClone();
    var float = $T01().op_Subtraction(left.MemberwiseClone(), right);
    var float2 = $T01().op_Subtraction(left2.MemberwiseClone(), right);
    var num = (+float.x * +float2.y) - (+float.y * +float2.x);
    var num2 = +$T01().Dot(float, float2);
    var num3 = Math.fround(Math.atan2(num, num2));
    var flag = (((num3 * -1) === 3.14159274));
    return (!flag && (num3 < 0));
  }; 

  function GeometricOperations_IsCounterClockwise (source) {
    var num = 0;

    for (var i = 0; i < ($IM02().Call(source, null) | 0); i = ((i + 1) | 0)) {
      var float = $IM03().Call(source, null, i);
      var float2 = $IM03().Call(source, null, ((((i + 1) | 0) % ($IM02().Call(source, null) | 0)) | 0));
      num += (+float2.x - +float.x) * (+float2.y + +float.y);
    }
    return (num < 0);
  }; 

  function GeometricOperations_IsLineIntersectingLine (p1, p2, p3, p4) {
    var float = $T01().op_Subtraction(p2.MemberwiseClone(), p1);
    var float2 = $T01().op_Subtraction(p3.MemberwiseClone(), p4);
    var float3 = $T01().op_Subtraction(p1.MemberwiseClone(), p3);
    var num = (+float2.y * +float2.x) - (+float2.x * +float3.y);
    var num2 = (+float.x * +float3.y) - (+float.y * +float3.x);
    var num3 = (+float.y * +float2.x) - (+float.x * +float2.y);
    var flag = num3 > 0;
    if (flag) {
      var flag2 = (num < 0) || 
      (num > num3);
      if (flag2) {
        var result = false;
        return result;
      }
    } else {
      var flag3 = (num > 0) || 
      (num < num3);
      if (flag3) {
        result = false;
        return result;
      }
    }
    var flag4 = num3 > 0;
    if (flag4) {
      var flag5 = (num2 < 0) || 
      (num2 > num3);
      if (flag5) {
        result = false;
        return result;
      }
    } else {
      var flag6 = (num2 > 0) || 
      (num2 < num3);
      if (flag6) {
        result = false;
        return result;
      }
    }
    result = true;
    return result;
  }; 

  function GeometricOperations_IsPointInPolygon$00 (geometry, face, v) {
    var $temp00;
    var flag = false;
    var list = $T10().ToList$b1($T08())(geometry.GetFaceVertices(face.Handle));
    var float = geometry.Get2DVertPos(face.MemberwiseClone(), v.Handle);
    var vertexByHandle = geometry.GetVertexByHandle($S01().CallStatic($T10(), "Last$b1", [$asm09.Fusee.Jometri.Vertex], list).Handle).MemberwiseClone();
    var float2 = geometry.Get2DVertPos(face.MemberwiseClone(), vertexByHandle.Handle).MemberwiseClone();
    var flag2 = +float2.y >= +float.y;

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      var float3 = geometry.Get2DVertPos(face.MemberwiseClone(), current.Handle);
      var flag3 = +float3.y >= +float.y;
      var flag4 = flag2 !== flag3;
      if (flag4) {
        var flag5 = (((+float3.y - +float.y) * (+float2.x - +float3.x)) >= ((+float3.x - +float.x) * (+float2.y - +float3.y))) === flag3;
        if (flag5) {
          flag = !flag;
        }
      }
      flag2 = flag3;
      float2 = float3;
    }
    return flag;
  }; 

  function GeometricOperations_IsPointInPolygon$01 (geometry, face, v) {
    var $temp00;
    var flag = false;
    var list = $T10().ToList$b1($T08())(geometry.GetFaceVertices(face.Handle));
    var vertexByHandle = geometry.GetVertexByHandle($S01().CallStatic($T10(), "Last$b1", [$asm09.Fusee.Jometri.Vertex], list).Handle).MemberwiseClone();
    var float = geometry.Get2DVertPos(face.MemberwiseClone(), vertexByHandle.Handle).MemberwiseClone();
    var flag2 = +float.y >= +v.y;

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      var float2 = geometry.Get2DVertPos(face.MemberwiseClone(), current.Handle);
      var flag3 = +float2.y >= +v.y;
      var flag4 = flag2 !== flag3;
      if (flag4) {
        var flag5 = (((+float2.y - +v.y) * (+float.x - +float2.x)) >= ((+float2.x - +v.x) * (+float.y - +float2.y))) === flag3;
        if (flag5) {
          flag = !flag;
        }
      }
      flag2 = flag3;
      float = float2;
    }
    return flag;
  }; 

  function GeometricOperations_IsVertexAdjacentToVertex (geometry, p, q, vertPStartHe, vertQStartHe) {
    var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(vertPStartHe.NextHalfEdge);
    var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(vertQStartHe.NextHalfEdge);
    return (((halfEdgeByHandle.OriginVertex | 0) === (q | 0)) || ((halfEdgeByHandle2.OriginVertex | 0) === (p | 0)));
  }; 

  function GeometricOperations_Reduce2D (vertPos, normal) {
    var matrix = new ($T12())(), row = new ($T01())(), row2 = new ($T01())(), row3 = new ($T01())(), float3x = new ($T12())(), matrix2 = new ($T12())();
    normal.Normalize();
    var flag = $T01().op_Equality(normal.MemberwiseClone(), $T01().UnitZ.MemberwiseClone());
    if (flag) {
      (matrix = matrix.MemberwiseClone(), 
        $T12().prototype._ctor.call(matrix, 
          -1, 
          0, 
          0, 
          0, 
          1, 
          0, 
          0, 
          0, 
          1
        ));
      var result = $S02().CallStatic($T12(), "op_Multiply", null, vertPos, matrix);
    } else {
      var flag2 = $T01().op_Equality(normal.MemberwiseClone(), $S00().CallStatic($T01(), "op_Multiply", null, $T01().UnitZ.MemberwiseClone(), -1).MemberwiseClone());
      if (flag2) {
        result = vertPos.MemberwiseClone();
      } else {
        var float = $T01().Cross(normal.MemberwiseClone(), $T01().UnitZ.MemberwiseClone()).MemberwiseClone();
        float.Normalize();
        var float2 = $T01().Cross(normal.MemberwiseClone(), float.MemberwiseClone()).MemberwiseClone();
        float2.Normalize();
        (row = row.MemberwiseClone(), 
          $T01().prototype._ctor.call(row, float2.x, float.x, normal.x));
        (row2 = row2.MemberwiseClone(), 
          $T01().prototype._ctor.call(row2, float2.y, float.y, normal.y));
        (row3 = row3.MemberwiseClone(), 
          $T01().prototype._ctor.call(row3, float2.z, float.z, normal.z));
        (float3x = float3x.MemberwiseClone(), 
          $T12().prototype._ctor.call(float3x, row.MemberwiseClone(), row2.MemberwiseClone(), row3.MemberwiseClone()));
        (matrix2 = matrix2.MemberwiseClone(), 
          $T12().prototype._ctor.call(matrix2, float3x.Row0.MemberwiseClone(), float3x.Row1.MemberwiseClone(), float3x.Row2.MemberwiseClone()));
        matrix2.Transpose();
        var float3 = $S03().CallStatic($T12(), "op_Multiply", null, matrix2, vertPos);
        var num = +$S04().CallStatic($T0B(), "Round", null, float3.x, 5);
        var num2 = +$S04().CallStatic($T0B(), "Round", null, float3.y, 5);
        var num3 = +$S04().CallStatic($T0B(), "Round", null, float3.z, 5);
        (float3 = float3.MemberwiseClone(), 
          $T01().prototype._ctor.call(float3, Math.fround(num), Math.fround(num2), Math.fround(num3)));
        result = float3;
      }
    }
    return result;
  }; 

  JSIL.MakeStaticClass("Fusee.Jometri.GeometricOperations", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "CalculateFaceNormal", 
      new JSIL.MethodSignature($asm0A.TypeRef("Fusee.Math.Core.float3"), [$asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])]), 
      GeometricOperations_CalculateFaceNormal
    );

    $.Method({Static:true , Public:true }, "GetHalfEdgesWChangedWinding", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), [$asm09.TypeRef("Fusee.Jometri.Geometry"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])]), 
      GeometricOperations_GetHalfEdgesWChangedWinding
    );

    $.Method({Static:true , Public:true }, "GetVerticesMeanPos", 
      new JSIL.MethodSignature($asm0A.TypeRef("Fusee.Math.Core.float3"), [$asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])]), 
      GeometricOperations_GetVerticesMeanPos
    );

    $.Method({Static:true , Public:true }, "IsAngleGreaterOrEqualPi", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      GeometricOperations_IsAngleGreaterOrEqualPi
    );

    $.Method({Static:true , Public:true }, "IsAngleGreaterPi", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      GeometricOperations_IsAngleGreaterPi
    );

    $.Method({Static:true , Public:true }, "IsCounterClockwise", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm0A.TypeRef("Fusee.Math.Core.float3")])]), 
      GeometricOperations_IsCounterClockwise
    );

    $.Method({Static:true , Public:true }, "IsLineIntersectingLine", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("Fusee.Math.Core.float3"), $asm0A.TypeRef("Fusee.Math.Core.float3"), 
          $asm0A.TypeRef("Fusee.Math.Core.float3"), $asm0A.TypeRef("Fusee.Math.Core.float3")
        ]), 
      GeometricOperations_IsLineIntersectingLine
    );

    $.Method({Static:true , Public:true }, "IsPointInPolygon", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      GeometricOperations_IsPointInPolygon$00
    );

    $.Method({Static:true , Public:true }, "IsPointInPolygon", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $asm0A.TypeRef("Fusee.Math.Core.float3")
        ]), 
      GeometricOperations_IsPointInPolygon$01
    );

    $.Method({Static:true , Public:true }, "IsVertexAdjacentToVertex", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $.Int32, 
          $.Int32, $asm09.TypeRef("Fusee.Jometri.HalfEdge"), 
          $asm09.TypeRef("Fusee.Jometri.HalfEdge")
        ]), 
      GeometricOperations_IsVertexAdjacentToVertex
    );

    $.Method({Static:true , Public:false}, "Reduce2D", 
      new JSIL.MethodSignature($asm0A.TypeRef("Fusee.Math.Core.float3"), [$asm0A.TypeRef("Fusee.Math.Core.float3"), $asm0A.TypeRef("Fusee.Math.Core.float3")]), 
      GeometricOperations_Reduce2D
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.GeometricOperations+<GetHalfEdgesWChangedWinding>d__7 */ 

(function $lGetHalfEdgesWChangedWinding$gd__7$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge).GetEnumerator)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge).get_Current)) ();
  };


  function $lGetHalfEdgesWChangedWinding$gd__7__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    if (this.$l$gs__1 !== null) {
      $IM00().Call(this.$l$gs__1, null);
    }
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_MoveNext ($exception) {
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lvertToUpdate$g5__7 = (this.geometry.Geometry$DictVertices$value).get_Item(this.$lnewOrigin$g5__6).MemberwiseClone();
        this.$lvertToUpdate$g5__7.IncidentHalfEdge = (this.$lhe$g5__3.Handle | 0);
        (this.geometry.Geometry$DictVertices$value).set_Item(this.$lnewOrigin$g5__6, this.$lvertToUpdate$g5__7.MemberwiseClone());
        this.$lhe$g5__3 = new ($T08())();
        this.$lvertToUpdate$g5__7 = new ($T09())();
        this.$lhEdge$g5__2 = new ($T08())();
      } else {
        this.$l$g1__state = -1;
        this.$l$gs__1 = $IM01().Call(this.originHEdges, null);
        this.$l$g1__state = -3;
      }
      if (!$IM02().Call(this.$l$gs__1, null)) {
        this.$l$gm__Finally1();
        this.$l$gs__1 = null;
        result = false;
      } else {
        this.$lhEdge$g5__2 = $IM03().Call(this.$l$gs__1, null).MemberwiseClone();
        this.$lhe$g5__3 = this.$lhEdge$g5__2.MemberwiseClone();
        this.$lnext$g5__4 = (this.$lhe$g5__3.PrevHalfEdge | 0);
        this.$lprev$g5__5 = (this.$lhe$g5__3.NextHalfEdge | 0);
        this.$lhe$g5__3.NextHalfEdge = (this.$lnext$g5__4 | 0);
        this.$lhe$g5__3.PrevHalfEdge = (this.$lprev$g5__5 | 0);
        this.$lnewOrigin$g5__6 = ((this.geometry).GetHalfEdgeByHandle(this.$lhe$g5__3.PrevHalfEdge).OriginVertex | 0);
        this.$lhe$g5__3.OriginVertex = (this.$lnewOrigin$g5__6 | 0);
        this.$l$g2__current = this.$lhe$g5__3.MemberwiseClone();
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetHalfEdgesWChangedWinding$gd__ = this;
    } else {
      $lGetHalfEdgesWChangedWinding$gd__ = new $thisType(0);
    }
    $lGetHalfEdgesWChangedWinding$gd__.geometry = this.$l$g3__geometry;
    $lGetHalfEdgesWChangedWinding$gd__.originHEdges = this.$l$g3__originHEdges;
    return $lGetHalfEdgesWChangedWinding$gd__;
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetHalfEdgesWChangedWinding$gd__7_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.GeometricOperations+<GetHalfEdgesWChangedWinding>d__7", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetHalfEdgesWChangedWinding$gd__7__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lGetHalfEdgesWChangedWinding$gd__7_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetHalfEdgesWChangedWinding$gd__7_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetHalfEdgesWChangedWinding$gd__7_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetHalfEdgesWChangedWinding$gd__7_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "geometry", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:true }, "$l$g3__geometry", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "originHEdges", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:true }, "$l$g3__originHEdges", $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:false}, "$lhEdge$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lhe$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lnext$g5__4", $.Int32);

    $.Field({Static:false, Public:false}, "$lprev$g5__5", $.Int32);

    $.Field({Static:false, Public:false}, "$lnewOrigin$g5__6", $.Int32);

    $.Field({Static:false, Public:false}, "$lvertToUpdate$g5__7", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry */ 

(function Geometry$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm09.Fusee.Jometri.Face, $asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.PolyBoundary))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.Fusee.Jometri.GeomInitializeHelper)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm09.Fusee.Jometri.GeometricOperations)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetAllFaces$gd__35)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetAllHalfEdges$gd__34)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetAllVertices$gd__33)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.System.ArgumentException)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetFaceHalfEdges$gd__47)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetFaceOuterVertices$gd__46)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetFacesAdajacentToFace$gd__44)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$l$gc__DisplayClass55_0)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.System.Func$b2.Of($asm09.Fusee.Jometri.HalfEdge, $asm0F.System.Boolean))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize(System.Array.Of($asm0F.System.Object))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetFaceVertices$gd__45)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetHalfEdgeLoop$gd__42)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetHalfEdgeLoopReverse$gd__43)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetVertexAdajacentFaces$gd__37)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetVertexAdjacentVertices$gd__36)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetVertexIncidentHalfEdges$gd__38)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetVertexStartingHalfEdges$gd__39)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$lGetVertexTargetingHalfEdges$gd__40)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm09.Fusee.Jometri.FaceData)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm09.Fusee.Jometri.Face, $asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3)), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm0F.TypeRef("System.Int32")])]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Geometry, null))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0F.TypeRef("System.Int32"), $asm09.TypeRef("Fusee.Jometri.Vertex")])]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0F.TypeRef("System.Int32"), $asm09.TypeRef("Fusee.Jometri.HalfEdge")])]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0F.System.Int32]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3), null))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.ArgumentException, [$asm0F.System.String]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm0F.TypeRef("System.Func`2", ["!!0", $asm0F.TypeRef("System.Boolean")])], ["TSource"]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm09.Fusee.Jometri.HalfEdge]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm09.Fusee.Jometri.HalfEdge]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0F.System.Single, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [
        $asm09.Fusee.Jometri.Geometry, $asm09.Fusee.Jometri.Face, 
        $asm0A.Fusee.Math.Core.float3
      ]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0F.System.Int32)]))) ();
  };


  function Geometry__ctor$00 () {
    this._vertPos2DCache = $S00().Construct();
    this.Geometry$DictVertices$value = $S01().Construct();
    this.Geometry$DictHalfEdges$value = $S02().Construct();
    this.Geometry$DictFaces$value = $S03().Construct();
  }; 

  function Geometry__ctor$01 (outlines) {
    var $temp00;
    this._vertPos2DCache = $S00().Construct();
    this.Geometry$DictVertices$value = $S01().Construct();
    this.Geometry$DictHalfEdges$value = $S02().Construct();
    this.Geometry$DictFaces$value = $S03().Construct();
    $T05().CreateHalfEdgesForGeometry(this, outlines);
    var list = $S04().Construct((this.Geometry$DictFaces$value).get_Keys());

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (current !== 1) {
        this.SetFaceNormal(
          $T09().ToList$b1($T08())(this.GetFaceOuterVertices(current)), 
          (this.Geometry$DictFaces$value).get_Item(current)
        );
      }
    }
  }; 

  function Geometry_CloneGeometry () {
    var face = new ($T0A())();
    var expr_06 = $S05().Construct();
    expr_06.Geometry$DictVertices$value = $S06().Construct(this.Geometry$DictVertices$value);
    expr_06.Geometry$DictHalfEdges$value = $S07().Construct(this.Geometry$DictHalfEdges$value);
    expr_06.Geometry$DictFaces$value = $S03().Construct();
    var geometry = expr_06;
    var enumerator = $T03().prototype.GetEnumerator.call(this.Geometry$DictFaces$value);

    while ($T0B().prototype.MoveNext.call(enumerator)) {
      var current = $T0B().prototype.get_Current.call(enumerator);
      var value = current.get_Value().MemberwiseClone();
      (face = face.MemberwiseClone(), 
        $S08().Call($T0A().prototype, "_ctor", null, face, value.Handle, value.OuterHalfEdge));
      $T06().prototype.AddRange.call(face.InnerHalfEdges, value.InnerHalfEdges);
      face.FaceData.FaceNormal = value.FaceData.FaceNormal.MemberwiseClone();
      (geometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
    }
    geometry.SetHighestHandles();
    return geometry;
  }; 

  function Geometry_CreateFaceHandleId () {
    var flag = (this.Geometry$HighestFaceHandle$value | 0) === 0;
    if (flag) {
      this.Geometry$HighestFaceHandle$value = 1;
    }
    var num = (((this.Geometry$HighestFaceHandle$value | 0) + 1) | 0);
    this.Geometry$HighestFaceHandle$value = num;
    return num;
  }; 

  function Geometry_CreateHalfEdgeHandleId () {
    var num = (((this.Geometry$HighestHalfEdgeHandle$value | 0) + 1) | 0);
    this.Geometry$HighestHalfEdgeHandle$value = num;
    return num;
  }; 

  function Geometry_CreateVertHandleId () {
    var num = (((this.Geometry$HighestVertHandle$value | 0) + 1) | 0);
    this.Geometry$HighestVertHandle$value = num;
    return num;
  }; 

  function Geometry_get_DictFaces () {
    return this.Geometry$DictFaces$value;
  }; 

  function Geometry_get_DictHalfEdges () {
    return this.Geometry$DictHalfEdges$value;
  }; 

  function Geometry_get_DictVertices () {
    return this.Geometry$DictVertices$value;
  }; 

  function Geometry_get_HighestFaceHandle () {
    return this.Geometry$HighestFaceHandle$value;
  }; 

  function Geometry_get_HighestHalfEdgeHandle () {
    return this.Geometry$HighestHalfEdgeHandle$value;
  }; 

  function Geometry_get_HighestVertHandle () {
    return this.Geometry$HighestVertHandle$value;
  }; 

  function Geometry_Get2DVertPos (face, vertHandle) {
    var dictionary = new JSIL.BoxedVariable(null);
    var float = new JSIL.BoxedVariable(new ($T0F())());
    var flag = (this._vertPos2DCache).TryGetValue(face.MemberwiseClone(), /* ref */ dictionary);
    if (flag) {
      var flag2 = (dictionary.get()).TryGetValue(vertHandle, /* ref */ float);
      if (flag2) {
        var result = float.get().MemberwiseClone();
      } else {
        var vertexByHandle = this.GetVertexByHandle(vertHandle);
        float.set($T10().Reduce2D(vertexByHandle.VertData.Pos, face.FaceData.FaceNormal.MemberwiseClone()).MemberwiseClone());
        (dictionary.get()).set_Item(vertHandle, float.get().MemberwiseClone());
        result = float.get().MemberwiseClone();
      }
    } else {
      var vertexByHandle2 = this.GetVertexByHandle(vertHandle).MemberwiseClone();
      float.set($T10().Reduce2D(vertexByHandle2.VertData.Pos, face.FaceData.FaceNormal.MemberwiseClone()).MemberwiseClone());
      var expr_8C = $S09().Construct();
      expr_8C.Add(vertexByHandle2.Handle, float.get().MemberwiseClone());
      (this._vertPos2DCache).set_Item(face, expr_8C);
      result = float.get().MemberwiseClone();
    }
    return result;
  }; 

  function Geometry_GetAllFaces () {
    var expr_07 = new ($T11())(-2);
    expr_07.$l$g4__this = this;
    return expr_07;
  }; 

  function Geometry_GetAllHalfEdges () {
    var expr_07 = new ($T12())(-2);
    expr_07.$l$g4__this = this;
    return expr_07;
  }; 

  function Geometry_GetAllVertices () {
    var expr_07 = new ($T13())(-2);
    expr_07.$l$g4__this = this;
    return expr_07;
  }; 

  function Geometry_GetFaceByHandle (fHandle) {
    var flag = (this.Geometry$DictFaces$value).ContainsKey(fHandle);
    if (flag) {
      return (this.Geometry$DictFaces$value).get_Item(fHandle);
    }
    throw $S0A().Construct(JSIL.ConcatString("Face with id ", $T07().$Box(fHandle), " not found!"));
  }; 

  function Geometry_GetFaceHalfEdges (fHandle) {
    var expr_07 = new ($T16())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__fHandle = (fHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetFaceOuterVertices (fHandle) {
    var expr_07 = new ($T17())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__fHandle = (fHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetFacesAdajacentToFace (fHandle) {
    var expr_07 = new ($T18())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__fHandle = (fHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetFaceToInsertDiag (p, q, /* ref */ pStartHe, /* ref */ qStartHe) {
    var $temp00, $temp01, $temp02;
    var $closure0 = new ($T1A())();
    var vertexByHandle = this.GetVertexByHandle(p).MemberwiseClone();
    var vertexByHandle2 = this.GetVertexByHandle(q).MemberwiseClone();
    $closure0.heStartingAtP = $T09().ToList$b1($T19())(this.GetVertexStartingHalfEdges(p));
    $closure0.heStartingAtQ = $T09().ToList$b1($T19())(this.GetVertexStartingHalfEdges(q));
    var list = $S0B().Construct($S0C().CallStatic($T09(), "Where$b1", [$asm09.Fusee.Jometri.HalfEdge], $closure0.heStartingAtQ, $T1C().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Jometri.Geometry_$l$gc__DisplayClass55_0, "$lGetFaceToInsertDiag$gb__0", $S0D(), false, false))));
    var list2 = $S0B().Construct($S0C().CallStatic($T09(), "Where$b1", [$asm09.Fusee.Jometri.HalfEdge], $closure0.heStartingAtP, $T1C().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Jometri.Geometry_$l$gc__DisplayClass55_0, "$lGetFaceToInsertDiag$gb__1", $S0E(), false, false))));
    var flag = (list2.get_Count() | 0) === 1;
    if (!flag) {

      for (var a$0 = list2._items, i$0 = 0, l$0 = (list2._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0].MemberwiseClone();
        var faceByHandle = this.GetFaceByHandle(current.IncidentFace).MemberwiseClone();
        if ((faceByHandle.Handle | 0) !== 1) {
          var vertPos = $T0F().op_Addition(
            $S0F().CallStatic($T0F(), "op_Multiply", null, 0.5, vertexByHandle.VertData.Pos.MemberwiseClone()).MemberwiseClone(), 
            $S0F().CallStatic($T0F(), "op_Multiply", null, 0.5, vertexByHandle2.VertData.Pos.MemberwiseClone())
          );
          var v = $T10().Reduce2D(vertPos, faceByHandle.FaceData.FaceNormal.MemberwiseClone());
          var flag3 = !$S10().CallStatic($T10(), "IsPointInPolygon", null, this, faceByHandle.MemberwiseClone(), v);
          if (!flag3) {

            for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
                i$1 = ((i$1 + 1) | 0), 
                $temp01)) {
              var current2 = a$1[i$1];
              var flag4 = (current2.IncidentFace | 0) === (faceByHandle.Handle | 0);
              if (flag4) {
                pStartHe.set(current2);
              }
            }

            for (var a$2 = list._items, i$2 = 0, l$2 = (list._size | 0); i$2 < l$2; ($temp02 = i$2, 
                i$2 = ((i$2 + 1) | 0), 
                $temp02)) {
              var current3 = a$2[i$2];
              var flag5 = (current3.IncidentFace | 0) === (faceByHandle.Handle | 0);
              if (flag5) {
                qStartHe.set(current3);
              }
            }
            var result = faceByHandle;
            return result;
          }
        }
      }
      throw $S0A().Construct(JSIL.ConcatString.apply(null, JSIL.Array.New($T1D(), ["Vertex ", $T07().$Box(p), " vertex ", $T07().$Box(q), " have no common Face!"])));
    }
    var faceByHandle2 = this.GetFaceByHandle(list2.get_Item(0).IncidentFace);
    pStartHe.set(list2.get_Item(0).MemberwiseClone());
    qStartHe.set(list.get_Item(0).MemberwiseClone());
    result = faceByHandle2;
    return result;
  }; 

  function Geometry_GetFaceVertices (fHandle) {
    var expr_07 = new ($T1F())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__fHandle = (fHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetHalfEdgeByHandle (hehandle) {
    var flag = (this.Geometry$DictHalfEdges$value).ContainsKey(hehandle);
    if (flag) {
      return (this.Geometry$DictHalfEdges$value).get_Item(hehandle);
    }
    throw $S0A().Construct(JSIL.ConcatString("HalfEdge with id ", $T07().$Box(hehandle), " not found!"));
  }; 

  function Geometry_GetHalfEdgeLoop (heHandle) {
    var expr_07 = new ($T20())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__heHandle = (heHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetHalfEdgeLoopReverse (heHandle) {
    var expr_07 = new ($T21())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__heHandle = (heHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetVertexAdajacentFaces (vHandle) {
    var expr_07 = new ($T22())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__vHandle = (vHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetVertexAdjacentVertices (vHandle) {
    var expr_07 = new ($T23())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__vHandle = (vHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetVertexByHandle (vHandle) {
    var flag = (this.Geometry$DictVertices$value).ContainsKey(vHandle);
    if (flag) {
      return (this.Geometry$DictVertices$value).get_Item(vHandle);
    }
    throw $S0A().Construct(JSIL.ConcatString("Vertex with id ", $T07().$Box(vHandle), " not found!"));
  }; 

  function Geometry_GetVertexIncidentHalfEdges (vHandle) {
    var expr_07 = new ($T24())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__vHandle = (vHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetVertexStartingHalfEdges (vHandle) {
    var expr_07 = new ($T25())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__vHandle = (vHandle | 0);
    return expr_07;
  }; 

  function Geometry_GetVertexTargetingHalfEdges (vHandle) {
    var expr_07 = new ($T26())(-2);
    expr_07.$l$g4__this = this;
    expr_07.$l$g3__vHandle = (vHandle | 0);
    return expr_07;
  }; 

  function Geometry_ReplaceFace (face) {
    (this.Geometry$DictFaces$value).set_Item(face.Handle, face.MemberwiseClone());
  }; 

  function Geometry_ReplaceHalfEdge (halfEdge) {
    (this.Geometry$DictHalfEdges$value).set_Item(halfEdge.Handle, halfEdge.MemberwiseClone());
  }; 

  function Geometry_ReplaceVertex (vert) {
    (this.Geometry$DictVertices$value).set_Item(vert.Handle, vert.MemberwiseClone());
  }; 

  function Geometry_set_DictFaces (value) {
    this.Geometry$DictFaces$value = value;
  }; 

  function Geometry_set_DictHalfEdges (value) {
    this.Geometry$DictHalfEdges$value = value;
  }; 

  function Geometry_set_DictVertices (value) {
    this.Geometry$DictVertices$value = value;
  }; 

  function Geometry_set_HighestFaceHandle (value) {
    this.Geometry$HighestFaceHandle$value = (value | 0);
  }; 

  function Geometry_set_HighestHalfEdgeHandle (value) {
    this.Geometry$HighestHalfEdgeHandle$value = (value | 0);
  }; 

  function Geometry_set_HighestVertHandle (value) {
    this.Geometry$HighestVertHandle$value = (value | 0);
  }; 

  function Geometry_SetFaceNormal (faceOuterVertices, face) {
    var faceNormal = $T10().CalculateFaceNormal(faceOuterVertices);
    var value = (this.Geometry$DictFaces$value).get_Item(face.Handle).MemberwiseClone();
    var faceData = face.FaceData.MemberwiseClone();
    faceData.FaceNormal = faceNormal.MemberwiseClone();
    value.FaceData = faceData.MemberwiseClone();
    (this.Geometry$DictFaces$value).set_Item(face.Handle, value.MemberwiseClone());
  }; 

  function Geometry_SetHighestHandles () {
    this.Geometry$HighestVertHandle$value = ($S11().CallStatic($T09(), "Max", null, (this.Geometry$DictVertices$value).get_Keys()) | 0);
    this.Geometry$HighestHalfEdgeHandle$value = ($S11().CallStatic($T09(), "Max", null, (this.Geometry$DictHalfEdges$value).get_Keys()) | 0);
    this.Geometry$HighestFaceHandle$value = ($S11().CallStatic($T09(), "Max", null, (this.Geometry$DictFaces$value).get_Keys()) | 0);
  }; 

  function Geometry_TwinNext (halfEdge) {
    var flag = (halfEdge.TwinHalfEdge | 0) === 0;
    if (flag) {
      var result = new ($T19())();
    } else {
      var halfEdgeByHandle = this.GetHalfEdgeByHandle(halfEdge.TwinHalfEdge).MemberwiseClone();
      result = this.GetHalfEdgeByHandle(halfEdgeByHandle.NextHalfEdge).MemberwiseClone();
    }
    return result;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      Geometry__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.PolyBoundary")])), 
      Geometry__ctor$01
    );

    $.Method({Static:false, Public:true }, "CloneGeometry", 
      JSIL.MethodSignature.Return($.Type), 
      Geometry_CloneGeometry
    );

    $.Method({Static:false, Public:false}, "CreateFaceHandleId", 
      JSIL.MethodSignature.Return($.Int32), 
      Geometry_CreateFaceHandleId
    );

    $.Method({Static:false, Public:false}, "CreateHalfEdgeHandleId", 
      JSIL.MethodSignature.Return($.Int32), 
      Geometry_CreateHalfEdgeHandleId
    );

    $.Method({Static:false, Public:false}, "CreateVertHandleId", 
      JSIL.MethodSignature.Return($.Int32), 
      Geometry_CreateVertHandleId
    );

    $.Method({Static:false, Public:false}, "get_DictFaces", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Face")])), 
      Geometry_get_DictFaces
    );

    $.Method({Static:false, Public:false}, "get_DictHalfEdges", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      Geometry_get_DictHalfEdges
    );

    $.Method({Static:false, Public:false}, "get_DictVertices", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      Geometry_get_DictVertices
    );

    $.Method({Static:false, Public:false}, "get_HighestFaceHandle", 
      JSIL.MethodSignature.Return($.Int32), 
      Geometry_get_HighestFaceHandle
    );

    $.Method({Static:false, Public:false}, "get_HighestHalfEdgeHandle", 
      JSIL.MethodSignature.Return($.Int32), 
      Geometry_get_HighestHalfEdgeHandle
    );

    $.Method({Static:false, Public:false}, "get_HighestVertHandle", 
      JSIL.MethodSignature.Return($.Int32), 
      Geometry_get_HighestVertHandle
    );

    $.Method({Static:false, Public:false}, "Get2DVertPos", 
      new JSIL.MethodSignature($asm0A.TypeRef("Fusee.Math.Core.float3"), [$asm09.TypeRef("Fusee.Jometri.Face"), $.Int32]), 
      Geometry_Get2DVertPos
    );

    $.Method({Static:false, Public:true }, "GetAllFaces", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")])), 
      Geometry_GetAllFaces
    );

    $.Method({Static:false, Public:true }, "GetAllHalfEdges", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      Geometry_GetAllHalfEdges
    );

    $.Method({Static:false, Public:true }, "GetAllVertices", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      Geometry_GetAllVertices
    );

    $.Method({Static:false, Public:false}, "GetFaceByHandle", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Face"), [$.Int32]), 
      Geometry_GetFaceByHandle
    );

    $.Method({Static:false, Public:true }, "GetFaceHalfEdges", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), [$.Int32]), 
      Geometry_GetFaceHalfEdges
    );

    $.Method({Static:false, Public:true }, "GetFaceOuterVertices", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), [$.Int32]), 
      Geometry_GetFaceOuterVertices
    );

    $.Method({Static:false, Public:true }, "GetFacesAdajacentToFace", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), [$.Int32]), 
      Geometry_GetFacesAdajacentToFace
    );

    $.Method({Static:false, Public:false}, "GetFaceToInsertDiag", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Face"), [
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), $jsilcore.TypeRef("JSIL.Reference", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])
        ]), 
      Geometry_GetFaceToInsertDiag
    );

    $.Method({Static:false, Public:true }, "GetFaceVertices", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), [$.Int32]), 
      Geometry_GetFaceVertices
    );

    $.Method({Static:false, Public:false}, "GetHalfEdgeByHandle", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.HalfEdge"), [$.Int32]), 
      Geometry_GetHalfEdgeByHandle
    );

    $.Method({Static:false, Public:true }, "GetHalfEdgeLoop", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), [$.Int32]), 
      Geometry_GetHalfEdgeLoop
    );

    $.Method({Static:false, Public:true }, "GetHalfEdgeLoopReverse", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), [$.Int32]), 
      Geometry_GetHalfEdgeLoopReverse
    );

    $.Method({Static:false, Public:true }, "GetVertexAdajacentFaces", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), [$.Int32]), 
      Geometry_GetVertexAdajacentFaces
    );

    $.Method({Static:false, Public:true }, "GetVertexAdjacentVertices", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), [$.Int32]), 
      Geometry_GetVertexAdjacentVertices
    );

    $.Method({Static:false, Public:false}, "GetVertexByHandle", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Vertex"), [$.Int32]), 
      Geometry_GetVertexByHandle
    );

    $.Method({Static:false, Public:true }, "GetVertexIncidentHalfEdges", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), [$.Int32]), 
      Geometry_GetVertexIncidentHalfEdges
    );

    $.Method({Static:false, Public:true }, "GetVertexStartingHalfEdges", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), [$.Int32]), 
      Geometry_GetVertexStartingHalfEdges
    );

    $.Method({Static:false, Public:true }, "GetVertexTargetingHalfEdges", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), [$.Int32]), 
      Geometry_GetVertexTargetingHalfEdges
    );

    $.Method({Static:false, Public:false}, "ReplaceFace", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.Face")), 
      Geometry_ReplaceFace
    );

    $.Method({Static:false, Public:false}, "ReplaceHalfEdge", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      Geometry_ReplaceHalfEdge
    );

    $.Method({Static:false, Public:false}, "ReplaceVertex", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      Geometry_ReplaceVertex
    );

    $.Method({Static:false, Public:false}, "set_DictFaces", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Face")])), 
      Geometry_set_DictFaces
    );

    $.Method({Static:false, Public:false}, "set_DictHalfEdges", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      Geometry_set_DictHalfEdges
    );

    $.Method({Static:false, Public:false}, "set_DictVertices", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      Geometry_set_DictVertices
    );

    $.Method({Static:false, Public:false}, "set_HighestFaceHandle", 
      JSIL.MethodSignature.Action($.Int32), 
      Geometry_set_HighestFaceHandle
    );

    $.Method({Static:false, Public:false}, "set_HighestHalfEdgeHandle", 
      JSIL.MethodSignature.Action($.Int32), 
      Geometry_set_HighestHalfEdgeHandle
    );

    $.Method({Static:false, Public:false}, "set_HighestVertHandle", 
      JSIL.MethodSignature.Action($.Int32), 
      Geometry_set_HighestVertHandle
    );

    $.Method({Static:false, Public:true }, "SetFaceNormal", 
      new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), $asm09.TypeRef("Fusee.Jometri.Face")]), 
      Geometry_SetFaceNormal
    );

    $.Method({Static:false, Public:false}, "SetHighestHandles", 
      JSIL.MethodSignature.Void, 
      Geometry_SetHighestHandles
    );

    $.Method({Static:false, Public:false}, "TwinNext", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.HalfEdge"), [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      Geometry_TwinNext
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_vertPos2DCache", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("Fusee.Jometri.Face"), $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm0A.TypeRef("Fusee.Math.Core.float3")])]));

    $.Field({Static:false, Public:false}, "Geometry$DictVertices$value", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")]));

    $.Field({Static:false, Public:false}, "Geometry$DictHalfEdges$value", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:false}, "Geometry$DictFaces$value", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Face")]));

    $.Field({Static:false, Public:false}, "Geometry$HighestHalfEdgeHandle$value", $.Int32);

    $.Field({Static:false, Public:false}, "Geometry$HighestVertHandle$value", $.Int32);

    $.Field({Static:false, Public:false}, "Geometry$HighestFaceHandle$value", $.Int32);

    $.Property({Static:false, Public:false}, "DictVertices", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")]));

    $.Property({Static:false, Public:false}, "DictHalfEdges", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Property({Static:false, Public:false}, "DictFaces", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Face")]));

    $.Property({Static:false, Public:false}, "HighestHalfEdgeHandle", $.Int32);

    $.Property({Static:false, Public:false}, "HighestVertHandle", $.Int32);

    $.Property({Static:false, Public:false}, "HighestFaceHandle", $.Int32);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetAllVertices>d__33 */ 

(function $lGetAllVertices$gd__33$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function $lGetAllVertices$gd__33__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetAllVertices$gd__33_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$gs__1, null);
  }; 

  function $lGetAllVertices$gd__33_MoveNext ($exception) {
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lvert$g5__2 = new ($T05())();
      } else {
        this.$l$g1__state = -1;
        this.$l$gs__1 = $T06().prototype.GetEnumerator.call(this.$l$g4__this.Geometry$DictVertices$value);
        this.$l$g1__state = -3;
      }
      if (!$T08().prototype.MoveNext.call(this.$l$gs__1)) {
        this.$l$gm__Finally1();
        this.$l$gs__1 = new ($T08())();
        result = false;
      } else {
        this.$lvert$g5__2 = $T08().prototype.get_Current.call(this.$l$gs__1).MemberwiseClone();
        this.$l$g2__current = (this.$lvert$g5__2).get_Value().MemberwiseClone();
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lGetAllVertices$gd__33_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetAllVertices$gd__ = this;
    } else {
      $lGetAllVertices$gd__ = new $thisType(0);
      $lGetAllVertices$gd__.$l$g4__this = this.$l$g4__this;
    }
    return $lGetAllVertices$gd__;
  }; 

  function $lGetAllVertices$gd__33_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetAllVertices$gd__33_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator();
  }; 

  function $lGetAllVertices$gd__33_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetAllVertices$gd__33_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetAllVertices$gd__33_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetAllVertices>d__33", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetAllVertices$gd__33__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lGetAllVertices$gd__33_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetAllVertices$gd__33_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Vertex$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      $lGetAllVertices$gd__33_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      $lGetAllVertices$gd__33_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetAllVertices$gd__33_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetAllVertices$gd__33_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetAllVertices$gd__33_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetAllVertices$gd__33_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2+Enumerator", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")]));

    $.Field({Static:false, Public:false}, "$lvert$g5__2", $asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.Current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetAllHalfEdges>d__34 */ 

(function $lGetAllHalfEdges$gd__34$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function $lGetAllHalfEdges$gd__34__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetAllHalfEdges$gd__34_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$gs__1, null);
  }; 

  function $lGetAllHalfEdges$gd__34_MoveNext ($exception) {
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lhe$g5__2 = new ($T05())();
      } else {
        this.$l$g1__state = -1;
        this.$l$gs__1 = $T06().prototype.GetEnumerator.call(this.$l$g4__this.Geometry$DictHalfEdges$value);
        this.$l$g1__state = -3;
      }
      if (!$T08().prototype.MoveNext.call(this.$l$gs__1)) {
        this.$l$gm__Finally1();
        this.$l$gs__1 = new ($T08())();
        result = false;
      } else {
        this.$lhe$g5__2 = $T08().prototype.get_Current.call(this.$l$gs__1).MemberwiseClone();
        this.$l$g2__current = (this.$lhe$g5__2).get_Value().MemberwiseClone();
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lGetAllHalfEdges$gd__34_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetAllHalfEdges$gd__ = this;
    } else {
      $lGetAllHalfEdges$gd__ = new $thisType(0);
      $lGetAllHalfEdges$gd__.$l$g4__this = this.$l$g4__this;
    }
    return $lGetAllHalfEdges$gd__;
  }; 

  function $lGetAllHalfEdges$gd__34_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetAllHalfEdges$gd__34_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetAllHalfEdges$gd__34_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetAllHalfEdges$gd__34_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetAllHalfEdges$gd__34_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetAllHalfEdges>d__34", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetAllHalfEdges$gd__34__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lGetAllHalfEdges$gd__34_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetAllHalfEdges$gd__34_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetAllHalfEdges$gd__34_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetAllHalfEdges$gd__34_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetAllHalfEdges$gd__34_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetAllHalfEdges$gd__34_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetAllHalfEdges$gd__34_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetAllHalfEdges$gd__34_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2+Enumerator", [$.Int32, $asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:false}, "$lhe$g5__2", $asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetAllFaces>d__35 */ 

(function $lGetAllFaces$gd__35$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function $lGetAllFaces$gd__35__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetAllFaces$gd__35_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$gs__1, null);
  }; 

  function $lGetAllFaces$gd__35_MoveNext ($exception) {
    try {
      var num = (this.$l$g1__state | 0);
      if (num !== 0) {
        if (num !== 1) {
          var result = false;
          return result;
        }
        this.$l$g1__state = -3;
        this.$lface$g5__2 = new ($T05())();
      } else {
        this.$l$g1__state = -1;
        this.$l$gs__1 = $T06().prototype.GetEnumerator.call(this.$l$g4__this.Geometry$DictFaces$value);
        this.$l$g1__state = -3;
      }
      if (!$T08().prototype.MoveNext.call(this.$l$gs__1)) {
        this.$l$gm__Finally1();
        this.$l$gs__1 = new ($T08())();
        result = false;
      } else {
        this.$lface$g5__2 = $T08().prototype.get_Current.call(this.$l$gs__1).MemberwiseClone();
        this.$l$g2__current = (this.$lface$g5__2).get_Value().MemberwiseClone();
        this.$l$g1__state = 1;
        result = true;
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lGetAllFaces$gd__35_System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetAllFaces$gd__ = this;
    } else {
      $lGetAllFaces$gd__ = new $thisType(0);
      $lGetAllFaces$gd__.$l$g4__this = this.$l$g4__this;
    }
    return $lGetAllFaces$gd__;
  }; 

  function $lGetAllFaces$gd__35_System_Collections_Generic_IEnumerator$lFusee_Jometri_Face$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetAllFaces$gd__35_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator();
  }; 

  function $lGetAllFaces$gd__35_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetAllFaces$gd__35_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetAllFaces$gd__35_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 1)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetAllFaces>d__35", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetAllFaces$gd__35__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lGetAllFaces$gd__35_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetAllFaces$gd__35_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Face$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")])), 
      $lGetAllFaces$gd__35_System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Face$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Face")), 
      $lGetAllFaces$gd__35_System_Collections_Generic_IEnumerator$lFusee_Jometri_Face$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetAllFaces$gd__35_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetAllFaces$gd__35_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetAllFaces$gd__35_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetAllFaces$gd__35_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$l$gs__1", $asm0F.TypeRef("System.Collections.Generic.Dictionary`2+Enumerator", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Face")]));

    $.Field({Static:false, Public:false}, "$lface$g5__2", $asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Face")]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Face$g.Current", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetVertexAdjacentVertices>d__36 */ 

(function $lGetVertexAdjacentVertices$gd__36$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetVertexAdjacentVertices$gd__36__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetVertexAdjacentVertices$gd__36_MoveNext () {
    switch (this.$l$g1__state) {
      case 0: 
        this.$l$g1__state = -1;
        this.$lvert$g5__1 = (this.$l$g4__this).GetVertexByHandle(this.vHandle).MemberwiseClone();
        this.$le$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lvert$g5__1.IncidentHalfEdge).MemberwiseClone();
        this.$lstartEdge$g5__3 = this.$le$g5__2.MemberwiseClone();
        this.$ltwin$g5__4 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$le$g5__2.TwinHalfEdge).MemberwiseClone();
        this.$l$g2__current = (this.$l$g4__this).GetVertexByHandle(this.$ltwin$g5__4.OriginVertex).MemberwiseClone();
        this.$l$g1__state = 1;
        return true;

      case 1: 
        this.$l$g1__state = -1;
        break;

      case 2: 
        this.$l$g1__state = -1;
        break;

      default: 
        return false;

    }
    if (((this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).Handle | 0) === (this.$lstartEdge$g5__3.Handle | 0)) {
      return false;
    }
    this.$le$g5__2 = (this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).MemberwiseClone();
    this.$ltwin$g5__4 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$le$g5__2.TwinHalfEdge).MemberwiseClone();
    this.$l$g2__current = (this.$l$g4__this).GetVertexByHandle(this.$ltwin$g5__4.OriginVertex).MemberwiseClone();
    this.$l$g1__state = 2;
    return true;
  }; 

  function $lGetVertexAdjacentVertices$gd__36_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetVertexAdjacentVertices$gd__ = this;
    } else {
      $lGetVertexAdjacentVertices$gd__ = new $thisType(0);
      $lGetVertexAdjacentVertices$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetVertexAdjacentVertices$gd__.vHandle = (this.$l$g3__vHandle | 0);
    return $lGetVertexAdjacentVertices$gd__;
  }; 

  function $lGetVertexAdjacentVertices$gd__36_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexAdjacentVertices$gd__36_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator();
  }; 

  function $lGetVertexAdjacentVertices$gd__36_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexAdjacentVertices$gd__36_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetVertexAdjacentVertices$gd__36_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetVertexAdjacentVertices>d__36", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetVertexAdjacentVertices$gd__36__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetVertexAdjacentVertices$gd__36_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Vertex$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      $lGetVertexAdjacentVertices$gd__36_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      $lGetVertexAdjacentVertices$gd__36_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetVertexAdjacentVertices$gd__36_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetVertexAdjacentVertices$gd__36_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetVertexAdjacentVertices$gd__36_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetVertexAdjacentVertices$gd__36_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lvert$g5__1", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$le$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lstartEdge$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$ltwin$g5__4", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.Current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetVertexAdajacentFaces>d__37 */ 

(function $lGetVertexAdajacentFaces$gd__37$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetVertexAdajacentFaces$gd__37__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetVertexAdajacentFaces$gd__37_MoveNext () {
    switch (this.$l$g1__state) {
      case 0: 
        this.$l$g1__state = -1;
        this.$lvert$g5__1 = (this.$l$g4__this).GetVertexByHandle(this.vHandle).MemberwiseClone();
        this.$le$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lvert$g5__1.IncidentHalfEdge).MemberwiseClone();
        this.$lstartEdge$g5__3 = this.$le$g5__2.MemberwiseClone();
        this.$l$g2__current = (this.$l$g4__this).GetFaceByHandle(this.$lstartEdge$g5__3.IncidentFace).MemberwiseClone();
        this.$l$g1__state = 1;
        return true;

      case 1: 
        this.$l$g1__state = -1;
        break;

      case 2: 
        this.$l$g1__state = -1;
        break;

      default: 
        return false;

    }
    if (((this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).Handle | 0) === (this.$lstartEdge$g5__3.Handle | 0)) {
      return false;
    }
    this.$le$g5__2 = (this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).MemberwiseClone();
    this.$l$g2__current = (this.$l$g4__this).GetFaceByHandle(this.$le$g5__2.IncidentFace).MemberwiseClone();
    this.$l$g1__state = 2;
    return true;
  }; 

  function $lGetVertexAdajacentFaces$gd__37_System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetVertexAdajacentFaces$gd__ = this;
    } else {
      $lGetVertexAdajacentFaces$gd__ = new $thisType(0);
      $lGetVertexAdajacentFaces$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetVertexAdajacentFaces$gd__.vHandle = (this.$l$g3__vHandle | 0);
    return $lGetVertexAdajacentFaces$gd__;
  }; 

  function $lGetVertexAdajacentFaces$gd__37_System_Collections_Generic_IEnumerator$lFusee_Jometri_Face$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexAdajacentFaces$gd__37_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator();
  }; 

  function $lGetVertexAdajacentFaces$gd__37_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexAdajacentFaces$gd__37_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetVertexAdajacentFaces$gd__37_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetVertexAdajacentFaces>d__37", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetVertexAdajacentFaces$gd__37__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetVertexAdajacentFaces$gd__37_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Face$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")])), 
      $lGetVertexAdajacentFaces$gd__37_System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Face$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Face")), 
      $lGetVertexAdajacentFaces$gd__37_System_Collections_Generic_IEnumerator$lFusee_Jometri_Face$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetVertexAdajacentFaces$gd__37_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetVertexAdajacentFaces$gd__37_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetVertexAdajacentFaces$gd__37_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetVertexAdajacentFaces$gd__37_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lvert$g5__1", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$le$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lstartEdge$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Face$g.Current", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetVertexIncidentHalfEdges>d__38 */ 

(function $lGetVertexIncidentHalfEdges$gd__38$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetVertexIncidentHalfEdges$gd__38__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetVertexIncidentHalfEdges$gd__38_MoveNext () {
    switch (this.$l$g1__state) {
      case 0: 
        this.$l$g1__state = -1;
        this.$lvert$g5__1 = (this.$l$g4__this).GetVertexByHandle(this.vHandle).MemberwiseClone();
        this.$le$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lvert$g5__1.IncidentHalfEdge).MemberwiseClone();
        this.$lstartEdge$g5__3 = this.$le$g5__2.MemberwiseClone();
        this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lstartEdge$g5__3.Handle).MemberwiseClone();
        this.$l$g1__state = 1;
        return true;

      case 1: 
        this.$l$g1__state = -1;
        this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lstartEdge$g5__3.TwinHalfEdge).MemberwiseClone();
        this.$l$g1__state = 2;
        return true;

      case 2: 
        this.$l$g1__state = -1;
        break;

      case 3: 
        this.$l$g1__state = -1;
        this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$le$g5__2.TwinHalfEdge).MemberwiseClone();
        this.$l$g1__state = 4;
        return true;

      case 4: 
        this.$l$g1__state = -1;
        break;

      default: 
        return false;

    }
    if (((this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).Handle | 0) === (this.$lstartEdge$g5__3.Handle | 0)) {
      return false;
    }
    this.$le$g5__2 = (this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).MemberwiseClone();
    this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$le$g5__2.Handle).MemberwiseClone();
    this.$l$g1__state = 3;
    return true;
  }; 

  function $lGetVertexIncidentHalfEdges$gd__38_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetVertexIncidentHalfEdges$gd__ = this;
    } else {
      $lGetVertexIncidentHalfEdges$gd__ = new $thisType(0);
      $lGetVertexIncidentHalfEdges$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetVertexIncidentHalfEdges$gd__.vHandle = (this.$l$g3__vHandle | 0);
    return $lGetVertexIncidentHalfEdges$gd__;
  }; 

  function $lGetVertexIncidentHalfEdges$gd__38_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexIncidentHalfEdges$gd__38_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetVertexIncidentHalfEdges$gd__38_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexIncidentHalfEdges$gd__38_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetVertexIncidentHalfEdges$gd__38_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetVertexIncidentHalfEdges>d__38", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetVertexIncidentHalfEdges$gd__38__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetVertexIncidentHalfEdges$gd__38_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetVertexIncidentHalfEdges$gd__38_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetVertexIncidentHalfEdges$gd__38_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetVertexIncidentHalfEdges$gd__38_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetVertexIncidentHalfEdges$gd__38_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetVertexIncidentHalfEdges$gd__38_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetVertexIncidentHalfEdges$gd__38_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lvert$g5__1", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$le$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lstartEdge$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetVertexStartingHalfEdges>d__39 */ 

(function $lGetVertexStartingHalfEdges$gd__39$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetVertexStartingHalfEdges$gd__39__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetVertexStartingHalfEdges$gd__39_MoveNext () {
    switch (this.$l$g1__state) {
      case 0: 
        this.$l$g1__state = -1;
        this.$lvert$g5__1 = (this.$l$g4__this).GetVertexByHandle(this.vHandle).MemberwiseClone();
        this.$le$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lvert$g5__1.IncidentHalfEdge).MemberwiseClone();
        this.$lstartEdge$g5__3 = this.$le$g5__2.MemberwiseClone();
        this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lstartEdge$g5__3.Handle).MemberwiseClone();
        this.$l$g1__state = 1;
        return true;

      case 1: 
        this.$l$g1__state = -1;
        break;

      case 2: 
        this.$l$g1__state = -1;
        break;

      default: 
        return false;

    }
    if (((this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).Handle | 0) === (this.$lstartEdge$g5__3.Handle | 0)) {
      return false;
    }
    this.$le$g5__2 = (this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).MemberwiseClone();
    this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$le$g5__2.Handle).MemberwiseClone();
    this.$l$g1__state = 2;
    return true;
  }; 

  function $lGetVertexStartingHalfEdges$gd__39_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetVertexStartingHalfEdges$gd__ = this;
    } else {
      $lGetVertexStartingHalfEdges$gd__ = new $thisType(0);
      $lGetVertexStartingHalfEdges$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetVertexStartingHalfEdges$gd__.vHandle = (this.$l$g3__vHandle | 0);
    return $lGetVertexStartingHalfEdges$gd__;
  }; 

  function $lGetVertexStartingHalfEdges$gd__39_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexStartingHalfEdges$gd__39_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetVertexStartingHalfEdges$gd__39_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexStartingHalfEdges$gd__39_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetVertexStartingHalfEdges$gd__39_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetVertexStartingHalfEdges>d__39", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetVertexStartingHalfEdges$gd__39__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetVertexStartingHalfEdges$gd__39_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetVertexStartingHalfEdges$gd__39_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetVertexStartingHalfEdges$gd__39_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetVertexStartingHalfEdges$gd__39_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetVertexStartingHalfEdges$gd__39_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetVertexStartingHalfEdges$gd__39_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetVertexStartingHalfEdges$gd__39_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lvert$g5__1", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$le$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lstartEdge$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetVertexTargetingHalfEdges>d__40 */ 

(function $lGetVertexTargetingHalfEdges$gd__40$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetVertexTargetingHalfEdges$gd__40__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetVertexTargetingHalfEdges$gd__40_MoveNext () {
    switch (this.$l$g1__state) {
      case 0: 
        this.$l$g1__state = -1;
        this.$lvert$g5__1 = (this.$l$g4__this).GetVertexByHandle(this.vHandle).MemberwiseClone();
        this.$le$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lvert$g5__1.IncidentHalfEdge).MemberwiseClone();
        this.$lstartEdge$g5__3 = this.$le$g5__2.MemberwiseClone();
        this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$le$g5__2.TwinHalfEdge).MemberwiseClone();
        this.$l$g1__state = 1;
        return true;

      case 1: 
        this.$l$g1__state = -1;
        break;

      case 2: 
        this.$l$g1__state = -1;
        break;

      default: 
        return false;

    }
    if (((this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).Handle | 0) === (this.$lstartEdge$g5__3.Handle | 0)) {
      return false;
    }
    this.$le$g5__2 = (this.$l$g4__this).TwinNext(this.$le$g5__2.MemberwiseClone()).MemberwiseClone();
    this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$le$g5__2.TwinHalfEdge).MemberwiseClone();
    this.$l$g1__state = 2;
    return true;
  }; 

  function $lGetVertexTargetingHalfEdges$gd__40_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetVertexTargetingHalfEdges$gd__ = this;
    } else {
      $lGetVertexTargetingHalfEdges$gd__ = new $thisType(0);
      $lGetVertexTargetingHalfEdges$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetVertexTargetingHalfEdges$gd__.vHandle = (this.$l$g3__vHandle | 0);
    return $lGetVertexTargetingHalfEdges$gd__;
  }; 

  function $lGetVertexTargetingHalfEdges$gd__40_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexTargetingHalfEdges$gd__40_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetVertexTargetingHalfEdges$gd__40_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetVertexTargetingHalfEdges$gd__40_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetVertexTargetingHalfEdges$gd__40_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetVertexTargetingHalfEdges>d__40", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetVertexTargetingHalfEdges$gd__40__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetVertexTargetingHalfEdges$gd__40_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetVertexTargetingHalfEdges$gd__40_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetVertexTargetingHalfEdges$gd__40_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetVertexTargetingHalfEdges$gd__40_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetVertexTargetingHalfEdges$gd__40_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetVertexTargetingHalfEdges$gd__40_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetVertexTargetingHalfEdges$gd__40_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__vHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lvert$g5__1", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$le$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lstartEdge$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetHalfEdgeLoop>d__42 */ 

(function $lGetHalfEdgeLoop$gd__42$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetHalfEdgeLoop$gd__42__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetHalfEdgeLoop$gd__42_MoveNext () {
    var num = (this.$l$g1__state | 0);
    if (num !== 0) {
      if (num !== 1) {
        return false;
      }
      this.$l$g1__state = -1;
      this.$lcurrentHalfEdge$g5__2 = new ($T02())();
      if ((this.$lcurrentHandle$g5__1 | 0) === (this.heHandle | 0)) {
        return false;
      }
    } else {
      this.$l$g1__state = -1;
      this.$lcurrentHandle$g5__1 = (this.heHandle | 0);
    }
    this.$lcurrentHalfEdge$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcurrentHandle$g5__1).MemberwiseClone();
    this.$lcurrentHandle$g5__1 = (this.$lcurrentHalfEdge$g5__2.NextHalfEdge | 0);
    this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcurrentHalfEdge$g5__2.Handle).MemberwiseClone();
    this.$l$g1__state = 1;
    return true;
  }; 

  function $lGetHalfEdgeLoop$gd__42_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetHalfEdgeLoop$gd__ = this;
    } else {
      $lGetHalfEdgeLoop$gd__ = new $thisType(0);
      $lGetHalfEdgeLoop$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetHalfEdgeLoop$gd__.heHandle = (this.$l$g3__heHandle | 0);
    return $lGetHalfEdgeLoop$gd__;
  }; 

  function $lGetHalfEdgeLoop$gd__42_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetHalfEdgeLoop$gd__42_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetHalfEdgeLoop$gd__42_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetHalfEdgeLoop$gd__42_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetHalfEdgeLoop$gd__42_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetHalfEdgeLoop>d__42", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetHalfEdgeLoop$gd__42__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetHalfEdgeLoop$gd__42_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetHalfEdgeLoop$gd__42_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetHalfEdgeLoop$gd__42_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetHalfEdgeLoop$gd__42_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetHalfEdgeLoop$gd__42_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetHalfEdgeLoop$gd__42_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetHalfEdgeLoop$gd__42_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "heHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__heHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lcurrentHandle$g5__1", $.Int32);

    $.Field({Static:false, Public:false}, "$lcurrentHalfEdge$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetHalfEdgeLoopReverse>d__43 */ 

(function $lGetHalfEdgeLoopReverse$gd__43$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetHalfEdgeLoopReverse$gd__43__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetHalfEdgeLoopReverse$gd__43_MoveNext () {
    var num = (this.$l$g1__state | 0);
    if (num !== 0) {
      if (num !== 1) {
        return false;
      }
      this.$l$g1__state = -1;
      this.$lcurrentHalfEdge$g5__2 = new ($T02())();
      if ((this.$lcurrentHandle$g5__1 | 0) === (this.heHandle | 0)) {
        return false;
      }
    } else {
      this.$l$g1__state = -1;
      this.$lcurrentHandle$g5__1 = (this.heHandle | 0);
    }
    this.$lcurrentHalfEdge$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcurrentHandle$g5__1).MemberwiseClone();
    this.$lcurrentHandle$g5__1 = (this.$lcurrentHalfEdge$g5__2.PrevHalfEdge | 0);
    this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcurrentHalfEdge$g5__2.Handle).MemberwiseClone();
    this.$l$g1__state = 1;
    return true;
  }; 

  function $lGetHalfEdgeLoopReverse$gd__43_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetHalfEdgeLoopReverse$gd__ = this;
    } else {
      $lGetHalfEdgeLoopReverse$gd__ = new $thisType(0);
      $lGetHalfEdgeLoopReverse$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetHalfEdgeLoopReverse$gd__.heHandle = (this.$l$g3__heHandle | 0);
    return $lGetHalfEdgeLoopReverse$gd__;
  }; 

  function $lGetHalfEdgeLoopReverse$gd__43_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetHalfEdgeLoopReverse$gd__43_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetHalfEdgeLoopReverse$gd__43_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetHalfEdgeLoopReverse$gd__43_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetHalfEdgeLoopReverse$gd__43_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetHalfEdgeLoopReverse>d__43", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetHalfEdgeLoopReverse$gd__43__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetHalfEdgeLoopReverse$gd__43_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetHalfEdgeLoopReverse$gd__43_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetHalfEdgeLoopReverse$gd__43_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetHalfEdgeLoopReverse$gd__43_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetHalfEdgeLoopReverse$gd__43_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetHalfEdgeLoopReverse$gd__43_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetHalfEdgeLoopReverse$gd__43_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "heHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__heHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lcurrentHandle$g5__1", $.Int32);

    $.Field({Static:false, Public:false}, "$lcurrentHalfEdge$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetFacesAdajacentToFace>d__44 */ 

(function $lGetFacesAdajacentToFace$gd__44$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1_Enumerator.Of($asm0F.System.Int32))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function $lGetFacesAdajacentToFace$gd__44__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetFacesAdajacentToFace$gd__44_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$gs__5, null);
  }; 

  function $lGetFacesAdajacentToFace$gd__44_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                this.$lface$g5__1 = (this.$l$g4__this).GetFaceByHandle(this.fHandle).MemberwiseClone();
                this.$lfirstHandle$g5__2 = (this.$lface$g5__1.OuterHalfEdge | 0);
                this.$lcurrent$g5__3 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lface$g5__1.OuterHalfEdge).MemberwiseClone();
                break;

              case 1: 
                this.$l$g1__state = -1;
                this.$lcurrent$g5__3 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcurrent$g5__3.NextHalfEdge).MemberwiseClone();
                if ((this.$lfirstHandle$g5__2 | 0) === (this.$lcurrent$g5__3.Handle | 0)) {
                  this.$linnerComponents$g5__4 = this.$lface$g5__1.InnerHalfEdges;
                  var flag = ((this.$linnerComponents$g5__4).get_Count() | 0) === 0;
                  if (flag) {
                    var result = false;
                    return result;
                  }
                  this.$l$gs__5 = $T06().prototype.GetEnumerator.call(this.$linnerComponents$g5__4);
                  this.$l$g1__state = -3;
                  $label0 = 2 /* goto IL_1CB */ ;
                  continue $labelgroup0;
                }
                break;

              case 2: 
                this.$l$g1__state = -3;
                this.$lcur$g5__7 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcur$g5__7.NextHalfEdge).MemberwiseClone();
                if ((this.$lhe$g5__6 | 0) === (this.$lcur$g5__7.Handle | 0)) {
                  this.$lcur$g5__7 = new ($T07())();
                  $label0 = 2 /* goto IL_1CB */ ;
                  continue $labelgroup0;
                }
                $label0 = 1 /* goto IL_155 */ ;
                continue $labelgroup0;

              default: 
                result = false;
                return result;

            }
            this.$l$g2__current = (this.$l$g4__this).GetFaceByHandle(this.$lcurrent$g5__3.IncidentFace).MemberwiseClone();
            this.$l$g1__state = 1;
            result = true;
            return result;

            $label0 = 1 /* goto IL_155 */ ;
            continue $labelgroup0;
          case 1: /* IL_155 */ 
            this.$l$g2__current = (this.$l$g4__this).GetFaceByHandle(this.$lcur$g5__7.IncidentFace).MemberwiseClone();
            this.$l$g1__state = 2;
            result = true;
            return result;

            $label0 = 2 /* goto IL_1CB */ ;
            continue $labelgroup0;
          case 2: /* IL_1CB */ 
            if ($T08().prototype.MoveNext.call(this.$l$gs__5)) {
              this.$lhe$g5__6 = ($T08().prototype.get_Current.call(this.$l$gs__5) | 0);
              this.$lcur$g5__7 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lhe$g5__6).MemberwiseClone();
              $label0 = 1 /* goto IL_155 */ ;
              continue $labelgroup0;
            }
            this.$l$gm__Finally1();
            this.$l$gs__5 = new ($T08())();
            result = false;

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lGetFacesAdajacentToFace$gd__44_System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetFacesAdajacentToFace$gd__ = this;
    } else {
      $lGetFacesAdajacentToFace$gd__ = new $thisType(0);
      $lGetFacesAdajacentToFace$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetFacesAdajacentToFace$gd__.fHandle = (this.$l$g3__fHandle | 0);
    return $lGetFacesAdajacentToFace$gd__;
  }; 

  function $lGetFacesAdajacentToFace$gd__44_System_Collections_Generic_IEnumerator$lFusee_Jometri_Face$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFacesAdajacentToFace$gd__44_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator();
  }; 

  function $lGetFacesAdajacentToFace$gd__44_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFacesAdajacentToFace$gd__44_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetFacesAdajacentToFace$gd__44_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 2)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetFacesAdajacentToFace>d__44", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetFacesAdajacentToFace$gd__44__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lGetFacesAdajacentToFace$gd__44_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetFacesAdajacentToFace$gd__44_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Face$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")])), 
      $lGetFacesAdajacentToFace$gd__44_System_Collections_Generic_IEnumerable$lFusee_Jometri_Face$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Face$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Face")), 
      $lGetFacesAdajacentToFace$gd__44_System_Collections_Generic_IEnumerator$lFusee_Jometri_Face$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetFacesAdajacentToFace$gd__44_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetFacesAdajacentToFace$gd__44_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetFacesAdajacentToFace$gd__44_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetFacesAdajacentToFace$gd__44_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lface$g5__1", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:false}, "$lfirstHandle$g5__2", $.Int32);

    $.Field({Static:false, Public:false}, "$lcurrent$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$linnerComponents$g5__4", $asm0F.TypeRef("System.Collections.Generic.List`1", [$.Int32]));

    $.Field({Static:false, Public:false}, "$l$gs__5", $asm0F.TypeRef("System.Collections.Generic.List`1+Enumerator", [$.Int32]));

    $.Field({Static:false, Public:false}, "$lhe$g5__6", $.Int32);

    $.Field({Static:false, Public:false}, "$lcur$g5__7", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Face$g.Current", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Face")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetFaceVertices>d__45 */ 

(function $lGetFaceVertices$gd__45$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.UInt32)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1_Enumerator.Of($asm0F.System.Int32))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function $lGetFaceVertices$gd__45__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetFaceVertices$gd__45_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$gs__6, null);
  }; 

  function $lGetFaceVertices$gd__45_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                this.$lface$g5__1 = (this.$l$g4__this).GetFaceByHandle(this.fHandle).MemberwiseClone();
                if ((this.$lface$g5__1.OuterHalfEdge >>> 0) <= (0 >>> 0)) {
                  $label0 = 1 /* goto IL_10D */ ;
                  continue $labelgroup0;
                }
                this.$lfistHalfEdgeHandle$g5__3 = (this.$lface$g5__1.OuterHalfEdge | 0);
                this.$lhalfEdgeOuter$g5__4 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lfistHalfEdgeHandle$g5__3).MemberwiseClone();
                break;

              case 1: 
                this.$l$g1__state = -1;
                this.$lhalfEdgeOuter$g5__4 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lhalfEdgeOuter$g5__4.NextHalfEdge).MemberwiseClone();
                if ((this.$lhalfEdgeOuter$g5__4.Handle | 0) === (this.$lfistHalfEdgeHandle$g5__3 | 0)) {
                  this.$lhalfEdgeOuter$g5__4 = new ($T06())();
                  $label0 = 1 /* goto IL_10D */ ;
                  continue $labelgroup0;
                }
                break;

              case 2: 
                this.$l$g1__state = -3;
                this.$lhalfEdgeInner$g5__8 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lhalfEdgeInner$g5__8.NextHalfEdge).MemberwiseClone();
                if ((this.$lhalfEdgeInner$g5__8.Handle | 0) === (this.$lcomp$g5__7 | 0)) {
                  this.$lhalfEdgeInner$g5__8 = new ($T06())();
                  $label0 = 3 /* goto IL_203 */ ;
                  continue $labelgroup0;
                }
                $label0 = 2 /* goto IL_181 */ ;
                continue $labelgroup0;

              default: 
                var result = false;
                return result;

            }
            this.$loriginVert$g5__5 = (this.$lhalfEdgeOuter$g5__4.OriginVertex | 0);
            this.$l$g2__current = (this.$l$g4__this).GetVertexByHandle(this.$loriginVert$g5__5).MemberwiseClone();
            this.$l$g1__state = 1;
            result = true;
            return result;

            $label0 = 1 /* goto IL_10D */ ;
            continue $labelgroup0;
          case 1: /* IL_10D */ 
            this.$linnerComponents$g5__2 = this.$lface$g5__1.InnerHalfEdges;
            var flag2 = ((this.$linnerComponents$g5__2).get_Count() | 0) === 0;
            if (flag2) {
              result = false;
              return result;
            }
            this.$l$gs__6 = $T08().prototype.GetEnumerator.call(this.$linnerComponents$g5__2);
            this.$l$g1__state = -3;
            $label0 = 3 /* goto IL_203 */ ;
            continue $labelgroup0;

          case 2: /* IL_181 */ 
            this.$loriginVert$g5__9 = (this.$lhalfEdgeInner$g5__8.OriginVertex | 0);
            this.$l$g2__current = (this.$l$g4__this).GetVertexByHandle(this.$loriginVert$g5__9).MemberwiseClone();
            this.$l$g1__state = 2;
            result = true;
            return result;

            $label0 = 3 /* goto IL_203 */ ;
            continue $labelgroup0;
          case 3: /* IL_203 */ 
            if ($T09().prototype.MoveNext.call(this.$l$gs__6)) {
              this.$lcomp$g5__7 = ($T09().prototype.get_Current.call(this.$l$gs__6) | 0);
              this.$lhalfEdgeInner$g5__8 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcomp$g5__7).MemberwiseClone();
              $label0 = 2 /* goto IL_181 */ ;
              continue $labelgroup0;
            }
            this.$l$gm__Finally1();
            this.$l$gs__6 = new ($T09())();
            result = false;

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lGetFaceVertices$gd__45_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetFaceVertices$gd__ = this;
    } else {
      $lGetFaceVertices$gd__ = new $thisType(0);
      $lGetFaceVertices$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetFaceVertices$gd__.fHandle = (this.$l$g3__fHandle | 0);
    return $lGetFaceVertices$gd__;
  }; 

  function $lGetFaceVertices$gd__45_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFaceVertices$gd__45_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator();
  }; 

  function $lGetFaceVertices$gd__45_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFaceVertices$gd__45_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetFaceVertices$gd__45_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 2)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetFaceVertices>d__45", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetFaceVertices$gd__45__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lGetFaceVertices$gd__45_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetFaceVertices$gd__45_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Vertex$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      $lGetFaceVertices$gd__45_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      $lGetFaceVertices$gd__45_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetFaceVertices$gd__45_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetFaceVertices$gd__45_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetFaceVertices$gd__45_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetFaceVertices$gd__45_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lface$g5__1", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:false}, "$linnerComponents$g5__2", $asm0F.TypeRef("System.Collections.Generic.List`1", [$.Int32]));

    $.Field({Static:false, Public:false}, "$lfistHalfEdgeHandle$g5__3", $.Int32);

    $.Field({Static:false, Public:false}, "$lhalfEdgeOuter$g5__4", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$loriginVert$g5__5", $.Int32);

    $.Field({Static:false, Public:false}, "$l$gs__6", $asm0F.TypeRef("System.Collections.Generic.List`1+Enumerator", [$.Int32]));

    $.Field({Static:false, Public:false}, "$lcomp$g5__7", $.Int32);

    $.Field({Static:false, Public:false}, "$lhalfEdgeInner$g5__8", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$loriginVert$g5__9", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.Current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetFaceOuterVertices>d__46 */ 

(function $lGetFaceOuterVertices$gd__46$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };


  function $lGetFaceOuterVertices$gd__46__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetFaceOuterVertices$gd__46_MoveNext () {
    var num = (this.$l$g1__state | 0);
    if (num !== 0) {
      if (num !== 1) {
        return false;
      }
      this.$l$g1__state = -1;
      this.$lhalfEdgeOuter$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lhalfEdgeOuter$g5__2.NextHalfEdge).MemberwiseClone();
      if ((this.$lhalfEdgeOuter$g5__2.Handle | 0) === (this.$lfistHalfEdgeHandle$g5__1 | 0)) {
        return false;
      }
    } else {
      this.$l$g1__state = -1;
      this.$lfistHalfEdgeHandle$g5__1 = ((this.$l$g4__this).GetFaceByHandle(this.fHandle).OuterHalfEdge | 0);
      this.$lhalfEdgeOuter$g5__2 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lfistHalfEdgeHandle$g5__1).MemberwiseClone();
    }
    this.$loriginVert$g5__3 = (this.$lhalfEdgeOuter$g5__2.OriginVertex | 0);
    this.$l$g2__current = (this.$l$g4__this).GetVertexByHandle(this.$loriginVert$g5__3).MemberwiseClone();
    this.$l$g1__state = 1;
    return true;
  }; 

  function $lGetFaceOuterVertices$gd__46_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetFaceOuterVertices$gd__ = this;
    } else {
      $lGetFaceOuterVertices$gd__ = new $thisType(0);
      $lGetFaceOuterVertices$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetFaceOuterVertices$gd__.fHandle = (this.$l$g3__fHandle | 0);
    return $lGetFaceOuterVertices$gd__;
  }; 

  function $lGetFaceOuterVertices$gd__46_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFaceOuterVertices$gd__46_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator();
  }; 

  function $lGetFaceOuterVertices$gd__46_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFaceOuterVertices$gd__46_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetFaceOuterVertices$gd__46_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetFaceOuterVertices>d__46", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetFaceOuterVertices$gd__46__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetFaceOuterVertices$gd__46_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Vertex$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      $lGetFaceOuterVertices$gd__46_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      $lGetFaceOuterVertices$gd__46_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetFaceOuterVertices$gd__46_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetFaceOuterVertices$gd__46_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetFaceOuterVertices$gd__46_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetFaceOuterVertices$gd__46_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lfistHalfEdgeHandle$g5__1", $.Int32);

    $.Field({Static:false, Public:false}, "$lhalfEdgeOuter$g5__2", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$loriginVert$g5__3", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.Current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<GetFaceHalfEdges>d__47 */ 

(function $lGetFaceHalfEdges$gd__47$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1_Enumerator.Of($asm0F.System.Int32))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };


  function $lGetFaceHalfEdges$gd__47__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetFaceHalfEdges$gd__47_$l$gm__Finally1 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$gs__4, null);
  }; 

  function $lGetFaceHalfEdges$gd__47_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                this.$lface$g5__1 = (this.$l$g4__this).GetFaceByHandle(this.fHandle).MemberwiseClone();
                this.$lfirstHandle$g5__2 = (this.$lface$g5__1.OuterHalfEdge | 0);
                this.$lcurrent$g5__3 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lface$g5__1.OuterHalfEdge).MemberwiseClone();
                break;

              case 1: 
                this.$l$g1__state = -1;
                this.$lcurrent$g5__3 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcurrent$g5__3.NextHalfEdge).MemberwiseClone();
                if ((this.$lfirstHandle$g5__2 | 0) === (this.$lcurrent$g5__3.Handle | 0)) {
                  this.$l$gs__4 = $T05().prototype.GetEnumerator.call(this.$lface$g5__1.InnerHalfEdges);
                  this.$l$g1__state = -3;
                  $label0 = 2 /* goto IL_1A4 */ ;
                  continue $labelgroup0;
                }
                break;

              case 2: 
                this.$l$g1__state = -3;
                this.$lcur$g5__6 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcur$g5__6.NextHalfEdge).MemberwiseClone();
                if ((this.$lhe$g5__5 | 0) === (this.$lcur$g5__6.Handle | 0)) {
                  this.$lcur$g5__6 = new ($T06())();
                  $label0 = 2 /* goto IL_1A4 */ ;
                  continue $labelgroup0;
                }
                $label0 = 1 /* goto IL_130 */ ;
                continue $labelgroup0;

              default: 
                var result = false;
                return result;

            }
            this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcurrent$g5__3.Handle).MemberwiseClone();
            this.$l$g1__state = 1;
            result = true;
            return result;

            $label0 = 1 /* goto IL_130 */ ;
            continue $labelgroup0;
          case 1: /* IL_130 */ 
            this.$l$g2__current = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lcur$g5__6.Handle).MemberwiseClone();
            this.$l$g1__state = 2;
            result = true;
            return result;

            $label0 = 2 /* goto IL_1A4 */ ;
            continue $labelgroup0;
          case 2: /* IL_1A4 */ 
            if ($T08().prototype.MoveNext.call(this.$l$gs__4)) {
              this.$lhe$g5__5 = ($T08().prototype.get_Current.call(this.$l$gs__4) | 0);
              this.$lcur$g5__6 = (this.$l$g4__this).GetHalfEdgeByHandle(this.$lhe$g5__5).MemberwiseClone();
              $label0 = 1 /* goto IL_130 */ ;
              continue $labelgroup0;
            }
            this.$l$gm__Finally1();
            this.$l$gs__4 = new ($T08())();
            result = false;

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this.System_IDisposable_Dispose();
      throw $exception;
    }
    return result;
  }; 

  function $lGetFaceHalfEdges$gd__47_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetFaceHalfEdges$gd__ = this;
    } else {
      $lGetFaceHalfEdges$gd__ = new $thisType(0);
      $lGetFaceHalfEdges$gd__.$l$g4__this = this.$l$g4__this;
    }
    $lGetFaceHalfEdges$gd__.fHandle = (this.$l$g3__fHandle | 0);
    return $lGetFaceHalfEdges$gd__;
  }; 

  function $lGetFaceHalfEdges$gd__47_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFaceHalfEdges$gd__47_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator();
  }; 

  function $lGetFaceHalfEdges$gd__47_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetFaceHalfEdges$gd__47_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lGetFaceHalfEdges$gd__47_System_IDisposable_Dispose () {
    var num = (this.$l$g1__state | 0);
    if ((num === -3) || (num === 2)) {
      try {
      } finally {
        this.$l$gm__Finally1();
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<GetFaceHalfEdges>d__47", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetFaceHalfEdges$gd__47__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally1", 
      JSIL.MethodSignature.Void, 
      $lGetFaceHalfEdges$gd__47_$l$gm__Finally1
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetFaceHalfEdges$gd__47_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.HalfEdge$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])), 
      $lGetFaceHalfEdges$gd__47_System_Collections_Generic_IEnumerable$lFusee_Jometri_HalfEdge$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.HalfEdge")), 
      $lGetFaceHalfEdges$gd__47_System_Collections_Generic_IEnumerator$lFusee_Jometri_HalfEdge$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetFaceHalfEdges$gd__47_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetFaceHalfEdges$gd__47_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetFaceHalfEdges$gd__47_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetFaceHalfEdges$gd__47_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g3__fHandle", $.Int32);

    $.Field({Static:false, Public:true }, "$l$g4__this", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false}, "$lface$g5__1", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:false}, "$lfirstHandle$g5__2", $.Int32);

    $.Field({Static:false, Public:false}, "$lcurrent$g5__3", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$l$gs__4", $asm0F.TypeRef("System.Collections.Generic.List`1+Enumerator", [$.Int32]));

    $.Field({Static:false, Public:false}, "$lhe$g5__5", $.Int32);

    $.Field({Static:false, Public:false}, "$lcur$g5__6", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.HalfEdge$g.Current", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<>c__DisplayClass55_0 */ 

(function $l$gc__DisplayClass55_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$l$gc__DisplayClass55_1)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Func$b2.Of($asm09.Fusee.Jometri.HalfEdge, $asm0F.System.Boolean))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry_$l$gc__DisplayClass55_2)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm0F.TypeRef("System.Func`2", ["!!0", $asm0F.TypeRef("System.Boolean")])], ["TSource"]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm09.Fusee.Jometri.HalfEdge]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Boolean, [$asm09.Fusee.Jometri.HalfEdge]))) ();
  };


  function $l$gc__DisplayClass55_0__ctor () {
  }; 

  function $l$gc__DisplayClass55_0_$lGetFaceToInsertDiag$gb__0 (x) {
    var $closure0 = new ($T01())();
    $closure0.x = x.MemberwiseClone();
    return $S00().CallStatic($T02(), "Any$b1", [$asm09.Fusee.Jometri.HalfEdge], this.heStartingAtP, $T03().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Jometri.Geometry_$l$gc__DisplayClass55_1, "$lGetFaceToInsertDiag$gb__2", $S01(), false, false)));
  }; 

  function $l$gc__DisplayClass55_0_$lGetFaceToInsertDiag$gb__1 (x) {
    var $closure0 = new ($T04())();
    $closure0.x = x.MemberwiseClone();
    return $S00().CallStatic($T02(), "Any$b1", [$asm09.Fusee.Jometri.HalfEdge], this.heStartingAtQ, $T03().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Jometri.Geometry_$l$gc__DisplayClass55_2, "$lGetFaceToInsertDiag$gb__3", $S02(), false, false)));
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<>c__DisplayClass55_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass55_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lGetFaceToInsertDiag$gb__0", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      $l$gc__DisplayClass55_0_$lGetFaceToInsertDiag$gb__0
    );

    $.Method({Static:false, Public:false}, "$lGetFaceToInsertDiag$gb__1", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      $l$gc__DisplayClass55_0_$lGetFaceToInsertDiag$gb__1
    );

    $.Field({Static:false, Public:true }, "heStartingAtP", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:true }, "heStartingAtQ", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<>c__DisplayClass55_1 */ 

(function $l$gc__DisplayClass55_1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };


  function $l$gc__DisplayClass55_1__ctor () {
  }; 

  function $l$gc__DisplayClass55_1_$lGetFaceToInsertDiag$gb__2 (z) {
    return ((z.IncidentFace | 0) === (this.x.IncidentFace | 0));
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<>c__DisplayClass55_1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass55_1__ctor
    );

    $.Method({Static:false, Public:false}, "$lGetFaceToInsertDiag$gb__2", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      $l$gc__DisplayClass55_1_$lGetFaceToInsertDiag$gb__2
    );

    $.Field({Static:false, Public:true }, "x", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Geometry+<>c__DisplayClass55_2 */ 

(function $l$gc__DisplayClass55_2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };


  function $l$gc__DisplayClass55_2__ctor () {
  }; 

  function $l$gc__DisplayClass55_2_$lGetFaceToInsertDiag$gb__3 (z) {
    return ((z.IncidentFace | 0) === (this.x.IncidentFace | 0));
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Geometry+<>c__DisplayClass55_2", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass55_2__ctor
    );

    $.Method({Static:false, Public:false}, "$lGetFaceToInsertDiag$gb__3", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
      $l$gc__DisplayClass55_2_$lGetFaceToInsertDiag$gb__3
    );

    $.Field({Static:false, Public:true }, "x", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.PolyBoundary */ 

(function PolyBoundary$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.PolyBoundary", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:true }, "Points", $asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm0A.TypeRef("Fusee.Math.Core.float3")]));

    $.Field({Static:false, Public:true }, "IsOuter", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.GeomInitializeHelper */ 

(function GeomInitializeHelper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Jometri.Vertex, $asm0F.System.Boolean)))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.Fusee.Jometri.PolyBoundary)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.UInt32)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Jometri.Vertex, $asm0F.System.Boolean)))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Jometri.Vertex, $asm0F.System.Boolean))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Jometri.Vertex, $asm0F.System.Boolean)))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.PolyBoundary))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.PolyBoundary))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm0F.System.ArgumentException)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge))) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Face, [$asm0F.System.Int32, $asm0F.System.Int32]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0F.System.Int32)]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Face, [$asm0F.System.Int32]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.ArgumentException, [$asm0F.System.String]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Jometri.Vertex, $asm0F.System.Boolean)), null))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Jometri.Vertex, $asm0F.System.Boolean)).get_Count)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm09.Fusee.Jometri.Vertex, $asm0F.System.Boolean)).get_Item)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.PolyBoundary).GetEnumerator)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.PolyBoundary).get_Current)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge).GetEnumerator)) ();
  };
  var $IM06 = function () {
    return ($IM06 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge).get_Current)) ();
  };
  var $IM07 = function () {
    return ($IM07 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM08 = function () {
    return ($IM08 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Vertex).GetEnumerator)) ();
  };
  var $IM09 = function () {
    return ($IM09 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Vertex).get_Current)) ();
  };
  var $IM0A = function () {
    return ($IM0A = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0A.Fusee.Math.Core.float3).GetEnumerator)) ();
  };
  var $IM0B = function () {
    return ($IM0B = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm0A.Fusee.Math.Core.float3).get_Current)) ();
  };
  var $IM0C = function () {
    return ($IM0C = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge).get_Count)) ();
  };
  var $IM0D = function () {
    return ($IM0D = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge).get_Item)) ();
  };
  var $IM0E = function () {
    return ($IM0E = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge).set_Item)) ();
  };
  var $IM0F = function () {
    return ($IM0F = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.HalfEdge).Add)) ();
  };


  function GeomInitializeHelper_AddFace (firstHalfEdge, /* ref */ face) {
    face.set($S00().Construct(((($thisType._geometry.Geometry$DictFaces$value.get_Count() | 0) + 1) | 0), firstHalfEdge));
    return face.get().Handle;
  }; 

  function GeomInitializeHelper_BoundaryEdges (outlineVerts, polyBoundary) {
    var face = new JSIL.BoxedVariable(new ($T01())());
    var halfEdge = new ($T06())(), halfEdge2 = new ($T06())();
    var num = 0;
    var list = $S01().Construct();
    var num2 = 0;
    var flag = ($thisType._geometry.Geometry$DictHalfEdges$value.get_Count() >>> 0) > (0 >>> 0);
    if (flag) {
      num2 = ($thisType._geometry.Geometry$DictHalfEdges$value.get_Count() | 0);
    }

    for (var i = 0; i < ($IM00().Call(outlineVerts, null) | 0); i = ((i + 1) | 0)) {
      var keyValuePair = $IM01().Call(outlineVerts, null, i);
      num2 = ((num2 + 1) | 0);
      var flag2 = !keyValuePair.get_Value();
      if (flag2) {
        var key = keyValuePair.get_Key().MemberwiseClone();
        key.IncidentHalfEdge = num2;
        $thisType._geometry.Geometry$DictVertices$value.Add(key.Handle, key.MemberwiseClone());
      }
      (halfEdge = halfEdge.MemberwiseClone(), 
        $T06().prototype._ctor.call(halfEdge, 
          num2, 
          keyValuePair.get_Key().Handle, 
          0, 
          0, 
          0, 
          0
        ));
      num2 = ((num2 + 1) | 0);
      (halfEdge2 = halfEdge2.MemberwiseClone(), 
        $T06().prototype._ctor.call(halfEdge2, 
          num2, 
          ($IM01().Call(outlineVerts, null, ((((i + 1) | 0) % ($IM00().Call(outlineVerts, null) | 0)) | 0))).get_Key().Handle, 
          halfEdge.Handle, 
          0, 
          0, 
          1
        ));
      halfEdge.TwinHalfEdge = (halfEdge2.Handle | 0);
      var isOuter = polyBoundary.IsOuter;
      if (isOuter) {
        var flag3 = num === 0;
        if (flag3) {
          num = ($thisType.AddFace(halfEdge.Handle, /* ref */ face) | 0);
          $thisType._geometry.Geometry$DictFaces$value.Add(face.get().Handle, face.get().MemberwiseClone());
        }
      } else {
        var flag4 = i === 0;
        if (flag4) {
          var face2 = $thisType._geometry.Geometry$DictFaces$value.get_Item($S02().CallStatic($T0F(), "Max", null, $thisType._geometry.Geometry$DictFaces$value.get_Keys())).MemberwiseClone();
          (face2.InnerHalfEdges).Add(halfEdge.Handle);
        }
        num = ($S03().CallStatic($T0F(), "Last$b1", [$asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face)], $thisType._geometry.Geometry$DictFaces$value).get_Value().Handle | 0);
      }
      halfEdge.IncidentFace = num;
      var flag5 = !($IM01().Call(outlineVerts, null, i)).get_Value();
      if (flag5) {
        var face3 = $thisType._geometry.Geometry$DictFaces$value.get_Item(1).MemberwiseClone();
        var flag6 = i === 0;
        if (flag6) {
          (face3.InnerHalfEdges).Add(halfEdge2.Handle);
          $thisType._geometry.Geometry$DictFaces$value.set_Item(1, face3.MemberwiseClone());
        }
      }
      var boundaryEdge = new ($T12())();
      boundaryEdge.IsOriginOldVert = keyValuePair.get_Value();
      boundaryEdge.HalfEdge = halfEdge.MemberwiseClone();
      boundaryEdge.TwinHalfEdge = halfEdge2.MemberwiseClone();
      var item = boundaryEdge;
      list.Add(item.MemberwiseClone());
    }
    return list;
  }; 

  function GeomInitializeHelper_CreateHalfEdgesForBoundary (outline) {
    var $temp00;
    var num = new JSIL.BoxedVariable(0);
    var outlineVerts = $thisType.OutlineVertices(outline.MemberwiseClone());
    var list = $thisType.BoundaryEdges(outlineVerts, outline);
    $thisType.SetPrevAndNextForBoundary(list);
    var list2 = $S04().Construct();

    for (var i = (((list.get_Count() | 0) - 1) | 0); i > -1; i = ((i - 1) | 0)) {
      var boundaryEdge = list.get_Item(i).MemberwiseClone();
      var flag = !boundaryEdge.IsOriginOldVert;
      if (!flag) {
        var flag2 = !$thisType.IsEdgeExisting(boundaryEdge.HalfEdge.MemberwiseClone(), list, /* ref */ num);
        if (!flag2) {
          var faceByHandle = $thisType._geometry.GetFaceByHandle(boundaryEdge.HalfEdge.IncidentFace).MemberwiseClone();
          var flag3 = (faceByHandle.OuterHalfEdge | 0) === (boundaryEdge.HalfEdge.Handle | 0);
          if (flag3) {
            faceByHandle.OuterHalfEdge = (num.get() | 0);
            $thisType._geometry.ReplaceFace(faceByHandle.MemberwiseClone());
          }
          var face = $thisType._geometry.Geometry$DictFaces$value.get_Item(1);

        $loop1: 
          for (var j = 0; j < ((face.InnerHalfEdges).get_Count() | 0); j = ((j + 1) | 0)) {
            var num2 = ((face.InnerHalfEdges).get_Item(j) | 0);
            var flag4 = num2 !== (num.get() | 0);
            if (!flag4) {
              var nextHalfEdge = ($thisType._geometry.GetHalfEdgeByHandle(num2).NextHalfEdge | 0);
              (face.InnerHalfEdges).set_Item(j, nextHalfEdge);
              $thisType._geometry.Geometry$DictFaces$value.set_Item(1, face.MemberwiseClone());
              break $loop1;
            }
          }
          var halfEdgeByHandle = $thisType._geometry.GetHalfEdgeByHandle(num.get()).MemberwiseClone();
          halfEdgeByHandle.NextHalfEdge = (boundaryEdge.HalfEdge.NextHalfEdge | 0);
          halfEdgeByHandle.PrevHalfEdge = (boundaryEdge.HalfEdge.PrevHalfEdge | 0);
          halfEdgeByHandle.IncidentFace = (boundaryEdge.HalfEdge.IncidentFace | 0);
          list2.Add(halfEdgeByHandle.MemberwiseClone());
          $thisType.SetPrevAndNextToExistingHalfEdge(boundaryEdge, num.get(), list, list2);
          list.RemoveAt(i);
        }
      }
    }
    var flag5 = (list2.get_Count() | 0) === 0;
    if (flag5) {
      var result = list;
    } else {

      for (var a$0 = list2._items, i$0 = 0, l$0 = (list2._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        $thisType._geometry.ReplaceHalfEdge(current.MemberwiseClone());
      }
      result = list;
    }
    return result;
  }; 

  function GeomInitializeHelper_CreateHalfEdgesForGeometry (geometry, outlines) {
    $thisType._geometry = geometry;
    var face = $S05().Construct(((((geometry.Geometry$DictHalfEdges$value).get_Count() | 0) + 1) | 0));
    (geometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
    var enumerator = $IM02().Call(outlines, null);
    try {

      while ($IM03().Call(enumerator, null)) {
        var current = $IM04().Call(enumerator, null).MemberwiseClone();
        var enumerable = $thisType.CreateHalfEdgesForBoundary(current.MemberwiseClone());
        var enumerator2 = $IM05().Call(enumerable, null);
        try {

          while ($IM03().Call(enumerator2, null)) {
            var current2 = $IM06().Call(enumerator2, null).MemberwiseClone();
            (geometry.Geometry$DictHalfEdges$value).Add(current2.HalfEdge.Handle, current2.HalfEdge.MemberwiseClone());
            (geometry.Geometry$DictHalfEdges$value).Add(current2.TwinHalfEdge.Handle, current2.TwinHalfEdge.MemberwiseClone());
          }
        } finally {
          if (enumerator2 !== null) {
            $IM07().Call(enumerator2, null);
          }
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM07().Call(enumerator, null);
      }
    }
    geometry.SetHighestHandles();
  }; 

  function GeomInitializeHelper_CreateOrFindVertex (pointCoord, /* ref */ isOldVertex, handle) {
    var vertex = new ($T0D())();
    var flag = ($thisType._geometry.Geometry$DictVertices$value.get_Count() >>> 0) > (0 >>> 0);
    if (flag) {
      var enumerator = $IM08().Call($thisType._geometry.GetAllVertices(), null);
      try {

        while ($IM03().Call(enumerator, null)) {
          var current = $IM09().Call(enumerator, null).MemberwiseClone();
          var flag2 = !pointCoord.Equals(current.VertData.Pos.MemberwiseClone());
          if (!flag2) {
            isOldVertex.set(true);
            var result = current;
            return result;
          }
        }
      } finally {
        if (enumerator !== null) {
          $IM07().Call(enumerator, null);
        }
      }
      (vertex = vertex.MemberwiseClone(), 
        $S06().Call($T0D().prototype, "_ctor", null, vertex, handle, pointCoord.MemberwiseClone()));
    } else {
      (vertex = vertex.MemberwiseClone(), 
        $S06().Call($T0D().prototype, "_ctor", null, vertex, handle, pointCoord.MemberwiseClone()));
    }
    isOldVertex.set(false);
    result = vertex;
    return result;
  }; 

  function GeomInitializeHelper_IsEdgeExisting (halfEdge, boundaryEdges, /* ref */ existingHeHandle) {
    var $temp00;
    existingHeHandle.set(0);
    var num = 0;
    var enumerator = $IM05().Call(boundaryEdges, null);
    try {

      while ($IM03().Call(enumerator, null)) {
        var current = $IM06().Call(enumerator, null);
        var flag = (current.HalfEdge.Handle | 0) === (halfEdge.NextHalfEdge | 0);
        if (flag) {
          num = (current.HalfEdge.OriginVertex | 0);
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM07().Call(enumerator, null);
      }
    }
    var flag2 = num === 0;
    if (flag2) {
      throw $S07().Construct("Target vertex not found!");
    }
    var list = $T0F().ToList$b1($T06())($thisType._geometry.GetVertexStartingHalfEdges(halfEdge.OriginVertex));

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current2 = a$0[i$0];
      var halfEdge2 = current2.MemberwiseClone();
      var originVertex = ($thisType._geometry.GetHalfEdgeByHandle(halfEdge2.NextHalfEdge).OriginVertex | 0);
      var flag3 = originVertex !== num;
      if (!flag3) {
        existingHeHandle.set(current2.Handle);
        var result = true;
        return result;
      }
    }
    result = false;
    return result;
  }; 

  function GeomInitializeHelper_OutlineVertices (polyBoundary) {
    var value = new JSIL.BoxedVariable(false);
    var list = $S08().Construct();
    var num = 0;
    var flag = ($thisType._geometry.Geometry$DictVertices$value.get_Count() >>> 0) > (0 >>> 0);
    if (flag) {
      num = ($thisType._geometry.Geometry$DictVertices$value.get_Count() | 0);
    }
    var enumerator = $IM0A().Call(polyBoundary.Points, null);
    try {

      while ($IM03().Call(enumerator, null)) {
        var current = $IM0B().Call(enumerator, null).MemberwiseClone();
        num = ((num + 1) | 0);
        var key = $thisType.CreateOrFindVertex(current.MemberwiseClone(), /* ref */ value, num).MemberwiseClone();
        list.Add(new ($T0C())(key.MemberwiseClone(), value.get()));
      }
    } finally {
      if (enumerator !== null) {
        $IM07().Call(enumerator, null);
      }
    }
    return list;
  }; 

  function GeomInitializeHelper_SetPrevAndNextForBoundary (boundaryEdges) {

    for (var i = 0; i < ($IM0C().Call(boundaryEdges, null) | 0); i = ((i + 1) | 0)) {
      var boundaryEdge = $IM0D().Call(boundaryEdges, null, i).MemberwiseClone();
      var halfEdge = boundaryEdge.HalfEdge.MemberwiseClone();
      var twinHalfEdge = boundaryEdge.TwinHalfEdge.MemberwiseClone();
      halfEdge.NextHalfEdge = ($IM0D().Call(boundaryEdges, null, ((((i + 1) | 0) % ($IM0C().Call(boundaryEdges, null) | 0)) | 0)).HalfEdge.Handle | 0);
      twinHalfEdge.PrevHalfEdge = ($IM0D().Call(boundaryEdges, null, ((((i + 1) | 0) % ($IM0C().Call(boundaryEdges, null) | 0)) | 0)).TwinHalfEdge.Handle | 0);
      var flag = ((i - 1) | 0) < 0;
      if (flag) {
        halfEdge.PrevHalfEdge = ($S09().CallStatic($T0F(), "Last$b1", [$asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge], boundaryEdges).HalfEdge.Handle | 0);
        twinHalfEdge.NextHalfEdge = ($S09().CallStatic($T0F(), "Last$b1", [$asm09.Fusee.Jometri.GeomInitializeHelper_BoundaryEdge], boundaryEdges).TwinHalfEdge.Handle | 0);
      } else {
        halfEdge.PrevHalfEdge = ($IM0D().Call(boundaryEdges, null, ((i - 1) | 0)).HalfEdge.Handle | 0);
        twinHalfEdge.NextHalfEdge = ($IM0D().Call(boundaryEdges, null, ((i - 1) | 0)).TwinHalfEdge.Handle | 0);
      }
      boundaryEdge.HalfEdge = halfEdge.MemberwiseClone();
      boundaryEdge.TwinHalfEdge = twinHalfEdge.MemberwiseClone();
      $IM0E().Call(boundaryEdges, null, i, boundaryEdge.MemberwiseClone());
    }
  }; 

  function GeomInitializeHelper_SetPrevAndNextToExistingHalfEdge (bEdge, existingHeHandle, boundaryEdges, halfEdgesToUpdate) {
    var halfEdgeByHandle = $thisType._geometry.GetHalfEdgeByHandle(existingHeHandle).MemberwiseClone();
    var halfEdgeByHandle2 = $thisType._geometry.GetHalfEdgeByHandle(halfEdgeByHandle.NextHalfEdge).MemberwiseClone();
    var halfEdgeByHandle3 = $thisType._geometry.GetHalfEdgeByHandle(halfEdgeByHandle.PrevHalfEdge).MemberwiseClone();
    halfEdgeByHandle.NextHalfEdge = (bEdge.HalfEdge.NextHalfEdge | 0);
    halfEdgeByHandle.PrevHalfEdge = (bEdge.HalfEdge.PrevHalfEdge | 0);
    halfEdgeByHandle.IncidentFace = (bEdge.HalfEdge.IncidentFace | 0);

  $loop0: 
    for (var i = 0; i < ($IM0C().Call(boundaryEdges, null) | 0); i = ((i + 1) | 0)) {
      var num = 0;
      var boundaryEdge = $IM0D().Call(boundaryEdges, null, i).MemberwiseClone();
      var flag = (boundaryEdge.TwinHalfEdge.Handle | 0) === (bEdge.TwinHalfEdge.PrevHalfEdge | 0);
      if (flag) {
        var twinHalfEdge = boundaryEdge.TwinHalfEdge.MemberwiseClone();
        twinHalfEdge.NextHalfEdge = (halfEdgeByHandle2.Handle | 0);
        var halfEdge = boundaryEdge.HalfEdge.MemberwiseClone();
        halfEdge.PrevHalfEdge = (existingHeHandle | 0);
        boundaryEdge.TwinHalfEdge = twinHalfEdge.MemberwiseClone();
        boundaryEdge.HalfEdge = halfEdge.MemberwiseClone();
        halfEdgeByHandle2.PrevHalfEdge = (twinHalfEdge.Handle | 0);
        $IM0F().Call(halfEdgesToUpdate, null, halfEdgeByHandle2.MemberwiseClone());
        $IM0E().Call(boundaryEdges, null, i, boundaryEdge.MemberwiseClone());
        num = ((num + 1) | 0);
      }
      var flag2 = (boundaryEdge.TwinHalfEdge.Handle | 0) === (bEdge.TwinHalfEdge.NextHalfEdge | 0);
      if (flag2) {
        var twinHalfEdge2 = boundaryEdge.TwinHalfEdge.MemberwiseClone();
        twinHalfEdge2.PrevHalfEdge = (halfEdgeByHandle3.Handle | 0);
        var halfEdge2 = boundaryEdge.HalfEdge.MemberwiseClone();
        halfEdge2.NextHalfEdge = (existingHeHandle | 0);
        boundaryEdge.TwinHalfEdge = twinHalfEdge2.MemberwiseClone();
        boundaryEdge.HalfEdge = halfEdge2.MemberwiseClone();
        halfEdgeByHandle3.NextHalfEdge = (twinHalfEdge2.Handle | 0);
        $IM0F().Call(halfEdgesToUpdate, null, halfEdgeByHandle3.MemberwiseClone());
        $IM0E().Call(boundaryEdges, null, i, boundaryEdge.MemberwiseClone());
        num = ((num + 1) | 0);
      }
      var flag3 = num === 2;
      if (flag3) {
        break $loop0;
      }
    }
  }; 

  JSIL.MakeStaticClass("Fusee.Jometri.GeomInitializeHelper", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:false}, "AddFace", 
      new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm09.TypeRef("Fusee.Jometri.Face")])]), 
      GeomInitializeHelper_AddFace
    );

    $.Method({Static:true , Public:false}, "BoundaryEdges", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.GeomInitializeHelper+BoundaryEdge")]), [$asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm09.TypeRef("Fusee.Jometri.Vertex"), $.Boolean])]), $asm09.TypeRef("Fusee.Jometri.PolyBoundary")]), 
      GeomInitializeHelper_BoundaryEdges
    );

    $.Method({Static:true , Public:false}, "CreateHalfEdgesForBoundary", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.GeomInitializeHelper+BoundaryEdge")]), [$asm09.TypeRef("Fusee.Jometri.PolyBoundary")]), 
      GeomInitializeHelper_CreateHalfEdgesForBoundary
    );

    $.Method({Static:true , Public:false}, "CreateHalfEdgesForGeometry", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Jometri.Geometry"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.PolyBoundary")])]), 
      GeomInitializeHelper_CreateHalfEdgesForGeometry
    );

    $.Method({Static:true , Public:false}, "CreateOrFindVertex", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Vertex"), [
          $asm0A.TypeRef("Fusee.Math.Core.float3"), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $.Int32
        ]), 
      GeomInitializeHelper_CreateOrFindVertex
    );

    $.Method({Static:true , Public:false}, "IsEdgeExisting", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.HalfEdge"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.GeomInitializeHelper+BoundaryEdge")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      GeomInitializeHelper_IsEdgeExisting
    );

    $.Method({Static:true , Public:false}, "OutlineVertices", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.List`1", [$asm0F.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm09.TypeRef("Fusee.Jometri.Vertex"), $.Boolean])]), [$asm09.TypeRef("Fusee.Jometri.PolyBoundary")]), 
      GeomInitializeHelper_OutlineVertices
    );

    $.Method({Static:true , Public:false}, "SetPrevAndNextForBoundary", 
      JSIL.MethodSignature.Action($asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.GeomInitializeHelper+BoundaryEdge")])), 
      GeomInitializeHelper_SetPrevAndNextForBoundary
    );

    $.Method({Static:true , Public:false}, "SetPrevAndNextToExistingHalfEdge", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.GeomInitializeHelper+BoundaryEdge"), $.Int32, 
          $asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.GeomInitializeHelper+BoundaryEdge")]), $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])
        ]), 
      GeomInitializeHelper_SetPrevAndNextToExistingHalfEdge
    );

    $.Field({Static:true , Public:false}, "_geometry", $asm09.TypeRef("Fusee.Jometri.Geometry"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Jometri.GeomInitializeHelper+BoundaryEdge */ 

(function BoundaryEdge$Members () {
  var $, $thisType;

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.ValueType"), 
      Name: "Fusee.Jometri.GeomInitializeHelper+BoundaryEdge", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Field({Static:false, Public:false}, "IsOriginOldVert", $.Boolean);

    $.Field({Static:false, Public:false}, "HalfEdge", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "TwinHalfEdge", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;

  JSIL.MakeStaticClass("Fusee.Jometri.NamespaceDoc", false, [], function ($ib) {
    $ = $ib;


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.SubdivisionSurface */ 

(function SubdivisionSurface$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Face))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Face))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.Fusee.Jometri.GeometricOperations)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize(System.Array.Of($asm0F.System.Int32))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm09.Fusee.Jometri.GeomEditing)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.HalfEdge), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Face, [$asm0F.System.Int32]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0F.System.Single, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.Fusee.Jometri.Vertex, [$asm0F.System.Int32, $asm0A.Fusee.Math.Core.float3]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Vertex), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Face).GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Face).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge).GetEnumerator)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge).get_Current)) ();
  };


  function SubdivisionSurface__ctor () {
  }; 

  function SubdivisionSurface_AddFaceVerticesAndNewFaces (geometry, newGeometry, allFaceVertices) {
    var vertex = new ($T02())(), halfEdge2 = new ($T03())(), halfEdge3 = new ($T03())();
    var allFaces = geometry.GetAllFaces();
    var enumerator = $IM00().Call(allFaces, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null).MemberwiseClone();
        (vertex = vertex.MemberwiseClone(), 
          $S00().Call($T02().prototype, "_ctor", null, vertex, 
            newGeometry.CreateVertHandleId(), 
            allFaceVertices.get_Item(current.Handle).VertData.Pos.MemberwiseClone()
          ));
        var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(current.OuterHalfEdge);
        var halfEdge = halfEdgeByHandle.MemberwiseClone();
        var dictionary = $S01().Construct();
        var dictionary2 = $S01().Construct();
        (newGeometry.Geometry$DictVertices$value).Add(vertex.Handle, vertex.MemberwiseClone());
        var num = 0;

        do {
          (halfEdge2 = halfEdge2.MemberwiseClone(), 
            $T03().prototype._ctor.call(halfEdge2, newGeometry.CreateHalfEdgeHandleId()));
          (halfEdge3 = halfEdge3.MemberwiseClone(), 
            $T03().prototype._ctor.call(halfEdge3, newGeometry.CreateHalfEdgeHandleId()));
          var halfEdgeByHandle2 = newGeometry.GetHalfEdgeByHandle(halfEdge.PrevHalfEdge).MemberwiseClone();
          var halfEdgeByHandle3 = newGeometry.GetHalfEdgeByHandle(halfEdge.Handle).MemberwiseClone();
          var face = (
            (num === 0)
               ? current
               : $S02().Construct(newGeometry.CreateFaceHandleId()))
          .MemberwiseClone();
          halfEdge = geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).MemberwiseClone();
          halfEdge2.NextHalfEdge = (halfEdge3.Handle | 0);
          halfEdge3.NextHalfEdge = (halfEdgeByHandle2.Handle | 0);
          halfEdgeByHandle2.NextHalfEdge = (halfEdgeByHandle3.Handle | 0);
          halfEdgeByHandle3.NextHalfEdge = (halfEdge2.Handle | 0);
          halfEdge2.PrevHalfEdge = (halfEdgeByHandle3.Handle | 0);
          halfEdge3.PrevHalfEdge = (halfEdge2.Handle | 0);
          halfEdgeByHandle2.PrevHalfEdge = (halfEdge3.Handle | 0);
          halfEdgeByHandle3.PrevHalfEdge = (halfEdgeByHandle2.Handle | 0);
          halfEdge2.OriginVertex = (halfEdge.OriginVertex | 0);
          halfEdge3.OriginVertex = (vertex.Handle | 0);
          halfEdge2.IncidentFace = (face.Handle | 0);
          halfEdge3.IncidentFace = (face.Handle | 0);
          halfEdgeByHandle2.IncidentFace = (face.Handle | 0);
          halfEdgeByHandle3.IncidentFace = (face.Handle | 0);
          vertex.IncidentHalfEdge = (halfEdge3.Handle | 0);
          face.OuterHalfEdge = (halfEdge2.Handle | 0);
          (newGeometry.Geometry$DictHalfEdges$value).Add(halfEdge2.Handle, halfEdge2.MemberwiseClone());
          (newGeometry.Geometry$DictHalfEdges$value).Add(halfEdge3.Handle, halfEdge3.MemberwiseClone());
          newGeometry.ReplaceHalfEdge(halfEdgeByHandle2.MemberwiseClone());
          newGeometry.ReplaceHalfEdge(halfEdgeByHandle3.MemberwiseClone());
          newGeometry.ReplaceVertex(vertex.MemberwiseClone());
          var flag = num === 0;
          if (flag) {
            newGeometry.ReplaceFace(face.MemberwiseClone());
          } else {
            (newGeometry.Geometry$DictFaces$value).Add(face.Handle, face.MemberwiseClone());
          }
          var expr_229 = $S03().Construct();
          expr_229.Add(newGeometry.GetVertexByHandle(halfEdge2.OriginVertex).MemberwiseClone());
          expr_229.Add(newGeometry.GetVertexByHandle(halfEdge3.OriginVertex).MemberwiseClone());
          expr_229.Add(newGeometry.GetVertexByHandle(halfEdgeByHandle2.OriginVertex).MemberwiseClone());
          expr_229.Add(newGeometry.GetVertexByHandle(halfEdgeByHandle3.OriginVertex).MemberwiseClone());
          var faceOuterVertices = expr_229;
          newGeometry.SetFaceNormal(faceOuterVertices, face);
          dictionary.Add(num, halfEdge3.MemberwiseClone());
          dictionary2.Add(num, halfEdge2.MemberwiseClone());
          var flag2 = num > 0;
          if (flag2) {
            var halfEdge4 = dictionary2.get_Item(((num - 1) | 0)).MemberwiseClone();
            halfEdge4.TwinHalfEdge = (dictionary.get_Item(num).Handle | 0);
            var halfEdge5 = dictionary.get_Item(num).MemberwiseClone();
            halfEdge5.TwinHalfEdge = (halfEdge4.Handle | 0);
            newGeometry.ReplaceHalfEdge(halfEdge4.MemberwiseClone());
            newGeometry.ReplaceHalfEdge(halfEdge5.MemberwiseClone());
          }
          num = ((num + 1) | 0);
          halfEdge = geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).MemberwiseClone();
        } while ($T03().op_Inequality(halfEdgeByHandle, halfEdge));
        var halfEdge6 = dictionary.get_Item(0).MemberwiseClone();
        var halfEdge7 = dictionary2.get_Item(((num - 1) | 0)).MemberwiseClone();
        halfEdge6.TwinHalfEdge = (halfEdge7.Handle | 0);
        halfEdge7.TwinHalfEdge = (halfEdge6.Handle | 0);
        newGeometry.ReplaceHalfEdge(halfEdge6.MemberwiseClone());
        newGeometry.ReplaceHalfEdge(halfEdge7.MemberwiseClone());
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
  }; 

  function SubdivisionSurface_CatmullClarkSubdivision (geometry) {
    var $temp00, $temp01;
    var geometry2 = geometry.CloneGeometry();
    var faceVertices = $thisType.GetFaceVertices(geometry);
    var edgeVertices = $thisType.GetEdgeVertices(geometry, faceVertices);
    var list = $T0E().ToList$b1($T02())(geometry2.GetAllVertices());

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      var list2 = $T0E().ToList$b1($T03())(geometry2.GetVertexStartingHalfEdges(current.Handle));
      var list3 = $S03().Construct();
      var list4 = $S03().Construct();

      for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1].MemberwiseClone();
        var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(current2.TwinHalfEdge);
        var flag = faceVertices.ContainsKey(current2.IncidentFace);
        if (flag) {
          list3.Add(faceVertices.get_Item(current2.IncidentFace).MemberwiseClone());
        } else {
          list3.Add(faceVertices.get_Item(halfEdgeByHandle.IncidentFace).MemberwiseClone());
        }
        var flag2 = edgeVertices.ContainsKey(current2.Handle);
        if (flag2) {
          list4.Add(edgeVertices.get_Item(current2.Handle).MemberwiseClone());
        } else {
          list4.Add(edgeVertices.get_Item(halfEdgeByHandle.Handle).MemberwiseClone());
        }
      }
      var verticesMeanPos = $T11().GetVerticesMeanPos(list4).MemberwiseClone();
      var verticesMeanPos2 = $T11().GetVerticesMeanPos(list3).MemberwiseClone();
      var num = +(list2.get_Count());
      var pos = $T10().op_Division($T10().op_Addition(
          $T10().op_Addition(verticesMeanPos2.MemberwiseClone(), $S04().CallStatic($T10(), "op_Multiply", null, 2, verticesMeanPos.MemberwiseClone())).MemberwiseClone(), 
          $S04().CallStatic($T10(), "op_Multiply", null, num - 3, current.VertData.Pos.MemberwiseClone())
        ).MemberwiseClone(), num);
      var vertex = $S05().Construct(current.Handle, pos.MemberwiseClone());
      vertex.IncidentHalfEdge = (current.IncidentHalfEdge | 0);
      var vert = vertex;
      geometry2.ReplaceVertex(vert.MemberwiseClone());
    }
    var allHalfEdges = geometry.GetAllHalfEdges();
    var array = JSIL.Array.New($T09(), ((($S06().CallStatic($T0E(), "Count$b1", [$asm09.Fusee.Jometri.HalfEdge], allHalfEdges) | 0) + 1) | 0));
    var enumerator3 = $IM04().Call(allHalfEdges, null);
    try {

      while ($IM01().Call(enumerator3, null)) {
        var current3 = $IM05().Call(enumerator3, null).MemberwiseClone();
        var flag3 = (array[current3.Handle] | 0) === (current3.TwinHalfEdge | 0);
        if (!flag3) {
          var originVertex = (current3.OriginVertex | 0);
          var halfEdgeByHandle2 = geometry.GetHalfEdgeByHandle(current3.TwinHalfEdge);
          var originVertex2 = (halfEdgeByHandle2.OriginVertex | 0);
          var flag4 = edgeVertices.ContainsKey(current3.Handle);
          if (flag4) {
            var vertex2 = edgeVertices.get_Item(current3.Handle).MemberwiseClone();
          } else {
            vertex2 = edgeVertices.get_Item(halfEdgeByHandle2.Handle).MemberwiseClone();
          }
          $T16().InsertVertex(geometry2, originVertex, originVertex2, vertex2.VertData.Pos.MemberwiseClone());
          array[current3.TwinHalfEdge] = (current3.Handle | 0);
        }
      }
    } finally {
      if (enumerator3 !== null) {
        $IM03().Call(enumerator3, null);
      }
    }
    geometry2.SetHighestHandles();
    geometry = geometry2.CloneGeometry();
    $thisType.AddFaceVerticesAndNewFaces(geometry, geometry2, faceVertices);
    return geometry2;
  }; 

  function SubdivisionSurface_GetEdgeVertices (geometry, faceVertices) {
    var allHalfEdges = geometry.GetAllHalfEdges();
    var array = JSIL.Array.New($T09(), ((($S06().CallStatic($T0E(), "Count$b1", [$asm09.Fusee.Jometri.HalfEdge], allHalfEdges) | 0) + 1) | 0));
    var dictionary = $S07().Construct();
    var enumerator = $IM04().Call(allHalfEdges, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM05().Call(enumerator, null).MemberwiseClone();
        var flag = (array[current.Handle] | 0) === (current.TwinHalfEdge | 0);
        if (!flag) {
          var incidentFace = (current.IncidentFace | 0);
          var halfEdgeByHandle = geometry.GetHalfEdgeByHandle(current.TwinHalfEdge).MemberwiseClone();
          var incidentFace2 = (halfEdgeByHandle.IncidentFace | 0);
          var vertexByHandle = geometry.GetVertexByHandle(current.OriginVertex).MemberwiseClone();
          var vertexByHandle2 = geometry.GetVertexByHandle(halfEdgeByHandle.OriginVertex).MemberwiseClone();
          var item = faceVertices.get_Item(incidentFace).MemberwiseClone();
          var item2 = faceVertices.get_Item(incidentFace2).MemberwiseClone();
          var expr_A7 = $S03().Construct();
          expr_A7.Add(vertexByHandle.MemberwiseClone());
          expr_A7.Add(vertexByHandle2.MemberwiseClone());
          expr_A7.Add(item.MemberwiseClone());
          expr_A7.Add(item2.MemberwiseClone());
          var vertices = expr_A7;
          var vertex = $S05().Construct(current.Handle, $T11().GetVerticesMeanPos(vertices).MemberwiseClone());
          vertex.IncidentHalfEdge = (current.Handle | 0);
          var value = vertex;
          dictionary.Add(current.Handle, value.MemberwiseClone());
          array[current.TwinHalfEdge] = (current.Handle | 0);
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    return dictionary;
  }; 

  function SubdivisionSurface_GetFaceVertices (geometry) {
    var value = new ($T02())();
    var allFaces = geometry.GetAllFaces();
    var dictionary = $S07().Construct();
    var enumerator = $IM00().Call(allFaces, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null).MemberwiseClone();
        var vertices = $T0E().ToList$b1($T02())(geometry.GetFaceVertices(current.Handle));
        (value = value.MemberwiseClone(), 
          $S00().Call($T02().prototype, "_ctor", null, value, current.Handle, $T11().GetVerticesMeanPos(vertices).MemberwiseClone()));
        dictionary.Add(current.Handle, value.MemberwiseClone());
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    return dictionary;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.SubdivisionSurface", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SubdivisionSurface__ctor
    );

    $.Method({Static:true , Public:false}, "AddFaceVerticesAndNewFaces", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Geometry"), 
          $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")])
        ]), 
      SubdivisionSurface_AddFaceVerticesAndNewFaces
    );

    $.Method({Static:true , Public:true }, "CatmullClarkSubdivision", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Geometry"), [$asm09.TypeRef("Fusee.Jometri.Geometry")]), 
      SubdivisionSurface_CatmullClarkSubdivision
    );

    $.Method({Static:true , Public:false}, "GetEdgeVertices", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")]), [$asm09.TypeRef("Fusee.Jometri.Geometry"), $asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")])]), 
      SubdivisionSurface_GetEdgeVertices
    );

    $.Method({Static:true , Public:false}, "GetFaceVertices", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.Dictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.Vertex")]), [$asm09.TypeRef("Fusee.Jometri.Geometry")]), 
      SubdivisionSurface_GetFaceVertices
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.TangentSpaceCalulator */ 

(function TangentSpaceCalulator$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.Fusee.Serialization.Mesh)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0F.System.ArgumentException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float3))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm0A.Fusee.Math.Core.float4))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0A.Fusee.Math.Core.float4)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm0F.System.UInt16))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.UInt16)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0A.Fusee.Math.Core.float2)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.Math)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm12.System.Diagnostics.Debug)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.ArgumentException, [$asm0F.System.String]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm0A.Fusee.Math.Core.float3, [$asm0A.Fusee.Math.Core.float3, $asm0F.System.Single]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0A.Fusee.Math.Core.float4, [$asm0A.Fusee.Math.Core.float3, $asm0F.System.Single]))) ();
  };


  function TangentSpaceCalulator_CalculateBiTangents (m) {
    var flag = m === null;
    if (flag) {
      $S00().Construct("Mesh cannot be empty!");
    }
    var flag2 = !(
      (m !== null)
         ? m.get_Normals()
         : null)
     || 
    ((m.get_Normals().length | 0) < 0);
    if (flag2) {
      $S00().Construct(JSIL.ConcatString("Can not calculate bitangents, empty normals in this mesh: ", m.Name));
    }
    var flag3 = (m.get_Tangents() === null) || 
    ((m.get_Tangents().length | 0) < 1);
    if (flag3) {
      $S00().Construct(JSIL.ConcatString("Can not calculate bitangents, empty tangent list in this mesh: ", m.Name));
    }
    var flag4 = (m.get_Tangents() !== null) && 
    (m.get_Normals() !== null) && 
    ((m.get_Normals().length | 0) !== (m.get_Tangents().length | 0));
    if (flag4) {
      $S00().Construct($T04().Format(
          "Can not calculate bitangents, quantitiy of normals: {0} and quanitity of tangents: {1} differs.", 
          $T06().$Box(m.get_Normals().length), 
          $T06().$Box(m.get_Tangents().length)
        ));
    }
    var array = JSIL.Array.New($T07(), m.get_Tangents().length);

    for (var i = 0; i < (m.get_Tangents().length | 0); i = ((i + 1) | 0)) {
      array[i] = $S01().CallStatic($T07(), "op_Multiply", null, 
        $T07().Cross(
          m.get_Normals()[i].MemberwiseClone(), 
          (m.get_Tangents()[i]).get_xyz().MemberwiseClone()
        ).MemberwiseClone(), 
        m.get_Tangents()[i].w
      );
    }
    return array;
  }; 

  function TangentSpaceCalulator_CalculateTangents (m) {
    var right = new ($T07())(), right2 = new ($T07())();
    var flag = m === null;
    if (flag) {
      $S00().Construct("Mesh cannot be empty!");
    }
    var flag2 = (m.get_Normals() === null) || 
    ((m.get_Normals().length | 0) < 0);
    if (flag2) {
      $S00().Construct(JSIL.ConcatString("Can not calculate tangents, empty normals in this mesh: ", m.Name));
    }
    var flag3 = m.get_UVs() === null;
    if (flag3) {
      $S00().Construct("Can not calculate tangents, no uv map");
    }
    var array = JSIL.Array.New($T08(), m.get_Vertices().length);
    var array2 = JSIL.Array.New($T07(), Math.imul(m.get_Vertices().length, 2));
    var array3 = JSIL.Array.New($T07(), (((array2.length | 0) + (m.get_Vertices().length | 0)) | 0));

    for (var i = 0; i < (((m.get_Triangles().length | 0) - 3) | 0); i = ((i + 1) | 0)) {
      var num = (m.get_Triangles()[i] | 0);
      var num2 = (m.get_Triangles()[((1 + i) | 0)] | 0);
      var num3 = (m.get_Triangles()[((2 + i) | 0)] | 0);
      var float = m.get_Vertices()[num];
      var float2 = m.get_Vertices()[num2];
      var float3 = m.get_Vertices()[num3];
      var float4 = m.get_UVs()[num];
      var float5 = m.get_UVs()[num2];
      var float6 = m.get_UVs()[num3];
      var num4 = +float2.x - +float.x;
      var num5 = +float3.x - +float.x;
      var num6 = +float2.y - +float.y;
      var num7 = +float3.y - +float.y;
      var num8 = +float2.z - +float.z;
      var num9 = +float3.z - +float.z;
      var num10 = +float5.x - +float4.x;
      var num11 = +float6.x - +float4.x;
      var num12 = +float5.y - +float4.y;
      var num13 = +float6.y - +float4.y;
      var num14 = +(
        ((Math.abs(((num10 * num13) - (num11 * num12)))) < 1.401298E-45)
           ? 0
           : +((1 / ((num10 * num13) - (num11 * num12)))))
      ;
      (right = right.MemberwiseClone(), 
        $T07().prototype._ctor.call(right, ((num13 * num4) - (num12 * num5)) * num14, ((num13 * num6) - (num12 * num7)) * num14, ((num13 * num8) - (num12 * num9)) * num14));
      (right2 = right2.MemberwiseClone(), 
        $T07().prototype._ctor.call(right2, ((num10 * num5) - (num11 * num4)) * num14, ((num10 * num7) - (num11 * num6)) * num14, ((num10 * num9) - (num11 * num8)) * num14));
      array2[num] = $T07().op_Addition(array2[num].MemberwiseClone(), right);
      array2[num2] = $T07().op_Addition(array2[num2].MemberwiseClone(), right);
      array2[num3] = $T07().op_Addition(array2[num3].MemberwiseClone(), right);
      array3[num] = $T07().op_Addition(array3[num].MemberwiseClone(), right2);
      array3[num2] = $T07().op_Addition(array3[num2].MemberwiseClone(), right2);
      array3[num3] = $T07().op_Addition(array3[num3].MemberwiseClone(), right2);
    }

    for (var j = 0; j < (m.get_Vertices().length | 0); j = ((j + 1) | 0)) {
      $T0E().Assert(m.get_Normals() !== null, "m.Normals != null");
      var float7 = m.get_Normals()[j].MemberwiseClone();
      var float8 = array2[j].MemberwiseClone();
      var v = $T07().op_Subtraction(float8.MemberwiseClone(), $S01().CallStatic($T07(), "op_Multiply", null, float7.MemberwiseClone(), $T07().Dot(float7, float8)));
      v.Normalize();
      var ww = +(
        (+$T07().Dot($T07().Cross(float7.MemberwiseClone(), float8.MemberwiseClone()), array3[j]) < 0)
           ? -1
           : 1)
      ;
      array[j] = $S02().Construct(v, ww);
    }
    return array;
  }; 

  JSIL.MakeStaticClass("Fusee.Jometri.TangentSpaceCalulator", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "CalculateBiTangents", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float3")]), [$asm0B.TypeRef("Fusee.Serialization.Mesh")]), 
      TangentSpaceCalulator_CalculateBiTangents
    );

    $.Method({Static:true , Public:true }, "CalculateTangents", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("Fusee.Math.Core.float4")]), [$asm0B.TypeRef("Fusee.Serialization.Mesh")]), 
      TangentSpaceCalulator_CalculateTangents
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Triangulation */ 

(function Triangulation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Triangulation_$lGetLeftChain$gd__4)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.ArgumentException)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.String)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0F.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize(System.Array.Of($asm0F.System.Object))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.Fusee.Jometri.Triangulation_$l$gc__DisplayClass20_0)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0F.System.Comparison$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.Face))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm09.Fusee.Jometri.TriStatusEdge)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm09.Fusee.Jometri.TriSweepLineStatus)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm09.Fusee.Jometri.GeomEditing)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm0F.System.Collections.Generic.IDictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType))) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm09.Fusee.Jometri.VertexType)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType)))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType)))) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType))) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm0F.System.Int32))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Face))) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm0F.System.UInt32)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm0F.System.ArgumentOutOfRangeException)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm09.Fusee.Jometri.GeometricOperations)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2_Enumerator.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face))) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType))) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm12.System.Collections.Generic.Stack$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.ArgumentException, [$asm0F.System.String]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.TypeRef("System.Comparison`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm09.Fusee.Jometri.Vertex, $asm09.Fusee.Jometri.Vertex]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm0F.System.Int32, [$asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0F.System.Int32)]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(JSIL.MethodSignature.Action($asm0F.TypeRef("System.Single")))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm09.Fusee.Jometri.TriStatusEdge, [$asm0F.System.Single]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm09.Fusee.Jometri.TriStatusEdge, [$asm0F.System.Single]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Vertex), [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.Face), null))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.ArgumentOutOfRangeException, null))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.Face), [$asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$asm0F.TypeRef("System.Int32"), $asm09.TypeRef("Fusee.Jometri.Face")])]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.Collections.Generic.Dictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType), null))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.ConstructorSignature($asm12.System.Collections.Generic.Stack$b1.Of($asm09.Fusee.Jometri.Vertex), null))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.HalfEdge).GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.HalfEdge).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.Face).Add)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm0F.System.Collections.Generic.IDictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType).Add)) ();
  };
  var $IM06 = function () {
    return ($IM06 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType)).GetEnumerator)) ();
  };
  var $IM07 = function () {
    return ($IM07 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm0F.System.Collections.Generic.KeyValuePair$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType)).get_Current)) ();
  };
  var $IM08 = function () {
    return ($IM08 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Vertex).GetEnumerator)) ();
  };
  var $IM09 = function () {
    return ($IM09 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Vertex).get_Current)) ();
  };
  var $IM0A = function () {
    return ($IM0A = JSIL.Memoize($asm0F.System.Collections.Generic.ICollection$b1.Of($asm09.Fusee.Jometri.Vertex).get_Count)) ();
  };
  var $IM0B = function () {
    return ($IM0B = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex).get_Item)) ();
  };
  var $IM0C = function () {
    return ($IM0C = JSIL.Memoize($asm0F.System.Collections.Generic.IDictionary$b2.Of($asm0F.System.Int32, $asm09.Fusee.Jometri.VertexType).get_Item)) ();
  };
  var $IM0D = function () {
    return ($IM0D = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex).RemoveAt)) ();
  };


  function Triangulation_GetLeftChain (sortedVerts, face) {
    var expr_07 = new ($T02())(-2);
    expr_07.$l$g3__sortedVerts = sortedVerts;
    expr_07.$l$g3__face = face.MemberwiseClone();
    return expr_07;
  }; 

  function Triangulation_GetNextVertex (face, faceHalfEdges, currentVert) {
    var enumerator = $IM00().Call(faceHalfEdges, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null).MemberwiseClone();
        var flag = (current.OriginVertex | 0) !== (currentVert.Handle | 0);
        if (!flag) {
          var halfEdgeByHandle = $thisType._geometry.GetHalfEdgeByHandle(current.NextHalfEdge).MemberwiseClone();
          return $thisType._geometry.GetVertexByHandle(halfEdgeByHandle.OriginVertex);
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    throw $S00().Construct(JSIL.ConcatString.apply(null, JSIL.Array.New($T0D(), ["Face ", $T0E().$Box(face.Handle), " has no half edge with vertex ", $T0E().$Box(currentVert.Handle), " as origin."])));
  }; 

  function Triangulation_GetPrevVertex (face, faceHalfEdges, currentVert) {
    var enumerator = $IM00().Call(faceHalfEdges, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null).MemberwiseClone();
        var flag = (current.OriginVertex | 0) !== (currentVert.Handle | 0);
        if (!flag) {
          var halfEdgeByHandle = $thisType._geometry.GetHalfEdgeByHandle(current.PrevHalfEdge).MemberwiseClone();
          return $thisType._geometry.GetVertexByHandle(halfEdgeByHandle.OriginVertex);
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    throw $S00().Construct(JSIL.ConcatString.apply(null, JSIL.Array.New($T0D(), ["Face ", $T0E().$Box(face.Handle), " has no half edge with vertex ", $T0E().$Box(currentVert.Handle), " as origin."])));
  }; 

  function Triangulation_GetSortedVertices (geometry, face, unsortedVerts) {
    var $closure0 = new ($T11())();
    $closure0.geometry = geometry;
    $closure0.face = face.MemberwiseClone();
    var list = $S01().Construct();
    $T12().prototype.AddRange.call(list, unsortedVerts);
    $S02().Call($T12().prototype, "Sort", null, list, $T13().New($closure0, null, new JSIL.MethodPointerInfo($asm09.Fusee.Jometri.Triangulation_$l$gc__DisplayClass20_0, "$lGetSortedVertices$gb__0", $S03(), false, false)));
    return list;
  }; 

  function Triangulation_HandleEndVertex (vert, faceHalfEdges, newFaces) {
    var enumerator = $IM00().Call(faceHalfEdges, null);
    try {

    $loop0: 
      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        var halfEdge = current;
        var flag = (halfEdge.OriginVertex | 0) !== (vert.Handle | 0);
        if (!flag) {
          var triStatusEdge = $thisType._triSweepLineStatus.FindStatusEdgeWithHandle(halfEdge.PrevHalfEdge);
          var isMergeVertex = triStatusEdge.IsMergeVertex;
          if (isMergeVertex) {
            $T17().InsertDiagonal($thisType._geometry, vert.Handle, triStatusEdge.HelperVertexHandle);
            $IM04().Call(newFaces, null, $thisType._geometry.Geometry$DictFaces$value.get_Item($S04().CallStatic($T19(), "Max", null, $thisType._geometry.Geometry$DictFaces$value.get_Keys())).MemberwiseClone());
          }
          $S05().CallVirtual("DeleteNode", null, $thisType._triSweepLineStatus, triStatusEdge.IntersectionPointX);
          break $loop0;
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
  }; 

  function Triangulation_HandleMergeVertex (face, vert, faceHalfEdges, newFaces) {
    var halfEdge = new ($T07())();
    var enumerator = $IM00().Call(faceHalfEdges, null);
    try {

    $loop0: 
      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        halfEdge = current;
        var flag = (halfEdge.OriginVertex | 0) === (vert.Handle | 0);
        if (flag) {
          break $loop0;
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    var triStatusEdge = $thisType._triSweepLineStatus.FindStatusEdgeWithHandle(halfEdge.PrevHalfEdge);
    var isMergeVertex = triStatusEdge.IsMergeVertex;
    if (isMergeVertex) {
      $T17().InsertDiagonal($thisType._geometry, vert.Handle, triStatusEdge.HelperVertexHandle);
      $IM04().Call(newFaces, null, $thisType._geometry.Geometry$DictFaces$value.get_Item($S04().CallStatic($T19(), "Max", null, $thisType._geometry.Geometry$DictFaces$value.get_Keys())).MemberwiseClone());
    }
    $S05().CallVirtual("DeleteNode", null, $thisType._triSweepLineStatus, triStatusEdge.IntersectionPointX);
    $T1A().prototype.BalanceTree.call($thisType._triSweepLineStatus);
    var x = +$thisType._geometry.Get2DVertPos(face.MemberwiseClone(), vert.Handle).x;
    var triStatusEdge2 = $S06().CallVirtual("FindLargestSmallerThanInBalanced", null, $thisType._triSweepLineStatus, x);
    var isMergeVertex2 = triStatusEdge2.IsMergeVertex;
    if (isMergeVertex2) {
      $T17().InsertDiagonal($thisType._geometry, vert.Handle, triStatusEdge2.HelperVertexHandle);
      $IM04().Call(newFaces, null, $thisType._geometry.Geometry$DictFaces$value.get_Item($S04().CallStatic($T19(), "Max", null, $thisType._geometry.Geometry$DictFaces$value.get_Keys())).MemberwiseClone());
    }
    $S07().CallVirtual("FindNode", null, $thisType._triSweepLineStatus, triStatusEdge2.IntersectionPointX).HelperVertexHandle = (vert.Handle | 0);
    $S07().CallVirtual("FindNode", null, $thisType._triSweepLineStatus, triStatusEdge2.IntersectionPointX).IsMergeVertex = true;
  }; 

  function Triangulation_HandleRegularVertex (face, vert, faceHalfEdges, newFaces) {
    var flag = $thisType.IsPolygonRightOfVert($thisType._geometry, face.MemberwiseClone(), faceHalfEdges, vert.MemberwiseClone());
    if (flag) {
      var enumerator = $IM00().Call(faceHalfEdges, null);
      try {

      $loop0: 
        while ($IM01().Call(enumerator, null)) {
          var current = $IM02().Call(enumerator, null).MemberwiseClone();
          var flag2 = (current.OriginVertex | 0) !== (vert.Handle | 0);
          if (!flag2) {
            var triStatusEdge = $thisType._triSweepLineStatus.FindStatusEdgeWithHandle(current.PrevHalfEdge);
            var isMergeVertex = triStatusEdge.IsMergeVertex;
            if (isMergeVertex) {
              $T17().InsertDiagonal($thisType._geometry, vert.Handle, triStatusEdge.HelperVertexHandle);
              $IM04().Call(newFaces, null, $thisType._geometry.Geometry$DictFaces$value.get_Item($S04().CallStatic($T19(), "Max", null, $thisType._geometry.Geometry$DictFaces$value.get_Keys())).MemberwiseClone());
            }
            $S05().CallVirtual("DeleteNode", null, $thisType._triSweepLineStatus, triStatusEdge.IntersectionPointX);
            var halfEdgeByHandle = $thisType._geometry.GetHalfEdgeByHandle(vert.IncidentHalfEdge).MemberwiseClone();
            var vertexByHandle = $thisType._geometry.GetVertexByHandle(halfEdgeByHandle.OriginVertex);
            var originVertex = ($thisType._geometry.GetHalfEdgeByHandle(current.NextHalfEdge).OriginVertex | 0);
            var vertexByHandle2 = $thisType._geometry.GetVertexByHandle(originVertex);
            var triStatusEdge2 = new ($T15())($thisType._geometry, face.MemberwiseClone(), vertexByHandle.MemberwiseClone(), vertexByHandle2.MemberwiseClone(), vert.MemberwiseClone());
            triStatusEdge2.HalfEdgeHandle = (current.Handle | 0);
            triStatusEdge2.HelperVertexHandle = (vert.Handle | 0);
            triStatusEdge2.IsMergeVertex = false;
            $S08().CallVirtual("InsertNode", null, $thisType._triSweepLineStatus, triStatusEdge2.IntersectionPointX, triStatusEdge2);
            break $loop0;
          }
        }
      } finally {
        if (enumerator !== null) {
          $IM03().Call(enumerator, null);
        }
      }
    } else {
      $T1A().prototype.BalanceTree.call($thisType._triSweepLineStatus);
      var x = +$thisType._geometry.Get2DVertPos(face.MemberwiseClone(), vert.Handle).x;
      var triStatusEdge3 = $S06().CallVirtual("FindLargestSmallerThanInBalanced", null, $thisType._triSweepLineStatus, x);
      var isMergeVertex2 = triStatusEdge3.IsMergeVertex;
      if (isMergeVertex2) {
        $T17().InsertDiagonal($thisType._geometry, vert.Handle, triStatusEdge3.HelperVertexHandle);
        $IM04().Call(newFaces, null, $thisType._geometry.Geometry$DictFaces$value.get_Item($S04().CallStatic($T19(), "Max", null, $thisType._geometry.Geometry$DictFaces$value.get_Keys())).MemberwiseClone());
      }
      $S07().CallVirtual("FindNode", null, $thisType._triSweepLineStatus, triStatusEdge3.IntersectionPointX).HelperVertexHandle = (vert.Handle | 0);
      $S07().CallVirtual("FindNode", null, $thisType._triSweepLineStatus, triStatusEdge3.IntersectionPointX).IsMergeVertex = false;
    }
  }; 

  function Triangulation_HandleSplitVertex (face, vert, faceHalfEdges, newFaces) {
    $T1A().prototype.BalanceTree.call($thisType._triSweepLineStatus);
    var x = +$thisType._geometry.Get2DVertPos(face.MemberwiseClone(), vert.Handle).x;
    var triStatusEdge = $S06().CallVirtual("FindLargestSmallerThanInBalanced", null, $thisType._triSweepLineStatus, x);
    $T17().InsertDiagonal($thisType._geometry, vert.Handle, triStatusEdge.HelperVertexHandle);
    $IM04().Call(newFaces, null, $thisType._geometry.Geometry$DictFaces$value.get_Item($S04().CallStatic($T19(), "Max", null, $thisType._geometry.Geometry$DictFaces$value.get_Keys())).MemberwiseClone());
    $S07().CallVirtual("FindNode", null, $thisType._triSweepLineStatus, triStatusEdge.IntersectionPointX).HelperVertexHandle = (vert.Handle | 0);
    $S07().CallVirtual("FindNode", null, $thisType._triSweepLineStatus, triStatusEdge.IntersectionPointX).IsMergeVertex = false;
    var halfEdge = new ($T07())();
    var enumerator = $IM00().Call(faceHalfEdges, null);
    try {

    $loop0: 
      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        var flag = (current.OriginVertex | 0) !== (vert.Handle | 0);
        if (!flag) {
          halfEdge = current;
          break $loop0;
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    var vertexByHandle = $thisType._geometry.GetVertexByHandle(halfEdge.OriginVertex);
    var originVertex = ($thisType._geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).OriginVertex | 0);
    var vertexByHandle2 = $thisType._geometry.GetVertexByHandle(originVertex);
    var triStatusEdge2 = new ($T15())($thisType._geometry, face.MemberwiseClone(), vertexByHandle.MemberwiseClone(), vertexByHandle2.MemberwiseClone(), vert.MemberwiseClone());
    triStatusEdge2.HalfEdgeHandle = (halfEdge.Handle | 0);
    triStatusEdge2.HelperVertexHandle = (vert.Handle | 0);
    triStatusEdge2.IsMergeVertex = false;
    $S08().CallVirtual("InsertNode", null, $thisType._triSweepLineStatus, triStatusEdge2.IntersectionPointX, triStatusEdge2);
  }; 

  function Triangulation_HandleStartVertex (face, vert, faceHalfEdges) {
    var enumerator = $IM00().Call(faceHalfEdges, null);
    try {

    $loop0: 
      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        var halfEdge = current;
        var flag = (halfEdge.OriginVertex | 0) !== (vert.Handle | 0);
        if (!flag) {
          var vertexByHandle = $thisType._geometry.GetVertexByHandle(halfEdge.OriginVertex);
          var originVertex = ($thisType._geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).OriginVertex | 0);
          var vertexByHandle2 = $thisType._geometry.GetVertexByHandle(originVertex);
          var triStatusEdge = new ($T15())($thisType._geometry, face.MemberwiseClone(), vertexByHandle.MemberwiseClone(), vertexByHandle2.MemberwiseClone(), vert.MemberwiseClone());
          triStatusEdge.HalfEdgeHandle = (halfEdge.Handle | 0);
          triStatusEdge.HelperVertexHandle = (vert.Handle | 0);
          triStatusEdge.IsMergeVertex = false;
          $S08().CallVirtual("InsertNode", null, $thisType._triSweepLineStatus, triStatusEdge.IntersectionPointX, triStatusEdge);
          break $loop0;
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
  }; 

  function Triangulation_HasNoSplitOrMerge (face, vertTypes) {
    var $temp00;
    var value = new JSIL.BoxedVariable($asm09.Fusee.Jometri.VertexType.START_VERTEX);
    var list = $T19().ToList$b1($T04())($thisType._geometry.GetFaceVertices(face.Handle));

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0].MemberwiseClone();
      $thisType.TestVertexType(current.MemberwiseClone(), face.MemberwiseClone(), /* ref */ value);
      $IM05().Call(vertTypes, null, current.Handle, value.get());
    }
    var enumerator2 = $IM06().Call(vertTypes, null);
    try {

      while ($IM01().Call(enumerator2, null)) {
        var current2 = $IM07().Call(enumerator2, null).MemberwiseClone();
        var flag = (JSIL.ObjectEqualsInstance(current2.get_Value(), $T1E().SPLIT_VERTEX, !false, $T0D().__Type__)) || 
        (JSIL.ObjectEqualsInstance(current2.get_Value(), $T1E().MERGE_VERTEX, !false, $T0D().__Type__));
        if (flag) {
          var result = false;
          return result;
        }
      }
    } finally {
      if (enumerator2 !== null) {
        $IM03().Call(enumerator2, null);
      }
    }
    result = true;
    return result;
  }; 

  function Triangulation_IsLeftChain (leftChain, vert) {
    var enumerator = $IM08().Call(leftChain, null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM09().Call(enumerator, null);
        var flag = (current.Handle | 0) === (vert.Handle | 0);
        if (flag) {
          var result = true;
          return result;
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    result = false;
    return result;
  }; 

  function Triangulation_IsMonotone (face, vertTypes) {
    var flag = $thisType.HasNoSplitOrMerge(face.MemberwiseClone(), vertTypes);
    return (flag && (((face.InnerHalfEdges).get_Count() | 0) === 0));
  }; 

  function Triangulation_IsOverVert (face, middle, neighbour) {
    var float = $thisType._geometry.Get2DVertPos(face.MemberwiseClone(), middle.Handle).MemberwiseClone();
    var float2 = $thisType._geometry.Get2DVertPos(face.MemberwiseClone(), neighbour.Handle).MemberwiseClone();
    var flag = +float.y < +float2.y;
    if (flag) {
      var result = true;
    } else {
      var flag2 = ((float.y === float2.y)) && 
      (+float.x > +float2.x);
      result = flag2;
    }
    return result;
  }; 

  function Triangulation_IsPolygonRightOfVert (geometry, face, faceHalfEdges, vert) {
    var prevVertex = $thisType.GetPrevVertex(face.MemberwiseClone(), faceHalfEdges, vert.MemberwiseClone()).MemberwiseClone();
    var nextVertex = $thisType.GetNextVertex(face.MemberwiseClone(), faceHalfEdges, vert.MemberwiseClone()).MemberwiseClone();
    var float = geometry.Get2DVertPos(face.MemberwiseClone(), prevVertex.Handle);
    var float2 = geometry.Get2DVertPos(face.MemberwiseClone(), nextVertex.Handle);
    return (+float.y > +float2.y);
  }; 

  function Triangulation_IsUnderVert (face, middle, neighbour) {
    var float = $thisType._geometry.Get2DVertPos(face.MemberwiseClone(), middle.Handle).MemberwiseClone();
    var float2 = $thisType._geometry.Get2DVertPos(face.MemberwiseClone(), neighbour.Handle).MemberwiseClone();
    var flag = +float.y > +float2.y;
    if (flag) {
      var result = true;
    } else {
      var flag2 = ((float.y === float2.y)) && 
      (+float.x < +float2.x);
      result = flag2;
    }
    return result;
  }; 

  function Triangulation_MakeMonotone (face, vertTypes) {
    var source = $S09().Construct($thisType._geometry.GetFaceVertices(face.Handle));
    var sortedVertices = $thisType.GetSortedVertices($thisType._geometry, face.MemberwiseClone(), $T19().ToList$b1($T04())(source));
    var faceHalfEdges = $T19().ToList$b1($T07())($thisType._geometry.GetFaceHalfEdges(face.Handle));
    var newFaces = $S0A().Construct();
    $thisType._triSweepLineStatus = new ($T16())();

    while (($IM0A().Call(sortedVertices, null) >>> 0) > (0 >>> 0)) {
      var vertex = $IM0B().Call(sortedVertices, null, 0).MemberwiseClone();
      $thisType._triSweepLineStatus.UpdateNodes(vertex.MemberwiseClone());
      switch (($IM0C().Call(vertTypes, null, vertex.Handle)).valueOf()) {
        case 0: 
          $thisType.HandleStartVertex(face.MemberwiseClone(), vertex.MemberwiseClone(), faceHalfEdges);
          break;

        case 1: 
          $thisType.HandleEndVertex(vertex.MemberwiseClone(), faceHalfEdges, newFaces);
          break;

        case 2: 
          $thisType.HandleSplitVertex(face.MemberwiseClone(), vertex.MemberwiseClone(), faceHalfEdges, newFaces);
          break;

        case 3: 
          $thisType.HandleMergeVertex(face.MemberwiseClone(), vertex.MemberwiseClone(), faceHalfEdges, newFaces);
          break;

        case 4: 
          $thisType.HandleRegularVertex(face.MemberwiseClone(), vertex.MemberwiseClone(), faceHalfEdges, newFaces);
          break;

        default: 
          throw $S0B().Construct();

      }
      $IM0D().Call(sortedVertices, null, 0);
    }
  }; 

  function Triangulation_TestVertexType (vert, face, /* ref */ vertType) {
    var $temp00;
    var list = $T19().ToList$b1($T07())($thisType._geometry.GetVertexStartingHalfEdges(vert.Handle));
    var halfEdge = new ($T07())();

  $loop0: 
    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      var incidentFace = (current.IncidentFace | 0);
      var flag = !((incidentFace === face.Handle));
      if (!flag) {
        halfEdge = current;
        break $loop0;
      }
    }
    var halfEdgeByHandle = $thisType._geometry.GetHalfEdgeByHandle(halfEdge.NextHalfEdge).MemberwiseClone();
    var vertexByHandle = $thisType._geometry.GetVertexByHandle(halfEdgeByHandle.OriginVertex).MemberwiseClone();
    var halfEdgeByHandle2 = $thisType._geometry.GetHalfEdgeByHandle(halfEdge.PrevHalfEdge).MemberwiseClone();
    var vertexByHandle2 = $thisType._geometry.GetVertexByHandle(halfEdgeByHandle2.OriginVertex).MemberwiseClone();
    var flag2 = $thisType.IsUnderVert(face.MemberwiseClone(), vert.MemberwiseClone(), vertexByHandle.MemberwiseClone()) && 
    $thisType.IsUnderVert(face.MemberwiseClone(), vert.MemberwiseClone(), vertexByHandle2.MemberwiseClone());
    if (flag2) {
      var flag3 = $T2A().IsAngleGreaterPi(
        $thisType._geometry, 
        face.MemberwiseClone(), 
        vertexByHandle.MemberwiseClone(), 
        vert.MemberwiseClone(), 
        vertexByHandle2.MemberwiseClone()
      );
      if (flag3) {
        vertType.set($T1E().SPLIT_VERTEX);
      } else {
        vertType.set($T1E().START_VERTEX);
      }
    } else {
      var flag4 = $thisType.IsOverVert(face.MemberwiseClone(), vert.MemberwiseClone(), vertexByHandle.MemberwiseClone()) && 
      $thisType.IsOverVert(face.MemberwiseClone(), vert.MemberwiseClone(), vertexByHandle2.MemberwiseClone());
      if (flag4) {
        var flag5 = $T2A().IsAngleGreaterPi(
          $thisType._geometry, 
          face.MemberwiseClone(), 
          vertexByHandle.MemberwiseClone(), 
          vert.MemberwiseClone(), 
          vertexByHandle2.MemberwiseClone()
        );
        if (flag5) {
          vertType.set($T1E().MERGE_VERTEX);
        } else {
          vertType.set($T1E().END_VERTEX);
        }
      } else {
        vertType.set($T1E().REGULAR_VERTEX);
      }
    }
  }; 

  function Triangulation_Triangulate (geometry) {
    $thisType._geometry = geometry;
    var dictionary = $S0C().Construct($thisType._geometry.Geometry$DictFaces$value);
    var enumerator = $T18().prototype.GetEnumerator.call(dictionary);

    while ($T2B().prototype.MoveNext.call(enumerator)) {
      var current = $T2B().prototype.get_Current.call(enumerator).MemberwiseClone();
      var vertTypes = $S0D().Construct();
      var flag = (current.get_Value().OuterHalfEdge | 0) === 0;
      if (!flag) {
        var flag2 = !$thisType.IsMonotone(current.get_Value().MemberwiseClone(), vertTypes);
        if (flag2) {
          $thisType.MakeMonotone(current.get_Value().MemberwiseClone(), vertTypes);
        }
      }
    }
    var dictionary2 = $S0C().Construct($thisType._geometry.Geometry$DictFaces$value);
    var enumerator2 = $T18().prototype.GetEnumerator.call(dictionary2);

    while ($T2B().prototype.MoveNext.call(enumerator2)) {
      var current2 = $T2B().prototype.get_Current.call(enumerator2).MemberwiseClone();
      var flag3 = (current2.get_Value().OuterHalfEdge | 0) === 0;
      if (!flag3) {
        $thisType.TriangulateMonotone(current2.get_Value().MemberwiseClone());
      }
    }
  }; 

  function Triangulation_TriangulateMonotone (face) {
    var list = $S01().Construct();
    var enumerator = $IM08().Call($thisType._geometry.GetFaceVertices(face.Handle), null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM09().Call(enumerator, null).MemberwiseClone();
        list.Add(current.MemberwiseClone());
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    var flag = ((list.get_Count() === 3));
    if (!flag) {
      var sortedVertices = $thisType.GetSortedVertices($thisType._geometry, face.MemberwiseClone(), list);
      var stack = $S0E().Construct();
      var leftChain = $T19().ToList$b1($T04())($thisType.GetLeftChain(sortedVertices, face.MemberwiseClone()));
      $T2E().prototype.Push.call(stack, $IM0B().Call(sortedVertices, null, 0).MemberwiseClone());
      $T2E().prototype.Push.call(stack, $IM0B().Call(sortedVertices, null, 1).MemberwiseClone());

      for (var i = 2; i < ((($IM0A().Call(sortedVertices, null) | 0) - 1) | 0); i = ((i + 1) | 0)) {
        var vertex = $IM0B().Call(sortedVertices, null, i).MemberwiseClone();
        var flag2 = (!$thisType.IsLeftChain(leftChain, vertex) && 
          $thisType.IsLeftChain(leftChain, $T2E().prototype.Peek.call(stack))) || 
        ($thisType.IsLeftChain(leftChain, vertex) && 
          !$thisType.IsLeftChain(leftChain, $T2E().prototype.Peek.call(stack)));
        if (flag2) {

          while ((stack.get_Count() | 0) > 0) {
            var vertex2 = $T2E().prototype.Pop.call(stack).MemberwiseClone();
            var flag3 = (stack.get_Count() | 0) > 0;
            if (flag3) {
              $T17().InsertDiagonal($thisType._geometry, vertex.Handle, vertex2.Handle);
            }
          }
          $T2E().prototype.Push.call(stack, $IM0B().Call(sortedVertices, null, ((i - 1) | 0)).MemberwiseClone());
          $T2E().prototype.Push.call(stack, vertex.MemberwiseClone());
        } else {
          var vertex3 = $T2E().prototype.Pop.call(stack).MemberwiseClone();
          var flag4 = $thisType.IsLeftChain(leftChain, vertex3);
          if (flag4) {
            var v = $IM0B().Call(sortedVertices, null, i).MemberwiseClone();
            var v2 = $T2E().prototype.Peek.call(stack).MemberwiseClone();
          } else {
            v = $T2E().prototype.Peek.call(stack).MemberwiseClone();
            v2 = $IM0B().Call(sortedVertices, null, i).MemberwiseClone();
          }

          while (((stack.get_Count() | 0) > 0) && !$T2A().IsAngleGreaterOrEqualPi(
              $thisType._geometry, 
              face.MemberwiseClone(), 
              v.MemberwiseClone(), 
              vertex3.MemberwiseClone(), 
              v2.MemberwiseClone()
            )) {
            vertex3 = $T2E().prototype.Pop.call(stack).MemberwiseClone();
            var flag5 = (stack.get_Count() | 0) > 0;
            if (flag5) {
              var flag6 = $thisType.IsLeftChain(leftChain, vertex3);
              if (flag6) {
                v = $IM0B().Call(sortedVertices, null, i).MemberwiseClone();
                v2 = $T2E().prototype.Peek.call(stack).MemberwiseClone();
              } else {
                v = $T2E().prototype.Peek.call(stack).MemberwiseClone();
                v2 = $IM0B().Call(sortedVertices, null, i).MemberwiseClone();
              }
            }
            $T17().InsertDiagonal($thisType._geometry, vertex.Handle, vertex3.Handle);
          }
          $T2E().prototype.Push.call(stack, vertex3.MemberwiseClone());
          $T2E().prototype.Push.call(stack, vertex.MemberwiseClone());
        }
      }
      var count = (stack.get_Count() | 0);

      for (var j = 0; j < count; j = ((j + 1) | 0)) {
        var vertex4 = $T2E().prototype.Pop.call(stack).MemberwiseClone();
        var flag7 = j === 0;
        if (!flag7) {
          var flag8 = j !== ((count - 1) | 0);
          if (flag8) {
            $T17().InsertDiagonal($thisType._geometry, $S0F().CallStatic($T19(), "Last$b1", [$asm09.Fusee.Jometri.Vertex], sortedVertices).Handle, vertex4.Handle);
          }
        }
      }
    }
  }; 

  JSIL.MakeStaticClass("Fusee.Jometri.Triangulation", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:false}, "GetLeftChain", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), [$asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), $asm09.TypeRef("Fusee.Jometri.Face")]), 
      Triangulation_GetLeftChain
    );

    $.Method({Static:true , Public:false}, "GetNextVertex", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Vertex"), [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      Triangulation_GetNextVertex
    );

    $.Method({Static:true , Public:false}, "GetPrevVertex", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Vertex"), [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      Triangulation_GetPrevVertex
    );

    $.Method({Static:true , Public:false}, "GetSortedVertices", 
      new JSIL.MethodSignature($asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])
        ]), 
      Triangulation_GetSortedVertices
    );

    $.Method({Static:true , Public:false}, "HandleEndVertex", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Vertex"), $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), 
          $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm09.TypeRef("Fusee.Jometri.Face")])
        ]), 
      Triangulation_HandleEndVertex
    );

    $.Method({Static:true , Public:false}, "HandleMergeVertex", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm09.TypeRef("Fusee.Jometri.Face")])
        ]), 
      Triangulation_HandleMergeVertex
    );

    $.Method({Static:true , Public:false}, "HandleRegularVertex", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm09.TypeRef("Fusee.Jometri.Face")])
        ]), 
      Triangulation_HandleRegularVertex
    );

    $.Method({Static:true , Public:false}, "HandleSplitVertex", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), $asm0F.TypeRef("System.Collections.Generic.ICollection`1", [$asm09.TypeRef("Fusee.Jometri.Face")])
        ]), 
      Triangulation_HandleSplitVertex
    );

    $.Method({Static:true , Public:false}, "HandleStartVertex", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")])
        ]), 
      Triangulation_HandleStartVertex
    );

    $.Method({Static:true , Public:false}, "HasNoSplitOrMerge", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Jometri.Face"), $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.VertexType")])]), 
      Triangulation_HasNoSplitOrMerge
    );

    $.Method({Static:true , Public:false}, "IsLeftChain", 
      new JSIL.MethodSignature($.Boolean, [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), $asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      Triangulation_IsLeftChain
    );

    $.Method({Static:true , Public:false}, "IsMonotone", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("Fusee.Jometri.Face"), $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.VertexType")])]), 
      Triangulation_IsMonotone
    );

    $.Method({Static:true , Public:false}, "IsOverVert", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      Triangulation_IsOverVert
    );

    $.Method({Static:true , Public:false}, "IsPolygonRightOfVert", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]), $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      Triangulation_IsPolygonRightOfVert
    );

    $.Method({Static:true , Public:false}, "IsUnderVert", 
      new JSIL.MethodSignature($.Boolean, [
          $asm09.TypeRef("Fusee.Jometri.Face"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      Triangulation_IsUnderVert
    );

    $.Method({Static:true , Public:false}, "MakeMonotone", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("Fusee.Jometri.Face"), $asm0F.TypeRef("System.Collections.Generic.IDictionary`2", [$.Int32, $asm09.TypeRef("Fusee.Jometri.VertexType")])]), 
      Triangulation_MakeMonotone
    );

    $.Method({Static:true , Public:false}, "TestVertexType", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Vertex"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm09.TypeRef("Fusee.Jometri.VertexType")])
        ]), 
      Triangulation_TestVertexType
    );

    $.Method({Static:true , Public:true }, "Triangulate", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.Geometry")), 
      Triangulation_Triangulate
    );

    $.Method({Static:true , Public:false}, "TriangulateMonotone", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.Face")), 
      Triangulation_TriangulateMonotone
    );

    $.Field({Static:true , Public:false}, "_geometry", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:true , Public:false}, "_triSweepLineStatus", $asm09.TypeRef("Fusee.Jometri.TriSweepLineStatus"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Triangulation+<GetLeftChain>d__4 */ 

(function $lGetLeftChain$gd__4$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.HalfEdge)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.Fusee.Jometri.Triangulation)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm15.System.Linq.Enumerable)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0F.System.Collections.Generic.List$b1_Enumerator.Of($asm09.Fusee.Jometri.HalfEdge))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0F.System.NotSupportedException, null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.IList$b1.Of($asm09.Fusee.Jometri.Vertex).get_Item)) ();
  };


  function $lGetLeftChain$gd__4__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentManagedThreadId() | 0);
  }; 

  function $lGetLeftChain$gd__4_MoveNext () {
    var num = (this.$l$g1__state | 0);
    if (num !== 0) {
      if (num !== 1) {
        return false;
      }
      this.$l$g1__state = -1;
      this.$lheHandle$g5__1 = (this.$lhalfEdge$g5__7.NextHalfEdge | 0);
      this.$lhalfEdge$g5__7 = new ($T02())();
      if (($T04()._geometry.GetHalfEdgeByHandle(this.$lheHandle$g5__1).OriginVertex | 0) === (this.$lendOfChain$g5__2.Handle | 0)) {
        return false;
      }
    } else {
      this.$l$g1__state = -1;
      this.$lheHandle$g5__1 = 0;
      this.$lendOfChain$g5__2 = $S00().CallStatic($T06(), "Last$b1", [$asm09.Fusee.Jometri.Vertex], this.sortedVerts).MemberwiseClone();
      this.$lstartingAtFirstV$g5__3 = $T06().ToList$b1($T02())($T04()._geometry.GetVertexStartingHalfEdges($IM00().Call(this.sortedVerts, null, 0).Handle));
      var flag = ((this.$lstartingAtFirstV$g5__3).get_Count() | 0) > 1;
      if (flag) {
        this.$l$gs__4 = $T09().prototype.GetEnumerator.call(this.$lstartingAtFirstV$g5__3);

        while ($T0A().prototype.MoveNext.call(this.$l$gs__4)) {
          this.$lheh$g5__5 = $T0A().prototype.get_Current.call(this.$l$gs__4).MemberwiseClone();
          this.$lhe$g5__6 = this.$lheh$g5__5.MemberwiseClone();
          if ((this.$lhe$g5__6.IncidentFace | 0) === (this.face.Handle | 0)) {
            this.$lheHandle$g5__1 = (this.$lheh$g5__5.Handle | 0);
          }
          this.$lhe$g5__6 = new ($T02())();
          this.$lheh$g5__5 = new ($T02())();
        }
        this.$l$gs__4 = new ($T0A())();
      } else {
        this.$lheHandle$g5__1 = ($IM00().Call(this.sortedVerts, null, 0).IncidentHalfEdge | 0);
      }
    }
    this.$lhalfEdge$g5__7 = $T04()._geometry.GetHalfEdgeByHandle(this.$lheHandle$g5__1).MemberwiseClone();
    this.$l$g2__current = $T04()._geometry.GetVertexByHandle(this.$lhalfEdge$g5__7.OriginVertex).MemberwiseClone();
    this.$l$g1__state = 1;
    return true;
  }; 

  function $lGetLeftChain$gd__4_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lGetLeftChain$gd__ = this;
    } else {
      $lGetLeftChain$gd__ = new $thisType(0);
    }
    $lGetLeftChain$gd__.sortedVerts = this.$l$g3__sortedVerts;
    $lGetLeftChain$gd__.face = this.$l$g3__face.MemberwiseClone();
    return $lGetLeftChain$gd__;
  }; 

  function $lGetLeftChain$gd__4_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetLeftChain$gd__4_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator();
  }; 

  function $lGetLeftChain$gd__4_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lGetLeftChain$gd__4_System_Collections_IEnumerator_Reset () {
    throw $S01().Construct();
  }; 

  function $lGetLeftChain$gd__4_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Triangulation+<GetLeftChain>d__4", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetLeftChain$gd__4__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetLeftChain$gd__4_MoveNext
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Jometri.Vertex$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")])), 
      $lGetLeftChain$gd__4_System_Collections_Generic_IEnumerable$lFusee_Jometri_Vertex$g_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.get_Current", 
      JSIL.MethodSignature.Return($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      $lGetLeftChain$gd__4_System_Collections_Generic_IEnumerator$lFusee_Jometri_Vertex$g_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm0F.TypeRef("System.Collections.IEnumerator")), 
      $lGetLeftChain$gd__4_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetLeftChain$gd__4_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetLeftChain$gd__4_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm0F.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetLeftChain$gd__4_System_IDisposable_Dispose
    )
      .Overrides($asm0F.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "sortedVerts", $asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]));

    $.Field({Static:false, Public:true }, "$l$g3__sortedVerts", $asm0F.TypeRef("System.Collections.Generic.IList`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]));

    $.Field({Static:false, Public:false}, "face", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:true }, "$l$g3__face", $asm09.TypeRef("Fusee.Jometri.Face"));

    $.Field({Static:false, Public:false}, "$lheHandle$g5__1", $.Int32);

    $.Field({Static:false, Public:false}, "$lendOfChain$g5__2", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "$lstartingAtFirstV$g5__3", $asm0F.TypeRef("System.Collections.Generic.List`1", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:false}, "$l$gs__4", $asm0F.TypeRef("System.Collections.Generic.List`1+Enumerator", [$asm09.TypeRef("Fusee.Jometri.HalfEdge")]));

    $.Field({Static:false, Public:false}, "$lheh$g5__5", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lhe$g5__6", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Field({Static:false, Public:false}, "$lhalfEdge$g5__7", $asm09.TypeRef("Fusee.Jometri.HalfEdge"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Jometri.Vertex$g.Current", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 1 */ $asm0F.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm0F.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      /* 3 */ $asm0F.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm0F.TypeRef("System.IDisposable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.Triangulation+<>c__DisplayClass20_0 */ 

(function $l$gc__DisplayClass20_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.UInt32)) ();
  };


  function $l$gc__DisplayClass20_0__ctor () {
  }; 

  function $l$gc__DisplayClass20_0_$lGetSortedVertices$gb__0 (a, b) {
    var float = (this.geometry).Get2DVertPos(this.face.MemberwiseClone(), a.Handle).MemberwiseClone();
    var float2 = (this.geometry).Get2DVertPos(this.face.MemberwiseClone(), b.Handle).MemberwiseClone();
    var num = Math.imul(-1, (JSIL.CompareValues(float.y, float2.y)));
    var flag = (num >>> 0) > (0 >>> 0);
    if (flag) {
      var result = num;
    } else {
      result = (JSIL.CompareValues(float.x, float2.x));
    }
    return result;
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.Triangulation+<>c__DisplayClass20_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass20_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lGetSortedVertices$gb__0", 
      new JSIL.MethodSignature($.Int32, [$asm09.TypeRef("Fusee.Jometri.Vertex"), $asm09.TypeRef("Fusee.Jometri.Vertex")]), 
      $l$gc__DisplayClass20_0_$lGetSortedVertices$gb__0
    );

    $.Field({Static:false, Public:true }, "geometry", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:true }, "face", $asm09.TypeRef("Fusee.Jometri.Face"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.TriStatusEdge */ 

(function TriStatusEdge$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.Geometry)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.Fusee.Jometri.Face)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0A.Fusee.Math.Core.float3)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };


  function TriStatusEdge__ctor (geometry, face, origin, target, eventPoint) {
    this._geometry = geometry;
    this._face = face.MemberwiseClone();
    this._origin = origin.MemberwiseClone();
    this._target = target.MemberwiseClone();
    this.SetKey(eventPoint.MemberwiseClone());
  }; 

  function TriStatusEdge_SetKey (eventPoint) {
    var float = (this._geometry).Get2DVertPos(this._face.MemberwiseClone(), this._target.Handle).MemberwiseClone();
    var float2 = (this._geometry).Get2DVertPos(this._face.MemberwiseClone(), this._origin.Handle).MemberwiseClone();
    var y = +(this._geometry).Get2DVertPos(this._face.MemberwiseClone(), eventPoint.Handle).y;
    var num = +(((+float.y - +float2.y) / (+float.x - +float2.x)));
    var flag = ((float.y === float2.y)) || 
    ((float.x === float2.x));
    if (flag) {
      this.IntersectionPointX = +float2.x;
    } else {
      var num2 = +float2.y - (num * +float2.x);
      this.IntersectionPointX = +(((y - num2) / num));
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm0F.TypeRef("System.Object"), 
      Name: "Fusee.Jometri.TriStatusEdge", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("Fusee.Jometri.Geometry"), $asm09.TypeRef("Fusee.Jometri.Face"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex"), $asm09.TypeRef("Fusee.Jometri.Vertex"), 
          $asm09.TypeRef("Fusee.Jometri.Vertex")
        ]), 
      TriStatusEdge__ctor
    );

    $.Method({Static:false, Public:false}, "SetKey", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      TriStatusEdge_SetKey
    );

    $.Field({Static:false, Public:false}, "IntersectionPointX", $.Single);

    $.Field({Static:false, Public:false}, "HalfEdgeHandle", $.Int32);

    $.Field({Static:false, Public:false}, "HelperVertexHandle", $.Int32);

    $.Field({Static:false, Public:false}, "IsMergeVertex", $.Boolean);

    $.Field({Static:false, Public:false}, "_origin", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false}, "_target", $asm09.TypeRef("Fusee.Jometri.Vertex"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_geometry", $asm09.TypeRef("Fusee.Jometri.Geometry"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_face", $asm09.TypeRef("Fusee.Jometri.Face"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Jometri.TriSweepLineStatus */ 

(function TriSweepLineStatus$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.Fusee.Jometri.BinarySearchTree$b2.Of($asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0F.System.Single)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.Fusee.Jometri.Node$b2.Of($asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0F.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0F.System.Int32)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.TriStatusEdge))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.TriStatusEdge))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0F.System.Collections.IEnumerator)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm09.Fusee.Jometri.TriStatusEdge)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0F.System.IDisposable)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm09.Fusee.Jometri.Vertex)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge)))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge)))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.TriStatusEdge).GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm0F.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.TriStatusEdge).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm0F.System.IDisposable.Dispose)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerable$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge)).GetEnumerator)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm0F.System.Collections.Generic.IEnumerator$b1.Of($asm09.Fusee.Jometri.Node$b2.Of($asm0F.System.Single, $asm09.Fusee.Jometri.TriStatusEdge)).get_Current)) ();
  };


  function TriSweepLineStatus__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function TriSweepLineStatus_DeleteNode$00 (key) {
    if (this._globalRoot !== null) {
      this._globalRoot = $thisType.DeleteNode(this._globalRoot, key);
    }
  }; 

  function TriSweepLineStatus_DeleteNode$01 (root, key) {
    var flag = root === null;
    if (flag) {
      var result = null;
    } else {
      var flag2 = (JSIL.CompareValues(key, root.Node$b2$Key$value)) < 0;
      if (flag2) {
        root.LeftNode = $thisType.DeleteNode(root.LeftNode, key);
      } else {
        var flag3 = (JSIL.CompareValues(key, root.Node$b2$Key$value)) > 0;
        if (flag3) {
          root.RightNode = $thisType.DeleteNode(root.RightNode, key);
        } else {
          var flag4 = (root.LeftNode === null) && 
          (root.RightNode === null);
          if (flag4) {
            result = null;
            return result;
          }
          var flag5 = root.LeftNode === null;
          if (flag5) {
            root = root.RightNode;
            result = root;
            return result;
          }
          var flag6 = root.RightNode === null;
          if (flag6) {
            root = root.LeftNode;
            result = root;
            return result;
          }
          var node = $T00().FindMin(root.RightNode);
          root.Node$b2$Value$value = node.Node$b2$Value$value;
          root.Node$b2$Key$value = +node.Node$b2$Key$value;
          root.RightNode = $thisType.DeleteNode(root.RightNode, node.Node$b2$Key$value);
        }
      }
      result = root;
    }
    return result;
  }; 

  function TriSweepLineStatus_FindLargestSmallerThanInBalanced$02 (key) {
    var node = $thisType.FindLargestSmallerThanInBalanced(this._globalRoot, key);
    return node.Node$b2$Value$value;
  }; 

  function TriSweepLineStatus_FindLargestSmallerThanInBalanced$03 (root, key) {
    var result = root;

    while (root !== null) {
      var flag = ((JSIL.CompareValues(root.Node$b2$Key$value, key)) > 0) || 
      ((JSIL.CompareValues(root.Node$b2$Key$value, key)) === 0);
      if (flag) {
        root = root.LeftNode;
      } else {
        result = root;
        root = root.RightNode;
      }
    }
    return result;
  }; 

  function TriSweepLineStatus_FindNode$04 (key) {
    var node = $thisType.FindNode(this._globalRoot, key);
    return node.Node$b2$Value$value;
  }; 

  function TriSweepLineStatus_FindNode$05 (root, key) {
    var node = null;
    var flag = root.LeftNode !== null;
    if (flag) {
      node = $thisType.FindNode(root.LeftNode, key);
    }
    var flag2 = (JSIL.CompareValues(key, root.Node$b2$Key$value)) === 0;
    if (flag2) {
      var result = root;
    } else {
      var flag3 = (node === null) && 
      (root.RightNode !== null);
      if (flag3) {
        node = $thisType.FindNode(root.RightNode, key);
      }
      result = node;
    }
    return result;
  }; 

  function TriSweepLineStatus_FindStatusEdgeWithHandle (handle) {
    var enumerator = $IM00().Call($T00().prototype.PreorderTraverseTreeValues.call(this), null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        var flag = (current.HalfEdgeHandle | 0) === (handle | 0);
        if (flag) {
          var result = current;
          return result;
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
    result = null;
    return result;
  }; 

  function TriSweepLineStatus_InsertNode$06 (key, value) {
    if (this._globalRoot === null) {
      this._globalRoot = new ($T02())(key, value);
    } else {
      $thisType.InsertNode(this._globalRoot, key, value);
    }
  }; 

  function TriSweepLineStatus_InsertNode$07 (root, key, value) {
    var flag = root === null;
    if (flag) {
      root = new ($T02())(key, value);
    } else {
      var flag2 = (JSIL.CompareValues(key, root.Node$b2$Key$value)) <= 0;
      if (flag2) {
        root.LeftNode = $thisType.InsertNode(root.LeftNode, key, value);
      } else {
        var flag3 = (JSIL.CompareValues(key, root.Node$b2$Key$value)) > 0;
        if (flag3) {
          root.RightNode = $thisType.InsertNode(root.RightNode, key, value);
        }
      }
    }
    return root;
  }; 

  function TriSweepLineStatus_UpdateNodes (eventPoint) {
    var enumerator = $IM04().Call($T00().prototype.PreorderTraverseTreeNodes.call(this), null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM05().Call(enumerator, null);
        (current.Node$b2$Value$value).SetKey(eventPoint.MemberwiseClone());
        current.Node$b2$Key$value = +current.Node$b2$Value$value.IntersectionPointX;
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("Fusee.Jometri.BinarySearchTree`2", [$asm0F.TypeRef("System.Single"), $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), 
      Name: "Fusee.Jometri.TriSweepLineStatus", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TriSweepLineStatus__ctor
    );

    $.Method({Static:false, Public:true }, "DeleteNode", 
      JSIL.MethodSignature.Action($.Single), 
      TriSweepLineStatus_DeleteNode$00
    );

    $.Method({Static:true , Public:false}, "DeleteNode", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), $.Single]), 
      TriSweepLineStatus_DeleteNode$01
    );

    $.Method({Static:false, Public:true }, "FindLargestSmallerThanInBalanced", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.TriStatusEdge"), [$.Single]), 
      TriSweepLineStatus_FindLargestSmallerThanInBalanced$02
    );

    $.Method({Static:true , Public:false}, "FindLargestSmallerThanInBalanced", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), $.Single]), 
      TriSweepLineStatus_FindLargestSmallerThanInBalanced$03
    );

    $.Method({Static:false, Public:true }, "FindNode", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.TriStatusEdge"), [$.Single]), 
      TriSweepLineStatus_FindNode$04
    );

    $.Method({Static:true , Public:false}, "FindNode", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), [$asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), $.Single]), 
      TriSweepLineStatus_FindNode$05
    );

    $.Method({Static:false, Public:false}, "FindStatusEdgeWithHandle", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.TriStatusEdge"), [$.Int32]), 
      TriSweepLineStatus_FindStatusEdgeWithHandle
    );

    $.Method({Static:false, Public:true }, "InsertNode", 
      new JSIL.MethodSignature(null, [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), 
      TriSweepLineStatus_InsertNode$06
    );

    $.Method({Static:true , Public:false}, "InsertNode", 
      new JSIL.MethodSignature($asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), [
          $asm09.TypeRef("Fusee.Jometri.Node`2", [$.Single, $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")]), $.Single, 
          $asm09.TypeRef("Fusee.Jometri.TriStatusEdge")
        ]), 
      TriSweepLineStatus_InsertNode$07
    );

    $.Method({Static:false, Public:false}, "UpdateNodes", 
      JSIL.MethodSignature.Action($asm09.TypeRef("Fusee.Jometri.Vertex")), 
      TriSweepLineStatus_UpdateNodes
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Fusee.Jometri.VertexType */ 

JSIL.MakeEnum(
  {
    FullName: "Fusee.Jometri.VertexType", 
    BaseType: $asm0F.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    START_VERTEX: 0, 
    END_VERTEX: 1, 
    SPLIT_VERTEX: 2, 
    MERGE_VERTEX: 3, 
    REGULAR_VERTEX: 4, 
  }
);

